

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 20 16:24:16 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	smallconst
    22  000300                     __psmallconst:
    23                           	opt stack 0
    24  000300  00                 	db	0
    25  000301                     _dpowers:
    26                           	opt stack 0
    27  000301  0001               	dw	1
    28  000303  000A               	dw	10
    29  000305  0064               	dw	100
    30  000307  03E8               	dw	1000
    31  000309  2710               	dw	10000
    32  00030B                     __end_of_dpowers:
    33                           	opt stack 0
    34  0000                     _RXFCON0	set	3540
    35  0000                     _RXFCON1	set	3541
    36  0000                     _B0CONbits	set	3616
    37  0000                     _B0D0	set	3622
    38  0000                     _B0D1	set	3623
    39  0000                     _B0D2	set	3624
    40  0000                     _B0D3	set	3625
    41  0000                     _B0D4	set	3626
    42  0000                     _B0D5	set	3627
    43  0000                     _B0D6	set	3628
    44  0000                     _B0D7	set	3629
    45  0000                     _B0DLC	set	3621
    46  0000                     _B0EIDH	set	3619
    47  0000                     _B0EIDL	set	3620
    48  0000                     _B0SIDH	set	3617
    49  0000                     _B0SIDL	set	3618
    50  0000                     _RXB1CON	set	3920
    51  0000                     _RXB1CONbits	set	3920
    52  0000                     _RXB1D0	set	3926
    53  0000                     _RXB1D1	set	3927
    54  0000                     _RXB1D2	set	3928
    55  0000                     _RXB1D3	set	3929
    56  0000                     _RXB1D4	set	3930
    57  0000                     _RXB1D5	set	3931
    58  0000                     _RXB1D6	set	3932
    59  0000                     _RXB1D7	set	3933
    60  0000                     _RXB1DLC	set	3925
    61  0000                     _RXB1EIDH	set	3923
    62  0000                     _RXB1EIDL	set	3924
    63  0000                     _RXB1SIDH	set	3921
    64  0000                     _RXB1SIDL	set	3922
    65  0000                     _RXF0EIDH	set	3842
    66  0000                     _RXF0EIDL	set	3843
    67  0000                     _RXF0SIDH	set	3840
    68  0000                     _RXF0SIDL	set	3841
    69  0000                     _RXF2EIDH	set	3850
    70  0000                     _RXF2EIDL	set	3851
    71  0000                     _RXF2SIDH	set	3848
    72  0000                     _RXF2SIDL	set	3849
    73  0000                     _RXM0EIDH	set	3866
    74  0000                     _RXM0EIDL	set	3867
    75  0000                     _RXM0SIDH	set	3864
    76  0000                     _RXM0SIDL	set	3865
    77  0000                     _RXM1EIDH	set	3870
    78  0000                     _RXM1EIDL	set	3871
    79  0000                     _RXM1SIDH	set	3868
    80  0000                     _RXM1SIDL	set	3869
    81  0000                     _TXB0CONbits	set	3904
    82  0000                     _TXB0D0	set	3910
    83  0000                     _TXB0D1	set	3911
    84  0000                     _TXB0D2	set	3912
    85  0000                     _TXB0D3	set	3913
    86  0000                     _TXB0D4	set	3914
    87  0000                     _TXB0D5	set	3915
    88  0000                     _TXB0D6	set	3916
    89  0000                     _TXB0D7	set	3917
    90  0000                     _TXB0DLC	set	3909
    91  0000                     _TXB0EIDH	set	3907
    92  0000                     _TXB0EIDL	set	3908
    93  0000                     _TXB0SIDH	set	3905
    94  0000                     _TXB0SIDL	set	3906
    95  0000                     _ADCON1bits	set	4033
    96  0000                     _BAUDCONbits	set	4024
    97  0000                     _BRGCON1	set	3952
    98  0000                     _BRGCON2	set	3953
    99  0000                     _BRGCON3	set	3954
   100  0000                     _CANCON	set	3951
   101  0000                     _CANSTAT	set	3950
   102  0000                     _CIOCONbits	set	3955
   103  0000                     _ECANCON	set	3959
   104  0000                     _LATAbits	set	3977
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _OSCTUNEbits	set	3995
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _RXB0CON	set	3936
   109  0000                     _RXB0CONbits	set	3936
   110  0000                     _RXB0D0	set	3942
   111  0000                     _RXB0D1	set	3943
   112  0000                     _RXB0D2	set	3944
   113  0000                     _RXB0D3	set	3945
   114  0000                     _RXB0D4	set	3946
   115  0000                     _RXB0D5	set	3947
   116  0000                     _RXB0D6	set	3948
   117  0000                     _RXB0D7	set	3949
   118  0000                     _RXB0DLC	set	3941
   119  0000                     _RXB0EIDH	set	3939
   120  0000                     _RXB0EIDL	set	3940
   121  0000                     _RXB0SIDH	set	3937
   122  0000                     _RXB0SIDL	set	3938
   123  0000                     _SPBRG	set	4015
   124  0000                     _TRISAbits	set	3986
   125  0000                     _TRISBbits	set	3987
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TXREG	set	4013
   128  0000                     _TXSTAbits	set	4012
   129  0000                     _RXB1IF	set	32033
   130  00030B                     STR_4:
   131  00030B  54                 	db	84	;'T'
   132  00030C  65                 	db	101	;'e'
   133  00030D  6D                 	db	109	;'m'
   134  00030E  70                 	db	112	;'p'
   135  00030F  65                 	db	101	;'e'
   136  000310  72                 	db	114	;'r'
   137  000311  61                 	db	97	;'a'
   138  000312  74                 	db	116	;'t'
   139  000313  75                 	db	117	;'u'
   140  000314  72                 	db	114	;'r'
   141  000315  65                 	db	101	;'e'
   142  000316  20                 	db	32
   143  000317  3D                 	db	61	;'='
   144  000318  20                 	db	32
   145  000319  25                 	db	37
   146  00031A  64                 	db	100	;'d'
   147  00031B  20                 	db	32
   148  00031C  46                 	db	70	;'F'
   149  00031D  61                 	db	97	;'a'
   150  00031E  68                 	db	104	;'h'
   151  00031F  72                 	db	114	;'r'
   152  000320  65                 	db	101	;'e'
   153  000321  6E                 	db	110	;'n'
   154  000322  68                 	db	104	;'h'
   155  000323  65                 	db	101	;'e'
   156  000324  69                 	db	105	;'i'
   157  000325  74                 	db	116	;'t'
   158  000326  0A                 	db	10
   159  000327  0D                 	db	13
   160  000328  00                 	db	0
   161  000329                     STR_3:
   162  000329  44                 	db	68	;'D'
   163  00032A  61                 	db	97	;'a'
   164  00032B  74                 	db	116	;'t'
   165  00032C  61                 	db	97	;'a'
   166  00032D  20                 	db	32
   167  00032E  72                 	db	114	;'r'
   168  00032F  65                 	db	101	;'e'
   169  000330  63                 	db	99	;'c'
   170  000331  65                 	db	101	;'e'
   171  000332  69                 	db	105	;'i'
   172  000333  76                 	db	118	;'v'
   173  000334  65                 	db	101	;'e'
   174  000335  64                 	db	100	;'d'
   175  000336  3A                 	db	58	;':'
   176  000337  20                 	db	32
   177  000338  25                 	db	37
   178  000339  64                 	db	100	;'d'
   179  00033A  20                 	db	32
   180  00033B  62                 	db	98	;'b'
   181  00033C  79                 	db	121	;'y'
   182  00033D  74                 	db	116	;'t'
   183  00033E  65                 	db	101	;'e'
   184  00033F  28                 	db	40
   185  000340  73                 	db	115	;'s'
   186  000341  29                 	db	41
   187  000342  2C                 	db	44
   188  000343  20                 	db	32
   189  000344  20                 	db	32
   190  000345  00                 	db	0
   191  000346                     STR_2:
   192  000346  48                 	db	72	;'H'
   193  000347  65                 	db	101	;'e'
   194  000348  6C                 	db	108	;'l'
   195  000349  6C                 	db	108	;'l'
   196  00034A  6F                 	db	111	;'o'
   197  00034B  20                 	db	32
   198  00034C  66                 	db	102	;'f'
   199  00034D  72                 	db	114	;'r'
   200  00034E  6F                 	db	111	;'o'
   201  00034F  6D                 	db	109	;'m'
   202  000350  20                 	db	32
   203  000351  43                 	db	67	;'C'
   204  000352  6F                 	db	111	;'o'
   205  000353  72                 	db	114	;'r'
   206  000354  6E                 	db	110	;'n'
   207  000355  65                 	db	101	;'e'
   208  000356  6C                 	db	108	;'l'
   209  000357  6C                 	db	108	;'l'
   210  000358  20                 	db	32
   211  000359  43                 	db	67	;'C'
   212  00035A  75                 	db	117	;'u'
   213  00035B  70                 	db	112	;'p'
   214  00035C  21                 	db	33
   215  00035D  0A                 	db	10
   216  00035E  0D                 	db	13
   217  00035F  00                 	db	0
   218  000360                     STR_1:
   219  000360  1B                 	db	27
   220  000361  5B                 	db	91	;'['
   221  000362  32                 	db	50	;'2'
   222  000363  4A                 	db	74	;'J'
   223  000364  00                 	db	0
   224                           
   225                           ; #config settings
   226  000365  00                 	db	0	; dummy byte at the end
   227  0000                     
   228                           	psect	cinit
   229  000708                     __pcinit:
   230                           	opt stack 0
   231  000708                     start_initialization:
   232                           	opt stack 0
   233  000708                     __initialization:
   234                           	opt stack 0
   235                           
   236                           ; Clear objects allocated to COMRAM (19 bytes)
   237  000708  EE00  F019         	lfsr	0,__pbssCOMRAM
   238  00070C  0E13               	movlw	19
   239  00070E                     clear_0:
   240  00070E  6AEE               	clrf	postinc0,c
   241  000710  06E8               	decf	wreg,f,c
   242  000712  E1FD               	bnz	clear_0
   243  000714                     end_of_initialization:
   244                           	opt stack 0
   245  000714                     __end_of__initialization:
   246                           	opt stack 0
   247  000714  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248  000716  6EF8               	movwf	tblptru,c
   249  000718  0100               	movlb	0
   250  00071A  EFF9  F002         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	bssCOMRAM
   256  000019                     __pbssCOMRAM:
   257                           	opt stack 0
   258  000019                     _heartbeatCount:
   259                           	opt stack 0
   260  000019                     	ds	2
   261  00001B                     _CAN_RX_Adress_H:
   262                           	opt stack 0
   263  00001B                     	ds	1
   264  00001C                     _CAN_RX_Adress_L:
   265                           	opt stack 0
   266  00001C                     	ds	1
   267  00001D                     _CAN_TX_Adress_H:
   268                           	opt stack 0
   269  00001D                     	ds	1
   270  00001E                     _CAN_TX_Adress_L:
   271                           	opt stack 0
   272  00001E                     	ds	1
   273  00001F                     _temp_D0:
   274                           	opt stack 0
   275  00001F                     	ds	1
   276  000020                     _temp_D1:
   277                           	opt stack 0
   278  000020                     	ds	1
   279  000021                     _temp_D2:
   280                           	opt stack 0
   281  000021                     	ds	1
   282  000022                     _temp_D3:
   283                           	opt stack 0
   284  000022                     	ds	1
   285  000023                     _temp_D4:
   286                           	opt stack 0
   287  000023                     	ds	1
   288  000024                     _temp_D5:
   289                           	opt stack 0
   290  000024                     	ds	1
   291  000025                     _temp_D6:
   292                           	opt stack 0
   293  000025                     	ds	1
   294  000026                     _temp_D7:
   295                           	opt stack 0
   296  000026                     	ds	1
   297  000027                     _temp_DLC:
   298                           	opt stack 0
   299  000027                     	ds	1
   300  000028                     _temp_EIDH:
   301                           	opt stack 0
   302  000028                     	ds	1
   303  000029                     _temp_EIDL:
   304                           	opt stack 0
   305  000029                     	ds	1
   306  00002A                     _temp_SIDH:
   307                           	opt stack 0
   308  00002A                     	ds	1
   309  00002B                     _temp_SIDL:
   310                           	opt stack 0
   311  00002B                     	ds	1
   312                           tblptru	equ	0xFF8
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	cstackCOMRAM
   317  000001                     __pcstackCOMRAM:
   318                           	opt stack 0
   319  000001                     ?___lwdiv:
   320                           	opt stack 0
   321  000001                     ECAN_Receive@RXMsgFlag:
   322                           	opt stack 0
   323  000001                     putch@byte:
   324                           	opt stack 0
   325  000001                     ___lwdiv@dividend:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x0
   329  000001                     	ds	2
   330  000003                     ___lwdiv@divisor:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x2
   334  000003                     	ds	2
   335  000005                     ___lwdiv@quotient:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x4
   339  000005                     	ds	2
   340  000007                     ___lwdiv@counter:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x6
   344  000007                     	ds	1
   345  000008                     ?___lwmod:
   346                           	opt stack 0
   347  000008                     ___lwmod@dividend:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x7
   351  000008                     	ds	2
   352  00000A                     ___lwmod@divisor:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x9
   356  00000A                     	ds	2
   357  00000C                     ___lwmod@counter:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0xB
   361  00000C                     	ds	1
   362  00000D                     ?_printf:
   363                           	opt stack 0
   364  00000D                     printf@f:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xC
   368  00000D                     	ds	4
   369  000011                     ??_printf:
   370                           
   371                           ; 0 bytes @ 0x10
   372  000011                     	ds	1
   373  000012                     printf@ap:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x11
   377  000012                     	ds	2
   378  000014                     printf@flag:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x13
   382  000014                     	ds	1
   383  000015                     printf@prec:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x14
   387  000015                     	ds	1
   388  000016                     printf@val:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x15
   392  000016                     	ds	2
   393  000018                     printf@c:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x17
   397  000018                     	ds	1
   398  000019                     tblptru	equ	0xFF8
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           ; 0 bytes @ 0x18
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 71 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;		None               void
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   422 ;;      Params:         0       0       0       0
   423 ;;      Locals:         0       0       0       0
   424 ;;      Temps:          0       0       0       0
   425 ;;      Totals:         0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels required when called:    2
   428 ;; This function calls:
   429 ;;		_ECAN_Receive
   430 ;;		_InitDevice
   431 ;;		_printf
   432 ;;		_putch
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text0
   439  0005F2                     __ptext0:
   440                           	opt stack 0
   441  0005F2                     _main:
   442                           	opt stack 29
   443                           
   444                           ;main.c: 73: InitDevice();
   445                           
   446                           ;incstack = 0
   447  0005F2  EC70  F003         	call	_InitDevice	;wreg free
   448                           
   449                           ;main.c: 74: LATAbits.LATA0 = 1;
   450  0005F6  8089               	bsf	3977,0,c	;volatile
   451                           
   452                           ;main.c: 76: printf( "\x1b[2J");
   453  0005F8  0E60               	movlw	low STR_1
   454  0005FA  6E0D               	movwf	printf@f,c
   455  0005FC  0E03               	movlw	high STR_1
   456  0005FE  6E0E               	movwf	printf@f+1,c
   457  000600  ECB3  F001         	call	_printf	;wreg free
   458                           
   459                           ;main.c: 77: {putch(0x0a); putch(0x0d);};
   460  000604  0E0A               	movlw	10
   461  000606  EC99  F003         	call	_putch
   462  00060A  0E0D               	movlw	13
   463  00060C  EC99  F003         	call	_putch
   464                           
   465                           ;main.c: 78: printf("Hello from Cornell Cup!\n\r");
   466  000610  0E46               	movlw	low STR_2
   467  000612  6E0D               	movwf	printf@f,c
   468  000614  0E03               	movlw	high STR_2
   469  000616  6E0E               	movwf	printf@f+1,c
   470  000618  ECB3  F001         	call	_printf	;wreg free
   471  00061C                     l1248:
   472                           
   473                           ;main.c: 81: if (ECAN_Receive()){
   474  00061C  EC42  F002         	call	_ECAN_Receive	;wreg free
   475  000620  0900               	iorlw	0
   476  000622  B4D8               	btfsc	status,2,c
   477  000624  D7FB               	goto	l1248
   478                           
   479                           ;main.c: 83: printf("Data received: %d byte(s),  ", temp_DLC);
   480  000626  0E29               	movlw	low STR_3
   481  000628  6E0D               	movwf	printf@f,c
   482  00062A  0E03               	movlw	high STR_3
   483  00062C  6E0E               	movwf	printf@f+1,c
   484  00062E  C027  F00F         	movff	_temp_DLC,?_printf+2
   485  000632  6A10               	clrf	?_printf+3,c
   486  000634  ECB3  F001         	call	_printf	;wreg free
   487                           
   488                           ;main.c: 84: printf("Temperature = %d Fahrenheit\n\r", temp_D0);
   489  000638  0E0B               	movlw	low STR_4
   490  00063A  6E0D               	movwf	printf@f,c
   491  00063C  0E03               	movlw	high STR_4
   492  00063E  6E0E               	movwf	printf@f+1,c
   493  000640  C01F  F00F         	movff	_temp_D0,?_printf+2
   494  000644  6A10               	clrf	?_printf+3,c
   495  000646  ECB3  F001         	call	_printf	;wreg free
   496                           
   497                           ;main.c: 86: else{
   498                           
   499                           ;main.c: 85: }
   500  00064A  D7E8               	goto	l1248
   501  00064C                     __end_of_main:
   502                           	opt stack 0
   503                           tblptru	equ	0xFF8
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           status	equ	0xFD8
   507                           
   508 ;; *************** function _printf *****************
   509 ;; Defined at:
   510 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  f               2   12[COMRAM] PTR const unsigned char 
   513 ;;		 -> STR_4(30), STR_3(29), STR_2(26), STR_1(5), 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  tmpval          4    0        struct .
   516 ;;  cp              3    0        PTR const unsigned char 
   517 ;;  val             2   21[COMRAM] unsigned int 
   518 ;;  ap              2   17[COMRAM] PTR void [1]
   519 ;;		 -> ?_printf(2), 
   520 ;;  len             2    0        unsigned int 
   521 ;;  c               1   23[COMRAM] char 
   522 ;;  prec            1   20[COMRAM] char 
   523 ;;  flag            1   19[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  2   12[COMRAM] int 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   533 ;;      Params:         4       0       0       0
   534 ;;      Locals:         7       0       0       0
   535 ;;      Temps:          1       0       0       0
   536 ;;      Totals:        12       0       0       0
   537 ;;Total ram usage:       12 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    1
   540 ;; This function calls:
   541 ;;		___lwdiv
   542 ;;		___lwmod
   543 ;;		_putch
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text1
   550  000366                     __ptext1:
   551                           	opt stack 0
   552  000366                     _printf:
   553                           	opt stack 29
   554                           
   555                           ;doprnt.c: 466: va_list ap;
   556                           ;doprnt.c: 499: signed char c;
   557                           ;doprnt.c: 506: signed char prec;
   558                           ;doprnt.c: 508: unsigned char flag;
   559                           ;doprnt.c: 523: union {
   560                           ;doprnt.c: 524: unsigned long vd;
   561                           ;doprnt.c: 525: double integ;
   562                           ;doprnt.c: 526: } tmpval;
   563                           ;doprnt.c: 528: unsigned int val;
   564                           ;doprnt.c: 529: unsigned len;
   565                           ;doprnt.c: 530: const char * cp;
   566                           ;doprnt.c: 533: *ap = __va_start();
   567                           
   568                           ;incstack = 0
   569  000366  0E0F               	movlw	low (?_printf+2)
   570  000368  6E12               	movwf	printf@ap,c
   571  00036A  0E00               	movlw	high (?_printf+2)
   572  00036C  6E13               	movwf	printf@ap+1,c
   573                           
   574                           ;doprnt.c: 536: while(c = *f++) {
   575  00036E  D07D               	goto	l1234
   576  000370                     l1188:
   577                           
   578                           ;doprnt.c: 538: if(c != '%')
   579  000370  0E25               	movlw	37
   580  000372  1818               	xorwf	printf@c,w,c
   581  000374  B4D8               	btfsc	status,2,c
   582  000376  D004               	goto	l1192
   583                           
   584                           ;doprnt.c: 540: {
   585                           ;doprnt.c: 541: (putch(c) );
   586  000378  5018               	movf	printf@c,w,c
   587  00037A  EC99  F003         	call	_putch
   588                           
   589                           ;doprnt.c: 542: continue;
   590  00037E  D075               	goto	l1234
   591  000380                     l1192:
   592                           
   593                           ;doprnt.c: 543: }
   594                           ;doprnt.c: 548: flag = 0;
   595  000380  0E00               	movlw	0
   596  000382  6E14               	movwf	printf@flag,c
   597                           
   598                           ;doprnt.c: 822: }
   599                           
   600                           ;doprnt.c: 813: continue;
   601                           
   602                           ;doprnt.c: 802: default:
   603                           
   604                           ;doprnt.c: 698: case 'i':
   605                           ;doprnt.c: 699: break;
   606                           
   607                           ;doprnt.c: 697: case 'd':
   608                           
   609                           ;doprnt.c: 638: goto alldone;
   610                           
   611                           ;doprnt.c: 637: case 0:
   612                           
   613                           ;doprnt.c: 635: switch(c = *f++) {
   614  000384  C00D  FFF6         	movff	printf@f,tblptrl
   615  000388  C00E  FFF7         	movff	printf@f+1,tblptrh
   616  00038C  4A0D               	infsnz	printf@f,f,c
   617  00038E  2A0E               	incf	printf@f+1,f,c
   618  000390                     	if	0	;tblptru may be non-zero
   619  000390                     	endif
   620  000390                     	if	0	;tblptru may be non-zero
   621  000390                     	endif
   622  000390  0008               	tblrd		*
   623  000392  CFF5 F018          	movff	tablat,printf@c
   624  000396  5018               	movf	printf@c,w,c
   625                           
   626                           ; Switch size 1, requested type "space"
   627                           ; Number of cases is 3, Range of values is 0 to 105
   628                           ; switch strategies available:
   629                           ; Name         Instructions Cycles
   630                           ; simple_byte           10     6 (average)
   631                           ;	Chosen strategy is simple_byte
   632  000398  0A00               	xorlw	0	; case 0
   633  00039A  B4D8               	btfsc	status,2,c
   634  00039C  0012               	return	
   635  00039E  0A64               	xorlw	100	; case 100
   636  0003A0  B4D8               	btfsc	status,2,c
   637  0003A2  D003               	goto	l1198
   638  0003A4  0A0D               	xorlw	13	; case 105
   639  0003A6  A4D8               	btfss	status,2,c
   640  0003A8  D060               	goto	l1234
   641  0003AA                     l1198:
   642                           
   643                           ;doprnt.c: 1253: {
   644                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   645  0003AA  C012  FFD9         	movff	printf@ap,fsr2l
   646  0003AE  C013  FFDA         	movff	printf@ap+1,fsr2h
   647  0003B2  CFDE F016          	movff	postinc2,printf@val
   648  0003B6  CFDD F017          	movff	postdec2,printf@val+1
   649  0003BA  0E02               	movlw	2
   650  0003BC  2612               	addwf	printf@ap,f,c
   651  0003BE  0E00               	movlw	0
   652  0003C0  2213               	addwfc	printf@ap+1,f,c
   653                           
   654                           ;doprnt.c: 1261: if((int)val < 0) {
   655  0003C2  AE17               	btfss	printf@val+1,7,c
   656  0003C4  D006               	goto	l1208
   657                           
   658                           ;doprnt.c: 1262: flag |= 0x03;
   659  0003C6  0E03               	movlw	3
   660  0003C8  1214               	iorwf	printf@flag,f,c
   661                           
   662                           ;doprnt.c: 1263: val = -val;
   663  0003CA  6C16               	negf	printf@val,c
   664  0003CC  1E17               	comf	printf@val+1,f,c
   665  0003CE  B0D8               	btfsc	status,0,c
   666  0003D0  2A17               	incf	printf@val+1,f,c
   667  0003D2                     l1208:
   668                           
   669                           ;doprnt.c: 1264: }
   670                           ;doprnt.c: 1266: }
   671                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   672  0003D2  0E01               	movlw	1
   673  0003D4  6E18               	movwf	printf@c,c
   674  0003D6                     l1210:
   675  0003D6  0E05               	movlw	5
   676  0003D8  1818               	xorwf	printf@c,w,c
   677  0003DA  B4D8               	btfsc	status,2,c
   678  0003DC  D012               	goto	l1222
   679                           
   680                           ;doprnt.c: 1306: if(val < dpowers[c])
   681  0003DE  5018               	movf	printf@c,w,c
   682  0003E0  0D02               	mullw	2
   683  0003E2  0E01               	movlw	low _dpowers
   684  0003E4  24F3               	addwf	prodl,w,c
   685  0003E6  6EF6               	movwf	tblptrl,c
   686  0003E8  0E03               	movlw	high _dpowers
   687  0003EA  20F4               	addwfc	prodh,w,c
   688  0003EC  6EF7               	movwf	tblptrh,c
   689  0003EE                     	if	0	;There are less than 3 active tblptr bytes
   690  0003EE                     	endif
   691  0003EE  0009               	tblrd		*+
   692  0003F0  50F5               	movf	tablat,w,c
   693  0003F2  5C16               	subwf	printf@val,w,c
   694  0003F4  0009               	tblrd		*+
   695  0003F6  50F5               	movf	tablat,w,c
   696  0003F8  5817               	subwfb	printf@val+1,w,c
   697  0003FA  A0D8               	btfss	status,0,c
   698  0003FC  D002               	goto	l1222
   699                           
   700                           ;doprnt.c: 1307: break;
   701  0003FE  2A18               	incf	printf@c,f,c
   702  000400  D7EA               	goto	l1210
   703  000402                     l1222:
   704                           
   705                           ;doprnt.c: 1422: {
   706                           ;doprnt.c: 1438: if(flag & 0x03)
   707  000402  C014  F011         	movff	printf@flag,??_printf
   708  000406  0E03               	movlw	3
   709  000408  1611               	andwf	??_printf,f,c
   710  00040A  B4D8               	btfsc	status,2,c
   711  00040C  D003               	goto	l1226
   712                           
   713                           ;doprnt.c: 1439: (putch('-') );
   714  00040E  0E2D               	movlw	45
   715  000410  EC99  F003         	call	_putch
   716  000414                     l1226:
   717                           
   718                           ;doprnt.c: 1469: }
   719                           ;doprnt.c: 1472: prec = c;
   720  000414  C018  F015         	movff	printf@c,printf@prec
   721                           
   722                           ;doprnt.c: 1474: while(prec--) {
   723  000418  D024               	goto	l1232
   724  00041A                     l1228:
   725                           
   726                           ;doprnt.c: 1478: {
   727                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   728  00041A  5015               	movf	printf@prec,w,c
   729  00041C  0D02               	mullw	2
   730  00041E  0E01               	movlw	low _dpowers
   731  000420  24F3               	addwf	prodl,w,c
   732  000422  6EF6               	movwf	tblptrl,c
   733  000424  0E03               	movlw	high _dpowers
   734  000426  20F4               	addwfc	prodh,w,c
   735  000428  6EF7               	movwf	tblptrh,c
   736  00042A                     	if	0	;There are less than 3 active tblptr bytes
   737  00042A                     	endif
   738  00042A  0009               	tblrd		*+
   739  00042C  CFF5 F003          	movff	tablat,___lwdiv@divisor
   740  000430  000A               	tblrd		*-
   741  000432  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   742  000436  C016  F001         	movff	printf@val,___lwdiv@dividend
   743  00043A  C017  F002         	movff	printf@val+1,___lwdiv@dividend+1
   744  00043E  EC26  F003         	call	___lwdiv	;wreg free
   745  000442  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   746  000446  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   747  00044A  0E00               	movlw	0
   748  00044C  6E0B               	movwf	___lwmod@divisor+1,c
   749  00044E  0E0A               	movlw	10
   750  000450  6E0A               	movwf	___lwmod@divisor,c
   751  000452  EC4F  F003         	call	___lwmod	;wreg free
   752  000456  5008               	movf	?___lwmod,w,c
   753  000458  0F30               	addlw	48
   754  00045A  6E18               	movwf	printf@c,c
   755                           
   756                           ;doprnt.c: 1523: }
   757                           ;doprnt.c: 1524: (putch(c) );
   758  00045C  5018               	movf	printf@c,w,c
   759  00045E  EC99  F003         	call	_putch
   760  000462                     l1232:
   761  000462  0615               	decf	printf@prec,f,c
   762  000464  2815               	incf	printf@prec,w,c
   763  000466  A4D8               	btfss	status,2,c
   764  000468  D7D8               	goto	l1228
   765  00046A                     l1234:
   766  00046A  C00D  FFF6         	movff	printf@f,tblptrl
   767  00046E  C00E  FFF7         	movff	printf@f+1,tblptrh
   768  000472  4A0D               	infsnz	printf@f,f,c
   769  000474  2A0E               	incf	printf@f+1,f,c
   770  000476                     	if	0	;tblptru may be non-zero
   771  000476                     	endif
   772  000476                     	if	0	;tblptru may be non-zero
   773  000476                     	endif
   774  000476  0008               	tblrd		*
   775  000478  CFF5 F018          	movff	tablat,printf@c
   776  00047C  5018               	movf	printf@c,w,c
   777  00047E  B4D8               	btfsc	status,2,c
   778  000480  0012               	return	
   779  000482  D776               	goto	l1188
   780  000484                     __end_of_printf:
   781                           	opt stack 0
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           prodh	equ	0xFF4
   787                           prodl	equ	0xFF3
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           postinc2	equ	0xFDE
   791                           postdec2	equ	0xFDD
   792                           fsr2h	equ	0xFDA
   793                           fsr2l	equ	0xFD9
   794                           status	equ	0xFD8
   795                           
   796 ;; *************** function _putch *****************
   797 ;; Defined at:
   798 ;;		line 197 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  byte            1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  byte            1    0[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;		None               void
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   812 ;;      Params:         0       0       0       0
   813 ;;      Locals:         1       0       0       0
   814 ;;      Temps:          0       0       0       0
   815 ;;      Totals:         1       0       0       0
   816 ;;Total ram usage:        1 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;;		_printf
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text2
   827  000732                     __ptext2:
   828                           	opt stack 0
   829  000732                     _putch:
   830                           	opt stack 30
   831                           
   832                           ;incstack = 0
   833                           ;putch@byte stored from wreg
   834  000732  6E01               	movwf	putch@byte,c
   835                           
   836                           ;main.c: 198: TXREG = byte;
   837  000734  C001  FFAD         	movff	putch@byte,4013	;volatile
   838  000738                     l311:
   839  000738  B2AC               	btfsc	4012,1,c	;volatile
   840  00073A  0012               	return	
   841  00073C  D7FD               	goto	l311
   842  00073E                     __end_of_putch:
   843                           	opt stack 0
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           prodh	equ	0xFF4
   849                           prodl	equ	0xFF3
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postinc2	equ	0xFDE
   853                           postdec2	equ	0xFDD
   854                           fsr2h	equ	0xFDA
   855                           fsr2l	equ	0xFD9
   856                           status	equ	0xFD8
   857                           
   858 ;; *************** function ___lwmod *****************
   859 ;; Defined at:
   860 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  dividend        2    7[COMRAM] unsigned int 
   863 ;;  divisor         2    9[COMRAM] unsigned int 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  counter         1   11[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  2    7[COMRAM] unsigned int 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   875 ;;      Params:         4       0       0       0
   876 ;;      Locals:         1       0       0       0
   877 ;;      Temps:          0       0       0       0
   878 ;;      Totals:         5       0       0       0
   879 ;;Total ram usage:        5 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_printf
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text3
   889  00069E                     __ptext3:
   890                           	opt stack 0
   891  00069E                     ___lwmod:
   892                           	opt stack 29
   893                           
   894                           ;incstack = 0
   895  00069E  500A               	movf	___lwmod@divisor,w,c
   896  0006A0  100B               	iorwf	___lwmod@divisor+1,w,c
   897  0006A2  B4D8               	btfsc	status,2,c
   898  0006A4  D018               	goto	l757
   899  0006A6  0E01               	movlw	1
   900  0006A8  6E0C               	movwf	___lwmod@counter,c
   901  0006AA  D004               	goto	l1176
   902  0006AC                     l1174:
   903  0006AC  90D8               	bcf	status,0,c
   904  0006AE  360A               	rlcf	___lwmod@divisor,f,c
   905  0006B0  360B               	rlcf	___lwmod@divisor+1,f,c
   906  0006B2  2A0C               	incf	___lwmod@counter,f,c
   907  0006B4                     l1176:
   908  0006B4  AE0B               	btfss	___lwmod@divisor+1,7,c
   909  0006B6  D7FA               	goto	l1174
   910  0006B8                     l1178:
   911  0006B8  500A               	movf	___lwmod@divisor,w,c
   912  0006BA  5C08               	subwf	___lwmod@dividend,w,c
   913  0006BC  500B               	movf	___lwmod@divisor+1,w,c
   914  0006BE  5809               	subwfb	___lwmod@dividend+1,w,c
   915  0006C0  A0D8               	btfss	status,0,c
   916  0006C2  D004               	goto	l1182
   917  0006C4  500A               	movf	___lwmod@divisor,w,c
   918  0006C6  5E08               	subwf	___lwmod@dividend,f,c
   919  0006C8  500B               	movf	___lwmod@divisor+1,w,c
   920  0006CA  5A09               	subwfb	___lwmod@dividend+1,f,c
   921  0006CC                     l1182:
   922  0006CC  90D8               	bcf	status,0,c
   923  0006CE  320B               	rrcf	___lwmod@divisor+1,f,c
   924  0006D0  320A               	rrcf	___lwmod@divisor,f,c
   925  0006D2  2E0C               	decfsz	___lwmod@counter,f,c
   926  0006D4  D7F1               	goto	l1178
   927  0006D6                     l757:
   928  0006D6  C008  F008         	movff	___lwmod@dividend,?___lwmod
   929  0006DA  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   930  0006DE  0012               	return		;funcret
   931  0006E0                     __end_of___lwmod:
   932                           	opt stack 0
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           prodh	equ	0xFF4
   938                           prodl	equ	0xFF3
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           postinc2	equ	0xFDE
   942                           postdec2	equ	0xFDD
   943                           fsr2h	equ	0xFDA
   944                           fsr2l	equ	0xFD9
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function ___lwdiv *****************
   948 ;; Defined at:
   949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  dividend        2    0[COMRAM] unsigned int 
   952 ;;  divisor         2    2[COMRAM] unsigned int 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  quotient        2    4[COMRAM] unsigned int 
   955 ;;  counter         1    6[COMRAM] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  2    0[COMRAM] unsigned int 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   965 ;;      Params:         4       0       0       0
   966 ;;      Locals:         3       0       0       0
   967 ;;      Temps:          0       0       0       0
   968 ;;      Totals:         7       0       0       0
   969 ;;Total ram usage:        7 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_printf
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text4
   979  00064C                     __ptext4:
   980                           	opt stack 0
   981  00064C                     ___lwdiv:
   982                           	opt stack 29
   983                           
   984                           ;incstack = 0
   985  00064C  0E00               	movlw	0
   986  00064E  6E06               	movwf	___lwdiv@quotient+1,c
   987  000650  0E00               	movlw	0
   988  000652  6E05               	movwf	___lwdiv@quotient,c
   989  000654  5003               	movf	___lwdiv@divisor,w,c
   990  000656  1004               	iorwf	___lwdiv@divisor+1,w,c
   991  000658  B4D8               	btfsc	status,2,c
   992  00065A  D01C               	goto	l747
   993  00065C  0E01               	movlw	1
   994  00065E  6E07               	movwf	___lwdiv@counter,c
   995  000660  D004               	goto	l1156
   996  000662                     l1154:
   997  000662  90D8               	bcf	status,0,c
   998  000664  3603               	rlcf	___lwdiv@divisor,f,c
   999  000666  3604               	rlcf	___lwdiv@divisor+1,f,c
  1000  000668  2A07               	incf	___lwdiv@counter,f,c
  1001  00066A                     l1156:
  1002  00066A  AE04               	btfss	___lwdiv@divisor+1,7,c
  1003  00066C  D7FA               	goto	l1154
  1004  00066E                     l1158:
  1005  00066E  90D8               	bcf	status,0,c
  1006  000670  3605               	rlcf	___lwdiv@quotient,f,c
  1007  000672  3606               	rlcf	___lwdiv@quotient+1,f,c
  1008  000674  5003               	movf	___lwdiv@divisor,w,c
  1009  000676  5C01               	subwf	___lwdiv@dividend,w,c
  1010  000678  5004               	movf	___lwdiv@divisor+1,w,c
  1011  00067A  5802               	subwfb	___lwdiv@dividend+1,w,c
  1012  00067C  A0D8               	btfss	status,0,c
  1013  00067E  D005               	goto	l1166
  1014  000680  5003               	movf	___lwdiv@divisor,w,c
  1015  000682  5E01               	subwf	___lwdiv@dividend,f,c
  1016  000684  5004               	movf	___lwdiv@divisor+1,w,c
  1017  000686  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1018  000688  8005               	bsf	___lwdiv@quotient,0,c
  1019  00068A                     l1166:
  1020  00068A  90D8               	bcf	status,0,c
  1021  00068C  3204               	rrcf	___lwdiv@divisor+1,f,c
  1022  00068E  3203               	rrcf	___lwdiv@divisor,f,c
  1023  000690  2E07               	decfsz	___lwdiv@counter,f,c
  1024  000692  D7ED               	goto	l1158
  1025  000694                     l747:
  1026  000694  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1027  000698  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1028  00069C  0012               	return		;funcret
  1029  00069E                     __end_of___lwdiv:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           prodh	equ	0xFF4
  1036                           prodl	equ	0xFF3
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postinc2	equ	0xFDE
  1040                           postdec2	equ	0xFDD
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _InitDevice *****************
  1046 ;; Defined at:
  1047 ;;		line 99 in file "main.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;		None               void
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1061 ;;      Params:         0       0       0       0
  1062 ;;      Locals:         0       0       0       0
  1063 ;;      Temps:          0       0       0       0
  1064 ;;      Totals:         0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    1
  1068 ;; This function calls:
  1069 ;;		_InitECAN
  1070 ;;		_InitUART
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text5
  1077  0006E0                     __ptext5:
  1078                           	opt stack 0
  1079  0006E0                     _InitDevice:
  1080                           	opt stack 29
  1081                           
  1082                           ;main.c: 103: OSCCONbits.IRCF = 7;
  1083                           
  1084                           ;incstack = 0
  1085  0006E0  88D3               	bsf	4051,4,c	;volatile
  1086  0006E2  8AD3               	bsf	4051,5,c	;volatile
  1087  0006E4  8CD3               	bsf	4051,6,c	;volatile
  1088                           
  1089                           ;main.c: 104: OSCTUNEbits.PLLEN = 0;
  1090  0006E6  9C9B               	bcf	3995,6,c	;volatile
  1091                           
  1092                           ;main.c: 107: heartbeatCount = 0;
  1093  0006E8  0E00               	movlw	0
  1094  0006EA  6E1A               	movwf	_heartbeatCount+1,c
  1095  0006EC  0E00               	movlw	0
  1096  0006EE  6E19               	movwf	_heartbeatCount,c
  1097                           
  1098                           ;main.c: 110: ADCON1bits.PCFG = 0xF;
  1099  0006F0  80C1               	bsf	4033,0,c	;volatile
  1100  0006F2  82C1               	bsf	4033,1,c	;volatile
  1101  0006F4  84C1               	bsf	4033,2,c	;volatile
  1102  0006F6  86C1               	bsf	4033,3,c	;volatile
  1103                           
  1104                           ;main.c: 113: TRISAbits.TRISA0 = 1;
  1105  0006F8  8092               	bsf	3986,0,c	;volatile
  1106                           
  1107                           ;main.c: 116: TRISBbits.TRISB2 = 0;
  1108  0006FA  9493               	bcf	3987,2,c	;volatile
  1109                           
  1110                           ;main.c: 117: TRISBbits.TRISB3 = 1;
  1111  0006FC  8693               	bsf	3987,3,c	;volatile
  1112                           
  1113                           ;main.c: 121: InitUART();
  1114  0006FE  EC8F  F003         	call	_InitUART	;wreg free
  1115                           
  1116                           ;main.c: 124: InitECAN();
  1117  000702  ECAD  F002         	call	_InitECAN	;wreg free
  1118  000706  0012               	return		;funcret
  1119  000708                     __end_of_InitDevice:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           prodh	equ	0xFF4
  1126                           prodl	equ	0xFF3
  1127                           postinc0	equ	0xFEE
  1128                           wreg	equ	0xFE8
  1129                           postinc2	equ	0xFDE
  1130                           postdec2	equ	0xFDD
  1131                           fsr2h	equ	0xFDA
  1132                           fsr2l	equ	0xFD9
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _InitUART *****************
  1136 ;; Defined at:
  1137 ;;		line 179 in file "main.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, status,2
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1151 ;;      Params:         0       0       0       0
  1152 ;;      Locals:         0       0       0       0
  1153 ;;      Temps:          0       0       0       0
  1154 ;;      Totals:         0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_InitDevice
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text6
  1165  00071E                     __ptext6:
  1166                           	opt stack 0
  1167  00071E                     _InitUART:
  1168                           	opt stack 29
  1169                           
  1170                           ;main.c: 181: TRISCbits.TRISC6 = 0;
  1171                           
  1172                           ;incstack = 0
  1173  00071E  9C94               	bcf	3988,6,c	;volatile
  1174                           
  1175                           ;main.c: 183: BAUDCONbits.BRG16 = 0;
  1176  000720  96B8               	bcf	4024,3,c	;volatile
  1177                           
  1178                           ;main.c: 185: SPBRG = 12;
  1179  000722  0E0C               	movlw	12
  1180  000724  6EAF               	movwf	4015,c	;volatile
  1181                           
  1182                           ;main.c: 188: TXSTAbits.TX9 = 0;
  1183  000726  9CAC               	bcf	4012,6,c	;volatile
  1184                           
  1185                           ;main.c: 189: TXSTAbits.TXEN = 1;
  1186  000728  8AAC               	bsf	4012,5,c	;volatile
  1187                           
  1188                           ;main.c: 190: TXSTAbits.SYNC = 0;
  1189  00072A  98AC               	bcf	4012,4,c	;volatile
  1190                           
  1191                           ;main.c: 191: TXSTAbits.BRGH = 0;
  1192  00072C  94AC               	bcf	4012,2,c	;volatile
  1193                           
  1194                           ;main.c: 193: RCSTAbits.SPEN = 1;
  1195  00072E  8EAB               	bsf	4011,7,c	;volatile
  1196  000730  0012               	return		;funcret
  1197  000732                     __end_of_InitUART:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           prodh	equ	0xFF4
  1204                           prodl	equ	0xFF3
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postinc2	equ	0xFDE
  1208                           postdec2	equ	0xFDD
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _InitECAN *****************
  1214 ;; Defined at:
  1215 ;;		line 63 in file "ECAN_P18.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;		None               void
  1222 ;; Registers used:
  1223 ;;		wreg, status,2
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1229 ;;      Params:         0       0       0       0
  1230 ;;      Locals:         0       0       0       0
  1231 ;;      Temps:          0       0       0       0
  1232 ;;      Totals:         0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_InitDevice
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text7
  1243  00055A                     __ptext7:
  1244                           	opt stack 0
  1245  00055A                     _InitECAN:
  1246                           	opt stack 29
  1247                           
  1248                           ;ECAN_P18.c: 69: CANCON = 0x80;
  1249                           
  1250                           ;incstack = 0
  1251  00055A  0E80               	movlw	128
  1252  00055C  6E6F               	movwf	3951,c	;volatile
  1253  00055E                     l169:
  1254  00055E  B06E               	btfsc	3950,0,c	;volatile
  1255  000560  D7FE               	goto	l169
  1256                           
  1257                           ;ECAN_P18.c: 78: ECANCON = 0x00;
  1258  000562  0E00               	movlw	0
  1259  000564  6E77               	movwf	3959,c	;volatile
  1260                           
  1261                           ;ECAN_P18.c: 84: CIOCONbits.ENDRHI = 1;
  1262  000566  8A73               	bsf	3955,5,c	;volatile
  1263                           
  1264                           ;ECAN_P18.c: 87: CIOCONbits.CANCAP = 0;
  1265  000568  9873               	bcf	3955,4,c	;volatile
  1266                           
  1267                           ;ECAN_P18.c: 96: BRGCON1 = 0xC0;
  1268  00056A  0EC0               	movlw	192
  1269  00056C  6E70               	movwf	3952,c	;volatile
  1270                           
  1271                           ;ECAN_P18.c: 98: BRGCON2 = 0x80;
  1272  00056E  0E80               	movlw	128
  1273  000570  6E71               	movwf	3953,c	;volatile
  1274                           
  1275                           ;ECAN_P18.c: 100: BRGCON3 = 0x05;
  1276  000572  0E05               	movlw	5
  1277  000574  6E72               	movwf	3954,c	;volatile
  1278                           
  1279                           ;ECAN_P18.c: 110: RXM0EIDH = 0x00;
  1280  000576  0E00               	movlw	0
  1281  000578  010F               	movlb	15	; () banked
  1282  00057A  6F1A               	movwf	26,b	;volatile
  1283                           
  1284                           ;ECAN_P18.c: 111: RXM0EIDL = 0x00;
  1285  00057C  0E00               	movlw	0
  1286  00057E  010F               	movlb	15	; () banked
  1287  000580  6F1B               	movwf	27,b	;volatile
  1288                           
  1289                           ; BSR set to: 15
  1290                           ;ECAN_P18.c: 112: RXM0SIDH = 0xFF;
  1291  000582  010F               	movlb	15	; () banked
  1292  000584  6918               	setf	24,b	;volatile
  1293                           
  1294                           ;ECAN_P18.c: 113: RXM0SIDL = 0xE0;
  1295  000586  0EE0               	movlw	224
  1296  000588  010F               	movlb	15	; () banked
  1297  00058A  6F19               	movwf	25,b	;volatile
  1298                           
  1299                           ;ECAN_P18.c: 116: RXM1EIDH = 0x00;
  1300  00058C  0E00               	movlw	0
  1301  00058E  010F               	movlb	15	; () banked
  1302  000590  6F1E               	movwf	30,b	;volatile
  1303                           
  1304                           ;ECAN_P18.c: 117: RXM1EIDL = 0x00;
  1305  000592  0E00               	movlw	0
  1306  000594  010F               	movlb	15	; () banked
  1307  000596  6F1F               	movwf	31,b	;volatile
  1308                           
  1309                           ; BSR set to: 15
  1310                           ;ECAN_P18.c: 118: RXM1SIDH = 0xFF;
  1311  000598  010F               	movlb	15	; () banked
  1312  00059A  691C               	setf	28,b	;volatile
  1313                           
  1314                           ;ECAN_P18.c: 119: RXM1SIDL = 0xE0;
  1315  00059C  0EE0               	movlw	224
  1316  00059E  010F               	movlb	15	; () banked
  1317  0005A0  6F1D               	movwf	29,b	;volatile
  1318                           
  1319                           ;ECAN_P18.c: 123: RXFCON0 = 0x00;
  1320  0005A2  0E00               	movlw	0
  1321  0005A4  010D               	movlb	13	; () banked
  1322  0005A6  6FD4               	movwf	212,b	;volatile
  1323                           
  1324                           ;ECAN_P18.c: 124: RXFCON1 = 0x00;
  1325  0005A8  0E00               	movlw	0
  1326  0005AA  010D               	movlb	13	; () banked
  1327  0005AC  6FD5               	movwf	213,b	;volatile
  1328                           
  1329                           ;ECAN_P18.c: 130: RXF0EIDH = 0x00;
  1330  0005AE  0E00               	movlw	0
  1331  0005B0  010F               	movlb	15	; () banked
  1332  0005B2  6F02               	movwf	2,b	;volatile
  1333                           
  1334                           ;ECAN_P18.c: 131: RXF0EIDL = 0x00;
  1335  0005B4  0E00               	movlw	0
  1336  0005B6  010F               	movlb	15	; () banked
  1337  0005B8  6F03               	movwf	3,b	;volatile
  1338                           
  1339                           ;ECAN_P18.c: 132: RXF0SIDH = 0x55;
  1340  0005BA  0E55               	movlw	85
  1341  0005BC  010F               	movlb	15	; () banked
  1342  0005BE  6F00               	movwf	0,b	;volatile
  1343                           
  1344                           ;ECAN_P18.c: 133: RXF0SIDL = 0xC0;
  1345  0005C0  0EC0               	movlw	192
  1346  0005C2  010F               	movlb	15	; () banked
  1347  0005C4  6F01               	movwf	1,b	;volatile
  1348                           
  1349                           ;ECAN_P18.c: 134: RXF2EIDH = 0x00;
  1350  0005C6  0E00               	movlw	0
  1351  0005C8  010F               	movlb	15	; () banked
  1352  0005CA  6F0A               	movwf	10,b	;volatile
  1353                           
  1354                           ;ECAN_P18.c: 135: RXF2EIDL = 0x00;
  1355  0005CC  0E00               	movlw	0
  1356  0005CE  010F               	movlb	15	; () banked
  1357  0005D0  6F0B               	movwf	11,b	;volatile
  1358                           
  1359                           ;ECAN_P18.c: 136: RXF2SIDH = 0x33;
  1360  0005D2  0E33               	movlw	51
  1361  0005D4  010F               	movlb	15	; () banked
  1362  0005D6  6F08               	movwf	8,b	;volatile
  1363                           
  1364                           ;ECAN_P18.c: 137: RXF2SIDL = 0xC0;
  1365  0005D8  0EC0               	movlw	192
  1366  0005DA  010F               	movlb	15	; () banked
  1367  0005DC  6F09               	movwf	9,b	;volatile
  1368                           
  1369                           ;ECAN_P18.c: 140: RXB0CON = 0x60;
  1370  0005DE  0E60               	movlw	96
  1371  0005E0  6E60               	movwf	3936,c	;volatile
  1372                           
  1373                           ;ECAN_P18.c: 141: RXB1CON = 0x60;
  1374  0005E2  0E60               	movlw	96
  1375  0005E4  010F               	movlb	15	; () banked
  1376  0005E6  6F50               	movwf	80,b	;volatile
  1377                           
  1378                           ;ECAN_P18.c: 147: CANCON = 0x00;
  1379  0005E8  0E00               	movlw	0
  1380  0005EA  6E6F               	movwf	3951,c	;volatile
  1381  0005EC                     l172:
  1382  0005EC  A06E               	btfss	3950,0,c	;volatile
  1383  0005EE  0012               	return	
  1384  0005F0  D7FD               	goto	l172
  1385  0005F2                     __end_of_InitECAN:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           prodh	equ	0xFF4
  1392                           prodl	equ	0xFF3
  1393                           postinc0	equ	0xFEE
  1394                           wreg	equ	0xFE8
  1395                           postinc2	equ	0xFDE
  1396                           postdec2	equ	0xFDD
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _ECAN_Receive *****************
  1402 ;; Defined at:
  1403 ;;		line 159 in file "ECAN_P18.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  RXMsgFlag       1    0[COMRAM] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      unsigned char 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1417 ;;      Params:         0       0       0       0
  1418 ;;      Locals:         1       0       0       0
  1419 ;;      Temps:          0       0       0       0
  1420 ;;      Totals:         1       0       0       0
  1421 ;;Total ram usage:        1 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text8
  1431  000484                     __ptext8:
  1432                           	opt stack 0
  1433  000484                     _ECAN_Receive:
  1434                           	opt stack 30
  1435                           
  1436                           ;ECAN_P18.c: 161: unsigned char RXMsgFlag;
  1437                           ;ECAN_P18.c: 163: RXMsgFlag = 0x00;
  1438                           
  1439                           ;incstack = 0
  1440  000484  0E00               	movlw	0
  1441  000486  6E01               	movwf	ECAN_Receive@RXMsgFlag,c
  1442                           
  1443                           ;ECAN_P18.c: 165: if (RXB0CONbits.RXFUL)
  1444  000488  AE60               	btfss	3936,7,c	;volatile
  1445  00048A  D01C               	goto	l178
  1446                           
  1447                           ;ECAN_P18.c: 166: {
  1448                           ;ECAN_P18.c: 167: temp_EIDH = RXB0EIDH;
  1449  00048C  CF63 F028          	movff	3939,_temp_EIDH	;volatile
  1450                           
  1451                           ;ECAN_P18.c: 168: temp_EIDL = RXB0EIDL;
  1452  000490  CF64 F029          	movff	3940,_temp_EIDL	;volatile
  1453                           
  1454                           ;ECAN_P18.c: 169: temp_SIDH = RXB0SIDH;
  1455  000494  CF61 F02A          	movff	3937,_temp_SIDH	;volatile
  1456                           
  1457                           ;ECAN_P18.c: 170: temp_SIDL = RXB0SIDL;
  1458  000498  CF62 F02B          	movff	3938,_temp_SIDL	;volatile
  1459                           
  1460                           ;ECAN_P18.c: 171: temp_DLC = RXB0DLC;
  1461  00049C  CF65 F027          	movff	3941,_temp_DLC	;volatile
  1462                           
  1463                           ;ECAN_P18.c: 172: temp_D0 = RXB0D0;
  1464  0004A0  CF66 F01F          	movff	3942,_temp_D0	;volatile
  1465                           
  1466                           ;ECAN_P18.c: 173: temp_D1 = RXB0D1;
  1467  0004A4  CF67 F020          	movff	3943,_temp_D1	;volatile
  1468                           
  1469                           ;ECAN_P18.c: 174: temp_D2 = RXB0D2;
  1470  0004A8  CF68 F021          	movff	3944,_temp_D2	;volatile
  1471                           
  1472                           ;ECAN_P18.c: 175: temp_D3 = RXB0D3;
  1473  0004AC  CF69 F022          	movff	3945,_temp_D3	;volatile
  1474                           
  1475                           ;ECAN_P18.c: 176: temp_D4 = RXB0D4;
  1476  0004B0  CF6A F023          	movff	3946,_temp_D4	;volatile
  1477                           
  1478                           ;ECAN_P18.c: 177: temp_D5 = RXB0D5;
  1479  0004B4  CF6B F024          	movff	3947,_temp_D5	;volatile
  1480                           
  1481                           ;ECAN_P18.c: 178: temp_D6 = RXB0D6;
  1482  0004B8  CF6C F025          	movff	3948,_temp_D6	;volatile
  1483                           
  1484                           ;ECAN_P18.c: 179: temp_D7 = RXB0D7;
  1485  0004BC  CF6D F026          	movff	3949,_temp_D7	;volatile
  1486                           
  1487                           ;ECAN_P18.c: 180: RXB0CONbits.RXFUL = 0;
  1488  0004C0  9E60               	bcf	3936,7,c	;volatile
  1489  0004C2  D03F               	goto	l1038
  1490  0004C4                     l178:
  1491                           
  1492                           ;ECAN_P18.c: 183: else if (RXB1CONbits.RXFUL)
  1493  0004C4  010F               	movlb	15	; () banked
  1494  0004C6  AF50               	btfss	80,7,b	;volatile
  1495  0004C8  D01D               	goto	l180
  1496                           
  1497                           ; BSR set to: 15
  1498                           ;ECAN_P18.c: 184: {
  1499                           ;ECAN_P18.c: 185: temp_EIDH = RXB1EIDH;
  1500  0004CA  CF53 F028          	movff	3923,_temp_EIDH	;volatile
  1501                           
  1502                           ;ECAN_P18.c: 186: temp_EIDL = RXB1EIDL;
  1503  0004CE  CF54 F029          	movff	3924,_temp_EIDL	;volatile
  1504                           
  1505                           ;ECAN_P18.c: 187: temp_SIDH = RXB1SIDH;
  1506  0004D2  CF51 F02A          	movff	3921,_temp_SIDH	;volatile
  1507                           
  1508                           ;ECAN_P18.c: 188: temp_SIDL = RXB1SIDL;
  1509  0004D6  CF52 F02B          	movff	3922,_temp_SIDL	;volatile
  1510                           
  1511                           ;ECAN_P18.c: 189: temp_DLC = RXB1DLC;
  1512  0004DA  CF55 F027          	movff	3925,_temp_DLC	;volatile
  1513                           
  1514                           ;ECAN_P18.c: 190: temp_D0 = RXB1D0;
  1515  0004DE  CF56 F01F          	movff	3926,_temp_D0	;volatile
  1516                           
  1517                           ;ECAN_P18.c: 191: temp_D1 = RXB1D1;
  1518  0004E2  CF57 F020          	movff	3927,_temp_D1	;volatile
  1519                           
  1520                           ;ECAN_P18.c: 192: temp_D2 = RXB1D2;
  1521  0004E6  CF58 F021          	movff	3928,_temp_D2	;volatile
  1522                           
  1523                           ;ECAN_P18.c: 193: temp_D3 = RXB1D3;
  1524  0004EA  CF59 F022          	movff	3929,_temp_D3	;volatile
  1525                           
  1526                           ;ECAN_P18.c: 194: temp_D4 = RXB1D4;
  1527  0004EE  CF5A F023          	movff	3930,_temp_D4	;volatile
  1528                           
  1529                           ;ECAN_P18.c: 195: temp_D5 = RXB1D5;
  1530  0004F2  CF5B F024          	movff	3931,_temp_D5	;volatile
  1531                           
  1532                           ;ECAN_P18.c: 196: temp_D6 = RXB1D6;
  1533  0004F6  CF5C F025          	movff	3932,_temp_D6	;volatile
  1534                           
  1535                           ;ECAN_P18.c: 197: temp_D7 = RXB1D7;
  1536  0004FA  CF5D F026          	movff	3933,_temp_D7	;volatile
  1537                           
  1538                           ;ECAN_P18.c: 198: RXB1CONbits.RXFUL = 0;
  1539  0004FE  010F               	movlb	15	; () banked
  1540  000500  9F50               	bcf	80,7,b	;volatile
  1541  000502  D01F               	goto	l1038
  1542  000504                     l180:
  1543                           
  1544                           ; BSR set to: 15
  1545                           ;ECAN_P18.c: 201: else if (B0CONbits.RXFUL)
  1546  000504  010E               	movlb	14	; () banked
  1547  000506  AF20               	btfss	32,7,b	;volatile
  1548  000508  D01E               	goto	l1040
  1549                           
  1550                           ; BSR set to: 14
  1551                           ;ECAN_P18.c: 202: {
  1552                           ;ECAN_P18.c: 203: temp_EIDH = B0EIDH;
  1553  00050A  CE23 F028          	movff	3619,_temp_EIDH	;volatile
  1554                           
  1555                           ;ECAN_P18.c: 204: temp_EIDL = B0EIDL;
  1556  00050E  CE24 F029          	movff	3620,_temp_EIDL	;volatile
  1557                           
  1558                           ;ECAN_P18.c: 205: temp_SIDH = B0SIDH;
  1559  000512  CE21 F02A          	movff	3617,_temp_SIDH	;volatile
  1560                           
  1561                           ;ECAN_P18.c: 206: temp_SIDL = B0SIDL;
  1562  000516  CE22 F02B          	movff	3618,_temp_SIDL	;volatile
  1563                           
  1564                           ;ECAN_P18.c: 207: temp_DLC = B0DLC;
  1565  00051A  CE25 F027          	movff	3621,_temp_DLC	;volatile
  1566                           
  1567                           ;ECAN_P18.c: 208: temp_D0 = B0D0;
  1568  00051E  CE26 F01F          	movff	3622,_temp_D0	;volatile
  1569                           
  1570                           ;ECAN_P18.c: 209: temp_D1 = B0D1;
  1571  000522  CE27 F020          	movff	3623,_temp_D1	;volatile
  1572                           
  1573                           ;ECAN_P18.c: 210: temp_D2 = B0D2;
  1574  000526  CE28 F021          	movff	3624,_temp_D2	;volatile
  1575                           
  1576                           ;ECAN_P18.c: 211: temp_D3 = B0D3;
  1577  00052A  CE29 F022          	movff	3625,_temp_D3	;volatile
  1578                           
  1579                           ;ECAN_P18.c: 212: temp_D4 = B0D4;
  1580  00052E  CE2A F023          	movff	3626,_temp_D4	;volatile
  1581                           
  1582                           ;ECAN_P18.c: 213: temp_D5 = B0D5;
  1583  000532  CE2B F024          	movff	3627,_temp_D5	;volatile
  1584                           
  1585                           ;ECAN_P18.c: 214: temp_D6 = B0D6;
  1586  000536  CE2C F025          	movff	3628,_temp_D6	;volatile
  1587                           
  1588                           ;ECAN_P18.c: 215: temp_D7 = B0D7;
  1589  00053A  CE2D F026          	movff	3629,_temp_D7	;volatile
  1590                           
  1591                           ;ECAN_P18.c: 217: B0CONbits.RXFUL = 0;
  1592  00053E  010E               	movlb	14	; () banked
  1593  000540  9F20               	bcf	32,7,b	;volatile
  1594  000542                     l1038:
  1595                           
  1596                           ; BSR set to: 14
  1597                           ;ECAN_P18.c: 218: RXMsgFlag = 0x01;
  1598  000542  0E01               	movlw	1
  1599  000544  6E01               	movwf	ECAN_Receive@RXMsgFlag,c
  1600  000546                     l1040:
  1601                           
  1602                           ;ECAN_P18.c: 219: }
  1603                           ;ECAN_P18.c: 221: if (RXMsgFlag == 0x01)
  1604  000546  0401               	decf	ECAN_Receive@RXMsgFlag,w,c
  1605  000548  A4D8               	btfss	status,2,c
  1606  00054A  D005               	goto	l1052
  1607                           
  1608                           ;ECAN_P18.c: 222: {
  1609                           ;ECAN_P18.c: 223: RXMsgFlag = 0x00;
  1610  00054C  0E00               	movlw	0
  1611  00054E  6E01               	movwf	ECAN_Receive@RXMsgFlag,c
  1612                           
  1613                           ;ECAN_P18.c: 224: RXB1IF = 0;
  1614  000550  92A4               	bcf	4004,1,c	;volatile
  1615                           
  1616                           ;ECAN_P18.c: 225: return 1;
  1617  000552  0E01               	movlw	1
  1618                           
  1619                           ;ECAN_P18.c: 226: }
  1620  000554  0012               	return	
  1621  000556                     l1052:
  1622                           
  1623                           ;ECAN_P18.c: 227: else
  1624                           ;ECAN_P18.c: 228: {
  1625                           ;ECAN_P18.c: 229: return 0;
  1626  000556  0E00               	movlw	0
  1627  000558  0012               	return	
  1628  00055A                     __end_of_ECAN_Receive:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postinc2	equ	0xFDE
  1639                           postdec2	equ	0xFDD
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           prodh	equ	0xFF4
  1648                           prodl	equ	0xFF3
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           postinc2	equ	0xFDE
  1652                           postdec2	equ	0xFDD
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657                           	psect	rparam
  1658  0000                     tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           prodh	equ	0xFF4
  1663                           prodl	equ	0xFF3
  1664                           postinc0	equ	0xFEE
  1665                           wreg	equ	0xFE8
  1666                           postinc2	equ	0xFDE
  1667                           postdec2	equ	0xFDD
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    10
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_4(CODE[30]), STR_3(CODE[29]), STR_2(CODE[26]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1264
                       _ECAN_Receive
                         _InitDevice
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1234
                                             12 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
                           _InitECAN
                           _InitUART
 ---------------------------------------------------------------------------------
 (2) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitECAN                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECAN_Receive
   _InitDevice
     _InitECAN
     _InitUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      2B       1       45.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B       9        0.0%
DATA                 0      0      2B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 20 16:24:16 2015

            __CFG_BORV$0 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
            __CFG_LVP$ON 000000                      l311 0738                      l180 0504  
                    l172 05EC                      l169 055E                      l178 04C4  
                    l747 0694                      l757 06D6             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      wreg 000FE8                     _B0D0 000E26  
                   _B0D1 000E27                     _B0D2 000E28                     _B0D3 000E29  
                   _B0D4 000E2A                     _B0D5 000E2B                     _B0D6 000E2C  
                   _B0D7 000E2D             __CFG_WDT$OFF 000000                     l1040 0546  
                   l1210 03D6                     l1052 0556                     l1038 0542  
                   l1222 0402                     l1232 0462                     l1208 03D2  
                   l1154 0662                     l1226 0414                     l1234 046A  
                   l1156 066A                     l1228 041A                     l1166 068A  
                   l1158 066E                     l1182 06CC                     l1174 06AC  
                   l1176 06B4                     l1192 0380                     l1248 061C  
                   l1178 06B8                     l1188 0370                     l1198 03AA  
                   STR_1 0360                     STR_2 0346                     STR_3 0329  
                   STR_4 030B             __CFG_PWRT$ON 000000                     _main 05F2  
                   fsr2h 000FDA                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
           ___param_bank 000010                    _B0DLC 000E25                    ?_main 0001  
        __end_of___lwdiv 069E          __end_of___lwmod 06E0                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_dpowers 030B                    _putch 0732  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
             _InitDevice 06E0    __size_of_ECAN_Receive 00D6           __CFG_MCLRE$OFF 000000  
        __initialization 0708             __end_of_main 064C         __end_of_InitECAN 05F2  
       __end_of_InitUART 0732                   ??_main 0019            __activetblptr 000002  
                 _B0EIDH 000E23                   _B0EIDL 000E24                   _B0SIDH 000E21  
                 _B0SIDL 000E22                   _CANCON 000F6F          __CFG_BBSIZ$1024 000000  
                 ?_putch 0001             _ECAN_Receive 0484                   _RXB0D0 000F66  
                 _RXB0D1 000F67                   _RXB0D2 000F68                   _RXB0D3 000F69  
                 _RXB0D4 000F6A                   _RXB1D0 000F56                   _RXB0D5 000F6B  
                 _RXB1D1 000F57                   _RXB0D6 000F6C                   _RXB1D2 000F58  
                 _RXB0D7 000F6D                   _RXB1D3 000F59                   _RXB1D4 000F5A  
                 _RXB1D5 000F5B                   _RXB1D6 000F5C                   _RXB1D7 000F5D  
                 _RXB1IF 007D21                   _TXB0D0 000F46                   _TXB0D1 000F47  
                 _TXB0D2 000F48                   _TXB0D3 000F49                   _TXB0D4 000F4A  
                 _TXB0D5 000F4B                   _TXB0D6 000F4C                   _TXB0D7 000F4D  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lwdiv 0005  
              ??___lwmod 000C                   clear_0 070E                   _printf 0366  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0714  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001              ?_InitDevice 0001  
         __pcstackCOMRAM 0001            __end_of_putch 073E                  ??_putch 0001  
              ?_InitECAN 0001                ?_InitUART 0001                _B0CONbits 000E20  
                _ECANCON 000F77                  _CANSTAT 000F6E                  ?_printf 000D  
                _BRGCON1 000F70                  _BRGCON2 000F71                  _BRGCON3 000F72  
    __size_of_InitDevice 0028                  _RXB0DLC 000F65                  _RXB1DLC 000F55  
                _RXB0CON 000F60                  _RXB1CON 000F50                  _TXB0DLC 000F45  
                _RXFCON0 000DD4                  _RXFCON1 000DD5               ??_InitECAN 0001  
             ??_InitUART 0001                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 064C                  ___lwmod 069E             __psmallconst 0300  
                __pcinit 0708                  __ramtop 0300                  __ptext0 05F2  
                __ptext1 0366                  __ptext2 0732                  __ptext3 069E  
                __ptext4 064C                  __ptext5 06E0                  __ptext6 071E  
                __ptext7 055A                  __ptext8 0484          __size_of_printf 011E  
                _dpowers 0301                  _temp_D0 001F                  _temp_D1 0020  
                _temp_D2 0021                  _temp_D3 0022                  _temp_D4 0023  
                _temp_D5 0024                  _temp_D6 0025                  _temp_D7 0026  
   end_of_initialization 0714            __Lmediumconst 0000                _RCSTAbits 000FAB  
                printf@c 0018                  printf@f 000D                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94                _TXSTAbits 000FAC  
           ??_InitDevice 0001              _BAUDCONbits 000FB8           __end_of_printf 0484  
    start_initialization 0708       __end_of_InitDevice 0708         __CFG_OSC$IRCIO67 000000  
      __size_of_InitECAN 0098        __size_of_InitUART 0014         __CFG_LPT1OSC$OFF 000000  
               ??_printf 0011              __pbssCOMRAM 0019         ___lwdiv@dividend 0001  
               ?___lwdiv 0001                 ?___lwmod 0008           _heartbeatCount 0019  
            __smallconst 0300         ___lwdiv@quotient 0005            ?_ECAN_Receive 0001  
         __size_of_putch 000C                 _LATAbits 000F89                _temp_EIDH 0028  
              _temp_EIDL 0029                _temp_SIDH 002A                _temp_SIDL 002B  
               _RXB0EIDH 000F63                 _RXB0EIDL 000F64                 _RXB1EIDH 000F53  
               _RXB1EIDL 000F54         __CFG_WDTPS$32768 000000                 _RXB0SIDH 000F61  
               _RXB0SIDL 000F62                 _RXF0EIDH 000F02                 _RXB1SIDH 000F51  
               _RXF0EIDL 000F03                 _RXB1SIDL 000F52                 _RXF2EIDH 000F0A  
               _RXF2EIDL 000F0B                 _RXF0SIDH 000F00                 _RXF0SIDL 000F01  
               _TXB0EIDH 000F43                 _TXB0EIDL 000F44                 _RXF2SIDH 000F08  
               _RXF2SIDL 000F09                 _RXM0EIDH 000F1A                 _RXM0EIDL 000F1B  
               _TXB0SIDH 000F41                 _RXM1EIDH 000F1E                 _TXB0SIDL 000F42  
               _RXM1EIDL 000F1F                 _RXM0SIDH 000F18                 _RXM0SIDL 000F19  
               _RXM1SIDH 000F1C                 _RXM1SIDL 000F1D               _ADCON1bits 000FC1  
  ECAN_Receive@RXMsgFlag 0001               printf@flag 0014               printf@prec 0015  
         ??_ECAN_Receive 0001                 _InitECAN 055A                 _InitUART 071E  
               __Hrparam 0000          _CAN_RX_Adress_H 001B          _CAN_RX_Adress_L 001C  
               __Lrparam 0000               _CIOCONbits 000F73         __size_of___lwdiv 0052  
       __size_of___lwmod 0042          ___lwdiv@divisor 0003          _CAN_TX_Adress_H 001D  
        _CAN_TX_Adress_L 001E          ___lwdiv@counter 0007            __size_of_main 005A  
               _temp_DLC 0027                printf@val 0016              _RXB0CONbits 000F60  
            _RXB1CONbits 000F50                putch@byte 0001              _OSCTUNEbits 000F9B  
       ___lwmod@dividend 0008              _TXB0CONbits 000F40               _OSCCONbits 000FD3  
               printf@ap 0012     __end_of_ECAN_Receive 055A          ___lwmod@divisor 000A  
        ___lwmod@counter 000C  
