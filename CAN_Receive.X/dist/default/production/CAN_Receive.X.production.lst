

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Feb 10 22:28:10 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	smallconst
    22  000300                     __psmallconst:
    23                           	opt stack 0
    24  000300  00                 	db	0
    25  000301                     _dpowers:
    26                           	opt stack 0
    27  000301  0001               	dw	1
    28  000303  000A               	dw	10
    29  000305  0064               	dw	100
    30  000307  03E8               	dw	1000
    31  000309  2710               	dw	10000
    32  00030B                     __end_of_dpowers:
    33                           	opt stack 0
    34  00030B                     _hexpowers:
    35                           	opt stack 0
    36  00030B  0001               	dw	1
    37  00030D  0010               	dw	16
    38  00030F  0100               	dw	256
    39  000311  1000               	dw	4096
    40  000313                     __end_of_hexpowers:
    41                           	opt stack 0
    42  0000                     _B0CONbits	set	3616
    43  0000                     _B0D0	set	3622
    44  0000                     _B0D1	set	3623
    45  0000                     _B0D2	set	3624
    46  0000                     _B0D3	set	3625
    47  0000                     _B0D4	set	3626
    48  0000                     _B0D5	set	3627
    49  0000                     _B0D6	set	3628
    50  0000                     _B0D7	set	3629
    51  0000                     _B0DLC	set	3621
    52  0000                     _B0EIDH	set	3619
    53  0000                     _B0EIDL	set	3620
    54  0000                     _B0SIDH	set	3617
    55  0000                     _B0SIDL	set	3618
    56  0000                     _RXB1CON	set	3920
    57  0000                     _RXB1CONbits	set	3920
    58  0000                     _RXB1D0	set	3926
    59  0000                     _RXB1D1	set	3927
    60  0000                     _RXB1D2	set	3928
    61  0000                     _RXB1D3	set	3929
    62  0000                     _RXB1D4	set	3930
    63  0000                     _RXB1D5	set	3931
    64  0000                     _RXB1D6	set	3932
    65  0000                     _RXB1D7	set	3933
    66  0000                     _RXB1DLC	set	3925
    67  0000                     _RXB1EIDH	set	3923
    68  0000                     _RXB1EIDL	set	3924
    69  0000                     _RXB1SIDH	set	3921
    70  0000                     _RXB1SIDL	set	3922
    71  0000                     _RXF0EIDH	set	3842
    72  0000                     _RXF0EIDL	set	3843
    73  0000                     _RXF0SIDH	set	3840
    74  0000                     _RXF0SIDL	set	3841
    75  0000                     _RXF1EIDH	set	3846
    76  0000                     _RXF1EIDL	set	3847
    77  0000                     _RXF1SIDH	set	3844
    78  0000                     _RXF1SIDL	set	3845
    79  0000                     _RXM0EIDH	set	3866
    80  0000                     _RXM0EIDL	set	3867
    81  0000                     _RXM0SIDH	set	3864
    82  0000                     _RXM0SIDL	set	3865
    83  0000                     _RXM1EIDH	set	3870
    84  0000                     _RXM1EIDL	set	3871
    85  0000                     _RXM1SIDH	set	3868
    86  0000                     _RXM1SIDL	set	3869
    87  0000                     _TXB0CONbits	set	3904
    88  0000                     _TXB0D0	set	3910
    89  0000                     _TXB0D1	set	3911
    90  0000                     _TXB0D2	set	3912
    91  0000                     _TXB0D3	set	3913
    92  0000                     _TXB0D4	set	3914
    93  0000                     _TXB0D5	set	3915
    94  0000                     _TXB0D6	set	3916
    95  0000                     _TXB0D7	set	3917
    96  0000                     _TXB0DLC	set	3909
    97  0000                     _TXB0EIDH	set	3907
    98  0000                     _TXB0EIDL	set	3908
    99  0000                     _TXB0SIDH	set	3905
   100  0000                     _TXB0SIDL	set	3906
   101  0000                     _ADCON1bits	set	4033
   102  0000                     _BAUDCONbits	set	4024
   103  0000                     _BRGCON1	set	3952
   104  0000                     _BRGCON2	set	3953
   105  0000                     _BRGCON3	set	3954
   106  0000                     _CANCON	set	3951
   107  0000                     _CANSTAT	set	3950
   108  0000                     _CIOCONbits	set	3955
   109  0000                     _ECANCON	set	3959
   110  0000                     _LATAbits	set	3977
   111  0000                     _OSCCONbits	set	4051
   112  0000                     _OSCTUNEbits	set	3995
   113  0000                     _RCSTAbits	set	4011
   114  0000                     _RXB0CON	set	3936
   115  0000                     _RXB0CONbits	set	3936
   116  0000                     _RXB0D0	set	3942
   117  0000                     _RXB0D1	set	3943
   118  0000                     _RXB0D2	set	3944
   119  0000                     _RXB0D3	set	3945
   120  0000                     _RXB0D4	set	3946
   121  0000                     _RXB0D5	set	3947
   122  0000                     _RXB0D6	set	3948
   123  0000                     _RXB0D7	set	3949
   124  0000                     _RXB0DLC	set	3941
   125  0000                     _RXB0EIDH	set	3939
   126  0000                     _RXB0EIDL	set	3940
   127  0000                     _RXB0SIDH	set	3937
   128  0000                     _RXB0SIDL	set	3938
   129  0000                     _SPBRG	set	4015
   130  0000                     _TRISAbits	set	3986
   131  0000                     _TRISBbits	set	3987
   132  0000                     _TRISCbits	set	3988
   133  0000                     _TXREG	set	4013
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _RXB1IF	set	32033
   136  000313                     STR_5:
   137  000313  54                 	db	84	;'T'
   138  000314  65                 	db	101	;'e'
   139  000315  6D                 	db	109	;'m'
   140  000316  70                 	db	112	;'p'
   141  000317  65                 	db	101	;'e'
   142  000318  72                 	db	114	;'r'
   143  000319  61                 	db	97	;'a'
   144  00031A  74                 	db	116	;'t'
   145  00031B  75                 	db	117	;'u'
   146  00031C  72                 	db	114	;'r'
   147  00031D  65                 	db	101	;'e'
   148  00031E  20                 	db	32
   149  00031F  3D                 	db	61	;'='
   150  000320  20                 	db	32
   151  000321  25                 	db	37
   152  000322  64                 	db	100	;'d'
   153  000323  20                 	db	32
   154  000324  46                 	db	70	;'F'
   155  000325  61                 	db	97	;'a'
   156  000326  68                 	db	104	;'h'
   157  000327  72                 	db	114	;'r'
   158  000328  65                 	db	101	;'e'
   159  000329  6E                 	db	110	;'n'
   160  00032A  68                 	db	104	;'h'
   161  00032B  65                 	db	101	;'e'
   162  00032C  69                 	db	105	;'i'
   163  00032D  74                 	db	116	;'t'
   164  00032E  0A                 	db	10
   165  00032F  0D                 	db	13
   166  000330  00                 	db	0
   167  000331                     STR_4:
   168  000331  44                 	db	68	;'D'
   169  000332  61                 	db	97	;'a'
   170  000333  74                 	db	116	;'t'
   171  000334  61                 	db	97	;'a'
   172  000335  20                 	db	32
   173  000336  72                 	db	114	;'r'
   174  000337  65                 	db	101	;'e'
   175  000338  63                 	db	99	;'c'
   176  000339  65                 	db	101	;'e'
   177  00033A  69                 	db	105	;'i'
   178  00033B  76                 	db	118	;'v'
   179  00033C  65                 	db	101	;'e'
   180  00033D  64                 	db	100	;'d'
   181  00033E  3A                 	db	58	;':'
   182  00033F  20                 	db	32
   183  000340  25                 	db	37
   184  000341  64                 	db	100	;'d'
   185  000342  20                 	db	32
   186  000343  62                 	db	98	;'b'
   187  000344  79                 	db	121	;'y'
   188  000345  74                 	db	116	;'t'
   189  000346  65                 	db	101	;'e'
   190  000347  28                 	db	40
   191  000348  73                 	db	115	;'s'
   192  000349  29                 	db	41
   193  00034A  2C                 	db	44
   194  00034B  20                 	db	32
   195  00034C  20                 	db	32
   196  00034D  00                 	db	0
   197  00034E                     STR_2:
   198  00034E  48                 	db	72	;'H'
   199  00034F  65                 	db	101	;'e'
   200  000350  6C                 	db	108	;'l'
   201  000351  6C                 	db	108	;'l'
   202  000352  6F                 	db	111	;'o'
   203  000353  20                 	db	32
   204  000354  66                 	db	102	;'f'
   205  000355  72                 	db	114	;'r'
   206  000356  6F                 	db	111	;'o'
   207  000357  6D                 	db	109	;'m'
   208  000358  20                 	db	32
   209  000359  43                 	db	67	;'C'
   210  00035A  6F                 	db	111	;'o'
   211  00035B  72                 	db	114	;'r'
   212  00035C  6E                 	db	110	;'n'
   213  00035D  65                 	db	101	;'e'
   214  00035E  6C                 	db	108	;'l'
   215  00035F  6C                 	db	108	;'l'
   216  000360  20                 	db	32
   217  000361  43                 	db	67	;'C'
   218  000362  75                 	db	117	;'u'
   219  000363  70                 	db	112	;'p'
   220  000364  21                 	db	33
   221  000365  0A                 	db	10
   222  000366  0D                 	db	13
   223  000367  00                 	db	0
   224  000368                     STR_3:
   225  000368  52                 	db	82	;'R'
   226  000369  65                 	db	101	;'e'
   227  00036A  63                 	db	99	;'c'
   228  00036B  65                 	db	101	;'e'
   229  00036C  69                 	db	105	;'i'
   230  00036D  76                 	db	118	;'v'
   231  00036E  65                 	db	101	;'e'
   232  00036F  20                 	db	32
   233  000370  41                 	db	65	;'A'
   234  000371  44                 	db	68	;'D'
   235  000372  44                 	db	68	;'D'
   236  000373  52                 	db	82	;'R'
   237  000374  20                 	db	32
   238  000375  3D                 	db	61	;'='
   239  000376  20                 	db	32
   240  000377  25                 	db	37
   241  000378  58                 	db	88	;'X'
   242  000379  0A                 	db	10
   243  00037A  0D                 	db	13
   244  00037B  00                 	db	0
   245  00037C                     STR_6:
   246  00037C  30                 	db	48	;'0'
   247  00037D  31                 	db	49	;'1'
   248  00037E  32                 	db	50	;'2'
   249  00037F  33                 	db	51	;'3'
   250  000380  34                 	db	52	;'4'
   251  000381  35                 	db	53	;'5'
   252  000382  36                 	db	54	;'6'
   253  000383  37                 	db	55	;'7'
   254  000384  38                 	db	56	;'8'
   255  000385  39                 	db	57	;'9'
   256  000386  41                 	db	65	;'A'
   257  000387  42                 	db	66	;'B'
   258  000388  43                 	db	67	;'C'
   259  000389  44                 	db	68	;'D'
   260  00038A  45                 	db	69	;'E'
   261  00038B  46                 	db	70	;'F'
   262  00038C  00                 	db	0
   263  00038D                     STR_1:
   264  00038D  1B                 	db	27
   265  00038E  5B                 	db	91	;'['
   266  00038F  32                 	db	50	;'2'
   267  000390  4A                 	db	74	;'J'
   268  000391  00                 	db	0
   269                           
   270                           ; #config settings
   271  000392  00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           	psect	cinit
   274  000834                     __pcinit:
   275                           	opt stack 0
   276  000834                     start_initialization:
   277                           	opt stack 0
   278  000834                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Clear objects allocated to COMRAM (19 bytes)
   282  000834  EE00  F01E         	lfsr	0,__pbssCOMRAM
   283  000838  0E13               	movlw	19
   284  00083A                     clear_0:
   285  00083A  6AEE               	clrf	postinc0,c
   286  00083C  06E8               	decf	wreg,f,c
   287  00083E  E1FD               	bnz	clear_0
   288  000840                     end_of_initialization:
   289                           	opt stack 0
   290  000840                     __end_of__initialization:
   291                           	opt stack 0
   292  000840  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293  000842  6EF8               	movwf	tblptru,c
   294  000844  0100               	movlb	0
   295  000846  EF2A  F003         	goto	_main	;jump to C main() function
   296                           tblptru	equ	0xFF8
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           
   300                           	psect	bssCOMRAM
   301  00001E                     __pbssCOMRAM:
   302                           	opt stack 0
   303  00001E                     _heartbeatCount:
   304                           	opt stack 0
   305  00001E                     	ds	2
   306  000020                     _CAN_RX_Adress_H:
   307                           	opt stack 0
   308  000020                     	ds	1
   309  000021                     _CAN_RX_Adress_L:
   310                           	opt stack 0
   311  000021                     	ds	1
   312  000022                     _CAN_TX_Adress_H:
   313                           	opt stack 0
   314  000022                     	ds	1
   315  000023                     _CAN_TX_Adress_L:
   316                           	opt stack 0
   317  000023                     	ds	1
   318  000024                     _temp_D0:
   319                           	opt stack 0
   320  000024                     	ds	1
   321  000025                     _temp_D1:
   322                           	opt stack 0
   323  000025                     	ds	1
   324  000026                     _temp_D2:
   325                           	opt stack 0
   326  000026                     	ds	1
   327  000027                     _temp_D3:
   328                           	opt stack 0
   329  000027                     	ds	1
   330  000028                     _temp_D4:
   331                           	opt stack 0
   332  000028                     	ds	1
   333  000029                     _temp_D5:
   334                           	opt stack 0
   335  000029                     	ds	1
   336  00002A                     _temp_D6:
   337                           	opt stack 0
   338  00002A                     	ds	1
   339  00002B                     _temp_D7:
   340                           	opt stack 0
   341  00002B                     	ds	1
   342  00002C                     _temp_DLC:
   343                           	opt stack 0
   344  00002C                     	ds	1
   345  00002D                     _temp_EIDH:
   346                           	opt stack 0
   347  00002D                     	ds	1
   348  00002E                     _temp_EIDL:
   349                           	opt stack 0
   350  00002E                     	ds	1
   351  00002F                     _temp_SIDH:
   352                           	opt stack 0
   353  00002F                     	ds	1
   354  000030                     _temp_SIDL:
   355                           	opt stack 0
   356  000030                     	ds	1
   357                           tblptru	equ	0xFF8
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           
   361                           	psect	cstackCOMRAM
   362  000001                     __pcstackCOMRAM:
   363                           	opt stack 0
   364  000001                     ?___lwdiv:
   365                           	opt stack 0
   366  000001                     ECAN_Receive@RXMsgFlag:
   367                           	opt stack 0
   368  000001                     putch@byte:
   369                           	opt stack 0
   370  000001                     ___lwdiv@dividend:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374  000001                     	ds	2
   375  000003                     ___lwdiv@divisor:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379  000003                     	ds	2
   380  000005                     ___lwdiv@quotient:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4
   384  000005                     	ds	2
   385  000007                     ___lwdiv@counter:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x6
   389  000007                     	ds	1
   390  000008                     ?___lwmod:
   391                           	opt stack 0
   392  000008                     ___lwmod@dividend:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x7
   396  000008                     	ds	2
   397  00000A                     ___lwmod@divisor:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x9
   401  00000A                     	ds	2
   402  00000C                     ___lwmod@counter:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0xB
   406  00000C                     	ds	1
   407  00000D                     ?_printf:
   408                           	opt stack 0
   409  00000D                     printf@f:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0xC
   413  00000D                     	ds	4
   414  000011                     ??_printf:
   415                           
   416                           ; 0 bytes @ 0x10
   417  000011                     	ds	1
   418  000012                     printf@idx:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x11
   422  000012                     	ds	1
   423  000013                     printf@ap:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x12
   427  000013                     	ds	2
   428  000015                     printf@prec:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x14
   432  000015                     	ds	1
   433  000016                     printf@flag:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x15
   437  000016                     	ds	1
   438  000017                     printf@val:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x16
   442  000017                     	ds	2
   443  000019                     printf@c:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x18
   447  000019                     	ds	1
   448  00001A                     ??_main:
   449                           
   450                           ; 0 bytes @ 0x19
   451  00001A                     	ds	4
   452                           tblptru	equ	0xFF8
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 71 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   475 ;;      Params:         0       0       0       0
   476 ;;      Locals:         0       0       0       0
   477 ;;      Temps:          4       0       0       0
   478 ;;      Totals:         4       0       0       0
   479 ;;Total ram usage:        4 bytes
   480 ;; Hardware stack levels required when called:    2
   481 ;; This function calls:
   482 ;;		_ECAN_Receive
   483 ;;		_InitDevice
   484 ;;		_printf
   485 ;;		_putch
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492  000654                     __ptext0:
   493                           	opt stack 0
   494  000654                     _main:
   495                           	opt stack 29
   496                           
   497                           ;main.c: 73: InitDevice();
   498                           
   499                           ;incstack = 0
   500  000654  EC06  F004         	call	_InitDevice	;wreg free
   501                           
   502                           ;main.c: 74: LATAbits.LATA0 = 1;
   503  000658  8089               	bsf	3977,0,c	;volatile
   504                           
   505                           ;main.c: 76: printf( "\x1b[2J");
   506  00065A  0E8D               	movlw	low STR_1
   507  00065C  6E0D               	movwf	printf@f,c
   508  00065E  0E03               	movlw	high STR_1
   509  000660  6E0E               	movwf	printf@f+1,c
   510  000662  ECCA  F001         	call	_printf	;wreg free
   511                           
   512                           ;main.c: 77: {putch(0x0a); putch(0x0d);};
   513  000666  0E0A               	movlw	10
   514  000668  EC2F  F004         	call	_putch
   515  00066C  0E0D               	movlw	13
   516  00066E  EC2F  F004         	call	_putch
   517                           
   518                           ;main.c: 78: printf("Hello from Cornell Cup!\n\r");
   519  000672  0E4E               	movlw	low STR_2
   520  000674  6E0D               	movwf	printf@f,c
   521  000676  0E03               	movlw	high STR_2
   522  000678  6E0E               	movwf	printf@f+1,c
   523  00067A  ECCA  F001         	call	_printf	;wreg free
   524  00067E                     l1325:
   525                           
   526                           ;main.c: 81: if (ECAN_Receive()){
   527  00067E  ECBF  F002         	call	_ECAN_Receive	;wreg free
   528  000682  0900               	iorlw	0
   529  000684  B4D8               	btfsc	status,2,c
   530  000686  D7FB               	goto	l1325
   531                           
   532                           ;main.c: 83: printf("Receive ADDR = %X\n\r", (temp_SIDH << 3)| (temp_SIDL >> 5));
   533  000688  0E68               	movlw	low STR_3
   534  00068A  6E0D               	movwf	printf@f,c
   535  00068C  0E03               	movlw	high STR_3
   536  00068E  6E0E               	movwf	printf@f+1,c
   537  000690  C030  F01A         	movff	_temp_SIDL,??_main
   538  000694  0E05               	movlw	5
   539  000696  6E1B               	movwf	(??_main+1)& (0+255),c
   540  000698                     u485:
   541  000698  90D8               	bcf	status,0,c
   542  00069A  321A               	rrcf	??_main,f,c
   543  00069C  2E1B               	decfsz	(??_main+1)& (0+255),f,c
   544  00069E  D7FC               	goto	u485
   545  0006A0  501A               	movf	??_main,w,c
   546  0006A2  C02F  F01C         	movff	_temp_SIDH,??_main+2
   547  0006A6  6A1D               	clrf	(??_main+3)& (0+255),c
   548  0006A8  90D8               	bcf	status,0,c
   549  0006AA  361C               	rlcf	??_main+2,f,c
   550  0006AC  361D               	rlcf	??_main+3,f,c
   551  0006AE  90D8               	bcf	status,0,c
   552  0006B0  361C               	rlcf	??_main+2,f,c
   553  0006B2  361D               	rlcf	??_main+3,f,c
   554  0006B4  90D8               	bcf	status,0,c
   555  0006B6  361C               	rlcf	??_main+2,f,c
   556  0006B8  361D               	rlcf	??_main+3,f,c
   557  0006BA  101C               	iorwf	??_main+2,w,c
   558  0006BC  6E0F               	movwf	?_printf+2,c
   559  0006BE  501D               	movf	??_main+3,w,c
   560  0006C0  6E10               	movwf	?_printf+3,c
   561  0006C2  ECCA  F001         	call	_printf	;wreg free
   562                           
   563                           ;main.c: 84: printf("Data received: %d byte(s),  ", temp_DLC);
   564  0006C6  0E31               	movlw	low STR_4
   565  0006C8  6E0D               	movwf	printf@f,c
   566  0006CA  0E03               	movlw	high STR_4
   567  0006CC  6E0E               	movwf	printf@f+1,c
   568  0006CE  C02C  F00F         	movff	_temp_DLC,?_printf+2
   569  0006D2  6A10               	clrf	?_printf+3,c
   570  0006D4  ECCA  F001         	call	_printf	;wreg free
   571                           
   572                           ;main.c: 85: printf("Temperature = %d Fahrenheit\n\r", temp_D0);
   573  0006D8  0E13               	movlw	low STR_5
   574  0006DA  6E0D               	movwf	printf@f,c
   575  0006DC  0E03               	movlw	high STR_5
   576  0006DE  6E0E               	movwf	printf@f+1,c
   577  0006E0  C024  F00F         	movff	_temp_D0,?_printf+2
   578  0006E4  6A10               	clrf	?_printf+3,c
   579  0006E6  ECCA  F001         	call	_printf	;wreg free
   580                           
   581                           ;main.c: 87: else{
   582                           
   583                           ;main.c: 86: }
   584  0006EA  D7C9               	goto	l1325
   585  0006EC                     __end_of_main:
   586                           	opt stack 0
   587                           tblptru	equ	0xFF8
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           status	equ	0xFD8
   591                           
   592 ;; *************** function _printf *****************
   593 ;; Defined at:
   594 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  f               2   12[COMRAM] PTR const unsigned char 
   597 ;;		 -> STR_5(30), STR_4(29), STR_3(20), STR_2(26), 
   598 ;;		 -> STR_1(5), 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  idx             1   17[COMRAM] unsigned char 
   601 ;;  tmpval          4    0        struct .
   602 ;;  cp              3    0        PTR const unsigned char 
   603 ;;  val             2   22[COMRAM] unsigned int 
   604 ;;  ap              2   18[COMRAM] PTR void [1]
   605 ;;		 -> ?_printf(2), 
   606 ;;  len             2    0        unsigned int 
   607 ;;  c               1   24[COMRAM] char 
   608 ;;  flag            1   21[COMRAM] unsigned char 
   609 ;;  prec            1   20[COMRAM] char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2   12[COMRAM] int 
   612 ;; Registers used:
   613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   619 ;;      Params:         4       0       0       0
   620 ;;      Locals:         8       0       0       0
   621 ;;      Temps:          1       0       0       0
   622 ;;      Totals:        13       0       0       0
   623 ;;Total ram usage:       13 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    1
   626 ;; This function calls:
   627 ;;		___lwdiv
   628 ;;		___lwmod
   629 ;;		_putch
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text1
   636  000394                     __ptext1:
   637                           	opt stack 0
   638  000394                     _printf:
   639                           	opt stack 29
   640                           
   641                           ;doprnt.c: 466: va_list ap;
   642                           ;doprnt.c: 499: signed char c;
   643                           ;doprnt.c: 506: signed char prec;
   644                           ;doprnt.c: 508: unsigned char flag;
   645                           ;doprnt.c: 523: union {
   646                           ;doprnt.c: 524: unsigned long vd;
   647                           ;doprnt.c: 525: double integ;
   648                           ;doprnt.c: 526: } tmpval;
   649                           ;doprnt.c: 528: unsigned int val;
   650                           ;doprnt.c: 529: unsigned len;
   651                           ;doprnt.c: 530: const char * cp;
   652                           ;doprnt.c: 533: *ap = __va_start();
   653                           
   654                           ;incstack = 0
   655  000394  0E0F               	movlw	low (?_printf+2)
   656  000396  6E13               	movwf	printf@ap,c
   657  000398  0E00               	movlw	high (?_printf+2)
   658  00039A  6E14               	movwf	printf@ap+1,c
   659                           
   660                           ;doprnt.c: 536: while(c = *f++) {
   661  00039C  D0E3               	goto	l1311
   662  00039E                     l1233:
   663                           
   664                           ;doprnt.c: 538: if(c != '%')
   665  00039E  0E25               	movlw	37
   666  0003A0  1819               	xorwf	printf@c,w,c
   667  0003A2  B4D8               	btfsc	status,2,c
   668  0003A4  D004               	goto	l1237
   669                           
   670                           ;doprnt.c: 540: {
   671                           ;doprnt.c: 541: (putch(c) );
   672  0003A6  5019               	movf	printf@c,w,c
   673  0003A8  EC2F  F004         	call	_putch
   674                           
   675                           ;doprnt.c: 542: continue;
   676  0003AC  D0DB               	goto	l1311
   677  0003AE                     l1237:
   678                           
   679                           ;doprnt.c: 543: }
   680                           ;doprnt.c: 548: flag = 0;
   681  0003AE  0E00               	movlw	0
   682  0003B0  6E16               	movwf	printf@flag,c
   683                           
   684                           ;doprnt.c: 635: switch(c = *f++) {
   685  0003B2  D002               	goto	l1243
   686  0003B4                     l1239:
   687                           
   688                           ;doprnt.c: 718: case 'x':
   689                           ;doprnt.c: 721: flag |= 0x80;
   690  0003B4  8E16               	bsf	printf@flag,7,c
   691                           
   692                           ;doprnt.c: 723: break;
   693  0003B6  D01A               	goto	l331
   694  0003B8                     l1243:
   695  0003B8  C00D  FFF6         	movff	printf@f,tblptrl
   696  0003BC  C00E  FFF7         	movff	printf@f+1,tblptrh
   697  0003C0  4A0D               	infsnz	printf@f,f,c
   698  0003C2  2A0E               	incf	printf@f+1,f,c
   699  0003C4                     	if	0	;tblptru may be non-zero
   700  0003C4                     	endif
   701  0003C4                     	if	0	;tblptru may be non-zero
   702  0003C4                     	endif
   703  0003C4  0008               	tblrd		*
   704  0003C6  CFF5 F019          	movff	tablat,printf@c
   705  0003CA  5019               	movf	printf@c,w,c
   706                           
   707                           ; Switch size 1, requested type "space"
   708                           ; Number of cases is 5, Range of values is 0 to 120
   709                           ; switch strategies available:
   710                           ; Name         Instructions Cycles
   711                           ; simple_byte           16     9 (average)
   712                           ;	Chosen strategy is simple_byte
   713  0003CC  0A00               	xorlw	0	; case 0
   714  0003CE  B4D8               	btfsc	status,2,c
   715  0003D0  0012               	return	
   716  0003D2  0A58               	xorlw	88	; case 88
   717  0003D4  B4D8               	btfsc	status,2,c
   718  0003D6  D7EE               	goto	l1239
   719  0003D8  0A3C               	xorlw	60	; case 100
   720  0003DA  B4D8               	btfsc	status,2,c
   721  0003DC  D007               	goto	l331
   722  0003DE  0A0D               	xorlw	13	; case 105
   723  0003E0  B4D8               	btfsc	status,2,c
   724  0003E2  D004               	goto	l331
   725  0003E4  0A11               	xorlw	17	; case 120
   726  0003E6  B4D8               	btfsc	status,2,c
   727  0003E8  D7E5               	goto	l1239
   728  0003EA  D0BC               	goto	l1311
   729  0003EC                     l331:
   730                           
   731                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
   732  0003EC  BE16               	btfsc	printf@flag,7,c
   733  0003EE  D015               	goto	l1255
   734                           
   735                           ;doprnt.c: 1253: {
   736                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   737  0003F0  C013  FFD9         	movff	printf@ap,fsr2l
   738  0003F4  C014  FFDA         	movff	printf@ap+1,fsr2h
   739  0003F8  CFDE F017          	movff	postinc2,printf@val
   740  0003FC  CFDD F018          	movff	postdec2,printf@val+1
   741  000400  0E02               	movlw	2
   742  000402  2613               	addwf	printf@ap,f,c
   743  000404  0E00               	movlw	0
   744  000406  2214               	addwfc	printf@ap+1,f,c
   745                           
   746                           ;doprnt.c: 1261: if((int)val < 0) {
   747  000408  AE18               	btfss	printf@val+1,7,c
   748  00040A  D044               	goto	l1289
   749                           
   750                           ;doprnt.c: 1262: flag |= 0x03;
   751  00040C  0E03               	movlw	3
   752  00040E  1216               	iorwf	printf@flag,f,c
   753                           
   754                           ;doprnt.c: 1263: val = -val;
   755  000410  6C17               	negf	printf@val,c
   756  000412  1E18               	comf	printf@val+1,f,c
   757  000414  B0D8               	btfsc	status,0,c
   758  000416  2A18               	incf	printf@val+1,f,c
   759                           
   760                           ;doprnt.c: 1264: }
   761                           ;doprnt.c: 1266: }
   762  000418  D03D               	goto	l1289
   763  00041A                     l1255:
   764                           
   765                           ;doprnt.c: 1268: else
   766                           ;doprnt.c: 1273: {
   767                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
   768  00041A  C013  FFD9         	movff	printf@ap,fsr2l
   769  00041E  C014  FFDA         	movff	printf@ap+1,fsr2h
   770  000422  CFDE F017          	movff	postinc2,printf@val
   771  000426  CFDD F018          	movff	postdec2,printf@val+1
   772  00042A  0E02               	movlw	2
   773  00042C  2613               	addwf	printf@ap,f,c
   774  00042E  0E00               	movlw	0
   775  000430  2214               	addwfc	printf@ap+1,f,c
   776                           
   777                           ;doprnt.c: 1287: }
   778                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
   779  000432  D030               	goto	l1289
   780  000434                     l1259:
   781                           
   782                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   783  000434  0E01               	movlw	1
   784  000436  6E19               	movwf	printf@c,c
   785  000438                     l1261:
   786  000438  0E05               	movlw	5
   787  00043A  1819               	xorwf	printf@c,w,c
   788  00043C  B4D8               	btfsc	status,2,c
   789  00043E  D032               	goto	l1291
   790                           
   791                           ;doprnt.c: 1306: if(val < dpowers[c])
   792  000440  5019               	movf	printf@c,w,c
   793  000442  0D02               	mullw	2
   794  000444  0E01               	movlw	low _dpowers
   795  000446  24F3               	addwf	prodl,w,c
   796  000448  6EF6               	movwf	tblptrl,c
   797  00044A  0E03               	movlw	high _dpowers
   798  00044C  20F4               	addwfc	prodh,w,c
   799  00044E  6EF7               	movwf	tblptrh,c
   800  000450                     	if	0	;There are less than 3 active tblptr bytes
   801  000450                     	endif
   802  000450  0009               	tblrd		*+
   803  000452  50F5               	movf	tablat,w,c
   804  000454  5C17               	subwf	printf@val,w,c
   805  000456  0009               	tblrd		*+
   806  000458  50F5               	movf	tablat,w,c
   807  00045A  5818               	subwfb	printf@val+1,w,c
   808  00045C  A0D8               	btfss	status,0,c
   809  00045E  D022               	goto	l1291
   810                           
   811                           ;doprnt.c: 1307: break;
   812  000460  2A19               	incf	printf@c,f,c
   813  000462  D7EA               	goto	l1261
   814  000464                     l1273:
   815                           
   816                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
   817  000464  0E01               	movlw	1
   818  000466  6E19               	movwf	printf@c,c
   819  000468                     l1275:
   820  000468  0E04               	movlw	4
   821  00046A  1819               	xorwf	printf@c,w,c
   822  00046C  B4D8               	btfsc	status,2,c
   823  00046E  D01A               	goto	l1291
   824                           
   825                           ;doprnt.c: 1317: if(val < hexpowers[c])
   826  000470  5019               	movf	printf@c,w,c
   827  000472  0D02               	mullw	2
   828  000474  0E0B               	movlw	low _hexpowers
   829  000476  24F3               	addwf	prodl,w,c
   830  000478  6EF6               	movwf	tblptrl,c
   831  00047A  0E03               	movlw	high _hexpowers
   832  00047C  20F4               	addwfc	prodh,w,c
   833  00047E  6EF7               	movwf	tblptrh,c
   834  000480                     	if	0	;There are less than 3 active tblptr bytes
   835  000480                     	endif
   836  000480  0009               	tblrd		*+
   837  000482  50F5               	movf	tablat,w,c
   838  000484  5C17               	subwf	printf@val,w,c
   839  000486  0009               	tblrd		*+
   840  000488  50F5               	movf	tablat,w,c
   841  00048A  5818               	subwfb	printf@val+1,w,c
   842  00048C  A0D8               	btfss	status,0,c
   843  00048E  D00A               	goto	l1291
   844                           
   845                           ;doprnt.c: 1318: break;
   846  000490  2A19               	incf	printf@c,f,c
   847  000492  D7EA               	goto	l1275
   848  000494                     l1289:
   849  000494  5016               	movf	printf@flag,w,c
   850  000496  0B80               	andlw	128
   851                           
   852                           ; Switch size 1, requested type "space"
   853                           ; Number of cases is 2, Range of values is 0 to 128
   854                           ; switch strategies available:
   855                           ; Name         Instructions Cycles
   856                           ; simple_byte            7     4 (average)
   857                           ;	Chosen strategy is simple_byte
   858  000498  0A00               	xorlw	0	; case 0
   859  00049A  B4D8               	btfsc	status,2,c
   860  00049C  D7CB               	goto	l1259
   861  00049E  0A80               	xorlw	128	; case 128
   862  0004A0  B4D8               	btfsc	status,2,c
   863  0004A2  D7E0               	goto	l1273
   864  0004A4                     l1291:
   865                           
   866                           ;doprnt.c: 1422: {
   867                           ;doprnt.c: 1438: if(flag & 0x03)
   868  0004A4  C016  F011         	movff	printf@flag,??_printf
   869  0004A8  0E03               	movlw	3
   870  0004AA  1611               	andwf	??_printf,f,c
   871  0004AC  B4D8               	btfsc	status,2,c
   872  0004AE  D003               	goto	l1295
   873                           
   874                           ;doprnt.c: 1439: (putch('-') );
   875  0004B0  0E2D               	movlw	45
   876  0004B2  EC2F  F004         	call	_putch
   877  0004B6                     l1295:
   878                           
   879                           ;doprnt.c: 1469: }
   880                           ;doprnt.c: 1472: prec = c;
   881  0004B6  C019  F015         	movff	printf@c,printf@prec
   882                           
   883                           ;doprnt.c: 1474: while(prec--) {
   884  0004BA  D050               	goto	l1309
   885  0004BC                     l1297:
   886                           
   887                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   888  0004BC  5015               	movf	printf@prec,w,c
   889  0004BE  0D02               	mullw	2
   890  0004C0  0E01               	movlw	low _dpowers
   891  0004C2  24F3               	addwf	prodl,w,c
   892  0004C4  6EF6               	movwf	tblptrl,c
   893  0004C6  0E03               	movlw	high _dpowers
   894  0004C8  20F4               	addwfc	prodh,w,c
   895  0004CA  6EF7               	movwf	tblptrh,c
   896  0004CC                     	if	0	;There are less than 3 active tblptr bytes
   897  0004CC                     	endif
   898  0004CC  0009               	tblrd		*+
   899  0004CE  CFF5 F003          	movff	tablat,___lwdiv@divisor
   900  0004D2  000A               	tblrd		*-
   901  0004D4  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   902  0004D8  C017  F001         	movff	printf@val,___lwdiv@dividend
   903  0004DC  C018  F002         	movff	printf@val+1,___lwdiv@dividend+1
   904  0004E0  ECBC  F003         	call	___lwdiv	;wreg free
   905  0004E4  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   906  0004E8  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   907  0004EC  0E00               	movlw	0
   908  0004EE  6E0B               	movwf	___lwmod@divisor+1,c
   909  0004F0  0E0A               	movlw	10
   910  0004F2  6E0A               	movwf	___lwmod@divisor,c
   911  0004F4  ECE5  F003         	call	___lwmod	;wreg free
   912  0004F8  5008               	movf	?___lwmod,w,c
   913  0004FA  0F30               	addlw	48
   914  0004FC  6E19               	movwf	printf@c,c
   915                           
   916                           ;doprnt.c: 1491: break;
   917  0004FE  D02B               	goto	l1307
   918  000500                     l1299:
   919                           
   920                           ;doprnt.c: 1499: {
   921                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
   922  000500  C017  F001         	movff	printf@val,___lwdiv@dividend
   923  000504  C018  F002         	movff	printf@val+1,___lwdiv@dividend+1
   924  000508  5015               	movf	printf@prec,w,c
   925  00050A  0D02               	mullw	2
   926  00050C  0E0B               	movlw	low _hexpowers
   927  00050E  24F3               	addwf	prodl,w,c
   928  000510  6EF6               	movwf	tblptrl,c
   929  000512  0E03               	movlw	high _hexpowers
   930  000514  20F4               	addwfc	prodh,w,c
   931  000516  6EF7               	movwf	tblptrh,c
   932  000518                     	if	0	;There are less than 3 active tblptr bytes
   933  000518                     	endif
   934  000518  0009               	tblrd		*+
   935  00051A  CFF5 F003          	movff	tablat,___lwdiv@divisor
   936  00051E  000A               	tblrd		*-
   937  000520  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   938  000524  ECBC  F003         	call	___lwdiv	;wreg free
   939  000528  5001               	movf	?___lwdiv,w,c
   940  00052A  0B0F               	andlw	15
   941  00052C  6E12               	movwf	printf@idx,c
   942                           
   943                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
   944  00052E  5012               	movf	printf@idx,w,c
   945  000530  0D01               	mullw	1
   946  000532  0E7C               	movlw	low STR_6
   947  000534  24F3               	addwf	prodl,w,c
   948  000536  6EF6               	movwf	tblptrl,c
   949  000538  0E03               	movlw	high STR_6
   950  00053A  20F4               	addwfc	prodh,w,c
   951  00053C  6EF7               	movwf	tblptrh,c
   952  00053E                     	if	0	;There are less than 3 active tblptr bytes
   953  00053E                     	endif
   954  00053E  0008               	tblrd		*
   955  000540  CFF5 F019          	movff	tablat,printf@c
   956                           
   957                           ;doprnt.c: 1523: }
   958                           
   959                           ;doprnt.c: 1508: }
   960                           ;doprnt.c: 1510: break;
   961  000544  D008               	goto	l1307
   962  000546                     l1305:
   963  000546  5016               	movf	printf@flag,w,c
   964  000548  0B80               	andlw	128
   965                           
   966                           ; Switch size 1, requested type "space"
   967                           ; Number of cases is 2, Range of values is 0 to 128
   968                           ; switch strategies available:
   969                           ; Name         Instructions Cycles
   970                           ; simple_byte            7     4 (average)
   971                           ;	Chosen strategy is simple_byte
   972  00054A  0A00               	xorlw	0	; case 0
   973  00054C  B4D8               	btfsc	status,2,c
   974  00054E  D7B6               	goto	l1297
   975  000550  0A80               	xorlw	128	; case 128
   976  000552  B4D8               	btfsc	status,2,c
   977  000554  D7D5               	goto	l1299
   978  000556                     l1307:
   979                           
   980                           ;doprnt.c: 1524: (putch(c) );
   981  000556  5019               	movf	printf@c,w,c
   982  000558  EC2F  F004         	call	_putch
   983  00055C                     l1309:
   984  00055C  0615               	decf	printf@prec,f,c
   985  00055E  2815               	incf	printf@prec,w,c
   986  000560  A4D8               	btfss	status,2,c
   987  000562  D7F1               	goto	l1305
   988  000564                     l1311:
   989  000564  C00D  FFF6         	movff	printf@f,tblptrl
   990  000568  C00E  FFF7         	movff	printf@f+1,tblptrh
   991  00056C  4A0D               	infsnz	printf@f,f,c
   992  00056E  2A0E               	incf	printf@f+1,f,c
   993  000570                     	if	0	;tblptru may be non-zero
   994  000570                     	endif
   995  000570                     	if	0	;tblptru may be non-zero
   996  000570                     	endif
   997  000570  0008               	tblrd		*
   998  000572  CFF5 F019          	movff	tablat,printf@c
   999  000576  5019               	movf	printf@c,w,c
  1000  000578  B4D8               	btfsc	status,2,c
  1001  00057A  0012               	return	
  1002  00057C  D710               	goto	l1233
  1003  00057E                     __end_of_printf:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           prodh	equ	0xFF4
  1010                           prodl	equ	0xFF3
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postinc2	equ	0xFDE
  1014                           postdec2	equ	0xFDD
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _putch *****************
  1020 ;; Defined at:
  1021 ;;		line 198 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  byte            1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  byte            1    0[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1035 ;;      Params:         0       0       0       0
  1036 ;;      Locals:         1       0       0       0
  1037 ;;      Temps:          0       0       0       0
  1038 ;;      Totals:         1       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;;		_printf
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text2
  1050  00085E                     __ptext2:
  1051                           	opt stack 0
  1052  00085E                     _putch:
  1053                           	opt stack 30
  1054                           
  1055                           ;incstack = 0
  1056                           ;putch@byte stored from wreg
  1057  00085E  6E01               	movwf	putch@byte,c
  1058                           
  1059                           ;main.c: 199: TXREG = byte;
  1060  000860  C001  FFAD         	movff	putch@byte,4013	;volatile
  1061  000864                     l307:
  1062  000864  B2AC               	btfsc	4012,1,c	;volatile
  1063  000866  0012               	return	
  1064  000868  D7FD               	goto	l307
  1065  00086A                     __end_of_putch:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           prodh	equ	0xFF4
  1072                           prodl	equ	0xFF3
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postinc2	equ	0xFDE
  1076                           postdec2	equ	0xFDD
  1077                           fsr2h	equ	0xFDA
  1078                           fsr2l	equ	0xFD9
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function ___lwmod *****************
  1082 ;; Defined at:
  1083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  dividend        2    7[COMRAM] unsigned int 
  1086 ;;  divisor         2    9[COMRAM] unsigned int 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  counter         1   11[COMRAM] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2    7[COMRAM] unsigned int 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1098 ;;      Params:         4       0       0       0
  1099 ;;      Locals:         1       0       0       0
  1100 ;;      Temps:          0       0       0       0
  1101 ;;      Totals:         5       0       0       0
  1102 ;;Total ram usage:        5 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_printf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text3
  1112  0007CA                     __ptext3:
  1113                           	opt stack 0
  1114  0007CA                     ___lwmod:
  1115                           	opt stack 29
  1116                           
  1117                           ;incstack = 0
  1118  0007CA  500A               	movf	___lwmod@divisor,w,c
  1119  0007CC  100B               	iorwf	___lwmod@divisor+1,w,c
  1120  0007CE  B4D8               	btfsc	status,2,c
  1121  0007D0  D018               	goto	l770
  1122  0007D2  0E01               	movlw	1
  1123  0007D4  6E0C               	movwf	___lwmod@counter,c
  1124  0007D6  D004               	goto	l1221
  1125  0007D8                     l1219:
  1126  0007D8  90D8               	bcf	status,0,c
  1127  0007DA  360A               	rlcf	___lwmod@divisor,f,c
  1128  0007DC  360B               	rlcf	___lwmod@divisor+1,f,c
  1129  0007DE  2A0C               	incf	___lwmod@counter,f,c
  1130  0007E0                     l1221:
  1131  0007E0  AE0B               	btfss	___lwmod@divisor+1,7,c
  1132  0007E2  D7FA               	goto	l1219
  1133  0007E4                     l1223:
  1134  0007E4  500A               	movf	___lwmod@divisor,w,c
  1135  0007E6  5C08               	subwf	___lwmod@dividend,w,c
  1136  0007E8  500B               	movf	___lwmod@divisor+1,w,c
  1137  0007EA  5809               	subwfb	___lwmod@dividend+1,w,c
  1138  0007EC  A0D8               	btfss	status,0,c
  1139  0007EE  D004               	goto	l1227
  1140  0007F0  500A               	movf	___lwmod@divisor,w,c
  1141  0007F2  5E08               	subwf	___lwmod@dividend,f,c
  1142  0007F4  500B               	movf	___lwmod@divisor+1,w,c
  1143  0007F6  5A09               	subwfb	___lwmod@dividend+1,f,c
  1144  0007F8                     l1227:
  1145  0007F8  90D8               	bcf	status,0,c
  1146  0007FA  320B               	rrcf	___lwmod@divisor+1,f,c
  1147  0007FC  320A               	rrcf	___lwmod@divisor,f,c
  1148  0007FE  2E0C               	decfsz	___lwmod@counter,f,c
  1149  000800  D7F1               	goto	l1223
  1150  000802                     l770:
  1151  000802  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1152  000806  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1153  00080A  0012               	return		;funcret
  1154  00080C                     __end_of___lwmod:
  1155                           	opt stack 0
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postinc2	equ	0xFDE
  1165                           postdec2	equ	0xFDD
  1166                           fsr2h	equ	0xFDA
  1167                           fsr2l	equ	0xFD9
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function ___lwdiv *****************
  1171 ;; Defined at:
  1172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  dividend        2    0[COMRAM] unsigned int 
  1175 ;;  divisor         2    2[COMRAM] unsigned int 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  quotient        2    4[COMRAM] unsigned int 
  1178 ;;  counter         1    6[COMRAM] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2    0[COMRAM] unsigned int 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1188 ;;      Params:         4       0       0       0
  1189 ;;      Locals:         3       0       0       0
  1190 ;;      Temps:          0       0       0       0
  1191 ;;      Totals:         7       0       0       0
  1192 ;;Total ram usage:        7 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_printf
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text4
  1202  000778                     __ptext4:
  1203                           	opt stack 0
  1204  000778                     ___lwdiv:
  1205                           	opt stack 29
  1206                           
  1207                           ;incstack = 0
  1208  000778  0E00               	movlw	0
  1209  00077A  6E06               	movwf	___lwdiv@quotient+1,c
  1210  00077C  0E00               	movlw	0
  1211  00077E  6E05               	movwf	___lwdiv@quotient,c
  1212  000780  5003               	movf	___lwdiv@divisor,w,c
  1213  000782  1004               	iorwf	___lwdiv@divisor+1,w,c
  1214  000784  B4D8               	btfsc	status,2,c
  1215  000786  D01C               	goto	l760
  1216  000788  0E01               	movlw	1
  1217  00078A  6E07               	movwf	___lwdiv@counter,c
  1218  00078C  D004               	goto	l1201
  1219  00078E                     l1199:
  1220  00078E  90D8               	bcf	status,0,c
  1221  000790  3603               	rlcf	___lwdiv@divisor,f,c
  1222  000792  3604               	rlcf	___lwdiv@divisor+1,f,c
  1223  000794  2A07               	incf	___lwdiv@counter,f,c
  1224  000796                     l1201:
  1225  000796  AE04               	btfss	___lwdiv@divisor+1,7,c
  1226  000798  D7FA               	goto	l1199
  1227  00079A                     l1203:
  1228  00079A  90D8               	bcf	status,0,c
  1229  00079C  3605               	rlcf	___lwdiv@quotient,f,c
  1230  00079E  3606               	rlcf	___lwdiv@quotient+1,f,c
  1231  0007A0  5003               	movf	___lwdiv@divisor,w,c
  1232  0007A2  5C01               	subwf	___lwdiv@dividend,w,c
  1233  0007A4  5004               	movf	___lwdiv@divisor+1,w,c
  1234  0007A6  5802               	subwfb	___lwdiv@dividend+1,w,c
  1235  0007A8  A0D8               	btfss	status,0,c
  1236  0007AA  D005               	goto	l1211
  1237  0007AC  5003               	movf	___lwdiv@divisor,w,c
  1238  0007AE  5E01               	subwf	___lwdiv@dividend,f,c
  1239  0007B0  5004               	movf	___lwdiv@divisor+1,w,c
  1240  0007B2  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1241  0007B4  8005               	bsf	___lwdiv@quotient,0,c
  1242  0007B6                     l1211:
  1243  0007B6  90D8               	bcf	status,0,c
  1244  0007B8  3204               	rrcf	___lwdiv@divisor+1,f,c
  1245  0007BA  3203               	rrcf	___lwdiv@divisor,f,c
  1246  0007BC  2E07               	decfsz	___lwdiv@counter,f,c
  1247  0007BE  D7ED               	goto	l1203
  1248  0007C0                     l760:
  1249  0007C0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1250  0007C4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1251  0007C8  0012               	return		;funcret
  1252  0007CA                     __end_of___lwdiv:
  1253                           	opt stack 0
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           prodh	equ	0xFF4
  1259                           prodl	equ	0xFF3
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postinc2	equ	0xFDE
  1263                           postdec2	equ	0xFDD
  1264                           fsr2h	equ	0xFDA
  1265                           fsr2l	equ	0xFD9
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _InitDevice *****************
  1269 ;; Defined at:
  1270 ;;		line 100 in file "main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;		None               void
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1284 ;;      Params:         0       0       0       0
  1285 ;;      Locals:         0       0       0       0
  1286 ;;      Temps:          0       0       0       0
  1287 ;;      Totals:         0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    1
  1291 ;; This function calls:
  1292 ;;		_InitECAN
  1293 ;;		_InitUART
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text5
  1300  00080C                     __ptext5:
  1301                           	opt stack 0
  1302  00080C                     _InitDevice:
  1303                           	opt stack 29
  1304                           
  1305                           ;main.c: 104: OSCCONbits.IRCF = 7;
  1306                           
  1307                           ;incstack = 0
  1308  00080C  88D3               	bsf	4051,4,c	;volatile
  1309  00080E  8AD3               	bsf	4051,5,c	;volatile
  1310  000810  8CD3               	bsf	4051,6,c	;volatile
  1311                           
  1312                           ;main.c: 105: OSCTUNEbits.PLLEN = 0;
  1313  000812  9C9B               	bcf	3995,6,c	;volatile
  1314                           
  1315                           ;main.c: 108: heartbeatCount = 0;
  1316  000814  0E00               	movlw	0
  1317  000816  6E1F               	movwf	_heartbeatCount+1,c
  1318  000818  0E00               	movlw	0
  1319  00081A  6E1E               	movwf	_heartbeatCount,c
  1320                           
  1321                           ;main.c: 111: ADCON1bits.PCFG = 0xF;
  1322  00081C  80C1               	bsf	4033,0,c	;volatile
  1323  00081E  82C1               	bsf	4033,1,c	;volatile
  1324  000820  84C1               	bsf	4033,2,c	;volatile
  1325  000822  86C1               	bsf	4033,3,c	;volatile
  1326                           
  1327                           ;main.c: 114: TRISAbits.TRISA0 = 1;
  1328  000824  8092               	bsf	3986,0,c	;volatile
  1329                           
  1330                           ;main.c: 117: TRISBbits.TRISB2 = 0;
  1331  000826  9493               	bcf	3987,2,c	;volatile
  1332                           
  1333                           ;main.c: 118: TRISBbits.TRISB3 = 1;
  1334  000828  8693               	bsf	3987,3,c	;volatile
  1335                           
  1336                           ;main.c: 122: InitUART();
  1337  00082A  EC25  F004         	call	_InitUART	;wreg free
  1338                           
  1339                           ;main.c: 125: InitECAN();
  1340  00082E  EC76  F003         	call	_InitECAN	;wreg free
  1341  000832  0012               	return		;funcret
  1342  000834                     __end_of_InitDevice:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           postinc2	equ	0xFDE
  1353                           postdec2	equ	0xFDD
  1354                           fsr2h	equ	0xFDA
  1355                           fsr2l	equ	0xFD9
  1356                           status	equ	0xFD8
  1357                           
  1358 ;; *************** function _InitUART *****************
  1359 ;; Defined at:
  1360 ;;		line 180 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;		None               void
  1367 ;; Registers used:
  1368 ;;		wreg, status,2
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1374 ;;      Params:         0       0       0       0
  1375 ;;      Locals:         0       0       0       0
  1376 ;;      Temps:          0       0       0       0
  1377 ;;      Totals:         0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_InitDevice
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text6
  1388  00084A                     __ptext6:
  1389                           	opt stack 0
  1390  00084A                     _InitUART:
  1391                           	opt stack 29
  1392                           
  1393                           ;main.c: 182: TRISCbits.TRISC6 = 0;
  1394                           
  1395                           ;incstack = 0
  1396  00084A  9C94               	bcf	3988,6,c	;volatile
  1397                           
  1398                           ;main.c: 184: BAUDCONbits.BRG16 = 0;
  1399  00084C  96B8               	bcf	4024,3,c	;volatile
  1400                           
  1401                           ;main.c: 186: SPBRG = 12;
  1402  00084E  0E0C               	movlw	12
  1403  000850  6EAF               	movwf	4015,c	;volatile
  1404                           
  1405                           ;main.c: 189: TXSTAbits.TX9 = 0;
  1406  000852  9CAC               	bcf	4012,6,c	;volatile
  1407                           
  1408                           ;main.c: 190: TXSTAbits.TXEN = 1;
  1409  000854  8AAC               	bsf	4012,5,c	;volatile
  1410                           
  1411                           ;main.c: 191: TXSTAbits.SYNC = 0;
  1412  000856  98AC               	bcf	4012,4,c	;volatile
  1413                           
  1414                           ;main.c: 192: TXSTAbits.BRGH = 0;
  1415  000858  94AC               	bcf	4012,2,c	;volatile
  1416                           
  1417                           ;main.c: 194: RCSTAbits.SPEN = 1;
  1418  00085A  8EAB               	bsf	4011,7,c	;volatile
  1419  00085C  0012               	return		;funcret
  1420  00085E                     __end_of_InitUART:
  1421                           	opt stack 0
  1422                           tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           prodh	equ	0xFF4
  1427                           prodl	equ	0xFF3
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           postinc2	equ	0xFDE
  1431                           postdec2	equ	0xFDD
  1432                           fsr2h	equ	0xFDA
  1433                           fsr2l	equ	0xFD9
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _InitECAN *****************
  1437 ;; Defined at:
  1438 ;;		line 49 in file "ECAN_P18.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, status,2
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1452 ;;      Params:         0       0       0       0
  1453 ;;      Locals:         0       0       0       0
  1454 ;;      Temps:          0       0       0       0
  1455 ;;      Totals:         0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_InitDevice
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text7
  1466  0006EC                     __ptext7:
  1467                           	opt stack 0
  1468  0006EC                     _InitECAN:
  1469                           	opt stack 29
  1470                           
  1471                           ;ECAN_P18.c: 55: CANCON = 0x80;
  1472                           
  1473                           ;incstack = 0
  1474  0006EC  0E80               	movlw	128
  1475  0006EE  6E6F               	movwf	3951,c	;volatile
  1476  0006F0                     l165:
  1477  0006F0  B06E               	btfsc	3950,0,c	;volatile
  1478  0006F2  D7FE               	goto	l165
  1479                           
  1480                           ;ECAN_P18.c: 64: ECANCON = 0x00;
  1481  0006F4  0E00               	movlw	0
  1482  0006F6  6E77               	movwf	3959,c	;volatile
  1483                           
  1484                           ;ECAN_P18.c: 70: CIOCONbits.ENDRHI = 1;
  1485  0006F8  8A73               	bsf	3955,5,c	;volatile
  1486                           
  1487                           ;ECAN_P18.c: 73: CIOCONbits.CANCAP = 0;
  1488  0006FA  9873               	bcf	3955,4,c	;volatile
  1489                           
  1490                           ;ECAN_P18.c: 82: BRGCON1 = 0xC0;
  1491  0006FC  0EC0               	movlw	192
  1492  0006FE  6E70               	movwf	3952,c	;volatile
  1493                           
  1494                           ;ECAN_P18.c: 84: BRGCON2 = 0x80;
  1495  000700  0E80               	movlw	128
  1496  000702  6E71               	movwf	3953,c	;volatile
  1497                           
  1498                           ;ECAN_P18.c: 86: BRGCON3 = 0x05;
  1499  000704  0E05               	movlw	5
  1500  000706  6E72               	movwf	3954,c	;volatile
  1501                           
  1502                           ;ECAN_P18.c: 96: RXM0EIDH = 0x00;
  1503  000708  0E00               	movlw	0
  1504  00070A  010F               	movlb	15	; () banked
  1505  00070C  6F1A               	movwf	26,b	;volatile
  1506                           
  1507                           ;ECAN_P18.c: 97: RXM0EIDL = 0x00;
  1508  00070E  0E00               	movlw	0
  1509  000710  010F               	movlb	15	; () banked
  1510  000712  6F1B               	movwf	27,b	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;ECAN_P18.c: 98: RXM0SIDH = 0xFF;
  1514  000714  010F               	movlb	15	; () banked
  1515  000716  6918               	setf	24,b	;volatile
  1516                           
  1517                           ;ECAN_P18.c: 99: RXM0SIDL = 0xE0;
  1518  000718  0EE0               	movlw	224
  1519  00071A  010F               	movlb	15	; () banked
  1520  00071C  6F19               	movwf	25,b	;volatile
  1521                           
  1522                           ;ECAN_P18.c: 102: RXM1EIDH = 0x00;
  1523  00071E  0E00               	movlw	0
  1524  000720  010F               	movlb	15	; () banked
  1525  000722  6F1E               	movwf	30,b	;volatile
  1526                           
  1527                           ;ECAN_P18.c: 103: RXM1EIDL = 0x00;
  1528  000724  0E00               	movlw	0
  1529  000726  010F               	movlb	15	; () banked
  1530  000728  6F1F               	movwf	31,b	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;ECAN_P18.c: 104: RXM1SIDH = 0xFF;
  1534  00072A  010F               	movlb	15	; () banked
  1535  00072C  691C               	setf	28,b	;volatile
  1536                           
  1537                           ;ECAN_P18.c: 105: RXM1SIDL = 0xE0;
  1538  00072E  0EE0               	movlw	224
  1539  000730  010F               	movlb	15	; () banked
  1540  000732  6F1D               	movwf	29,b	;volatile
  1541                           
  1542                           ;ECAN_P18.c: 113: RXF0EIDH = 0x00;
  1543  000734  0E00               	movlw	0
  1544  000736  010F               	movlb	15	; () banked
  1545  000738  6F02               	movwf	2,b	;volatile
  1546                           
  1547                           ;ECAN_P18.c: 114: RXF0EIDL = 0x00;
  1548  00073A  0E00               	movlw	0
  1549  00073C  010F               	movlb	15	; () banked
  1550  00073E  6F03               	movwf	3,b	;volatile
  1551                           
  1552                           ;ECAN_P18.c: 115: RXF0SIDH = 0x00;
  1553  000740  0E00               	movlw	0
  1554  000742  010F               	movlb	15	; () banked
  1555  000744  6F00               	movwf	0,b	;volatile
  1556                           
  1557                           ;ECAN_P18.c: 116: RXF0SIDL = 0x20;
  1558  000746  0E20               	movlw	32
  1559  000748  010F               	movlb	15	; () banked
  1560  00074A  6F01               	movwf	1,b	;volatile
  1561                           
  1562                           ;ECAN_P18.c: 118: RXF1EIDH = 0x00;
  1563  00074C  0E00               	movlw	0
  1564  00074E  010F               	movlb	15	; () banked
  1565  000750  6F06               	movwf	6,b	;volatile
  1566                           
  1567                           ;ECAN_P18.c: 119: RXF1EIDL = 0x00;
  1568  000752  0E00               	movlw	0
  1569  000754  010F               	movlb	15	; () banked
  1570  000756  6F07               	movwf	7,b	;volatile
  1571                           
  1572                           ;ECAN_P18.c: 120: RXF1SIDH = 0x00;
  1573  000758  0E00               	movlw	0
  1574  00075A  010F               	movlb	15	; () banked
  1575  00075C  6F04               	movwf	4,b	;volatile
  1576                           
  1577                           ;ECAN_P18.c: 121: RXF1SIDL = 0x40;
  1578  00075E  0E40               	movlw	64
  1579  000760  010F               	movlb	15	; () banked
  1580  000762  6F05               	movwf	5,b	;volatile
  1581                           
  1582                           ;ECAN_P18.c: 125: RXB0CON = 0x20;
  1583  000764  0E20               	movlw	32
  1584  000766  6E60               	movwf	3936,c	;volatile
  1585                           
  1586                           ;ECAN_P18.c: 126: RXB1CON = 0x20;
  1587  000768  0E20               	movlw	32
  1588  00076A  010F               	movlb	15	; () banked
  1589  00076C  6F50               	movwf	80,b	;volatile
  1590                           
  1591                           ;ECAN_P18.c: 132: CANCON = 0x00;
  1592  00076E  0E00               	movlw	0
  1593  000770  6E6F               	movwf	3951,c	;volatile
  1594  000772                     l168:
  1595  000772  A06E               	btfss	3950,0,c	;volatile
  1596  000774  0012               	return	
  1597  000776  D7FD               	goto	l168
  1598  000778                     __end_of_InitECAN:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           prodh	equ	0xFF4
  1605                           prodl	equ	0xFF3
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           postinc2	equ	0xFDE
  1609                           postdec2	equ	0xFDD
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _ECAN_Receive *****************
  1615 ;; Defined at:
  1616 ;;		line 144 in file "ECAN_P18.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  RXMsgFlag       1    0[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      unsigned char 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1630 ;;      Params:         0       0       0       0
  1631 ;;      Locals:         1       0       0       0
  1632 ;;      Temps:          0       0       0       0
  1633 ;;      Totals:         1       0       0       0
  1634 ;;Total ram usage:        1 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text8
  1644  00057E                     __ptext8:
  1645                           	opt stack 0
  1646  00057E                     _ECAN_Receive:
  1647                           	opt stack 30
  1648                           
  1649                           ;ECAN_P18.c: 146: unsigned char RXMsgFlag;
  1650                           ;ECAN_P18.c: 148: RXMsgFlag = 0x00;
  1651                           
  1652                           ;incstack = 0
  1653  00057E  0E00               	movlw	0
  1654  000580  6E01               	movwf	ECAN_Receive@RXMsgFlag,c
  1655                           
  1656                           ;ECAN_P18.c: 150: if (RXB0CONbits.RXFUL)
  1657  000582  AE60               	btfss	3936,7,c	;volatile
  1658  000584  D01C               	goto	l174
  1659                           
  1660                           ;ECAN_P18.c: 151: {
  1661                           ;ECAN_P18.c: 152: temp_EIDH = RXB0EIDH;
  1662  000586  CF63 F02D          	movff	3939,_temp_EIDH	;volatile
  1663                           
  1664                           ;ECAN_P18.c: 153: temp_EIDL = RXB0EIDL;
  1665  00058A  CF64 F02E          	movff	3940,_temp_EIDL	;volatile
  1666                           
  1667                           ;ECAN_P18.c: 154: temp_SIDH = RXB0SIDH;
  1668  00058E  CF61 F02F          	movff	3937,_temp_SIDH	;volatile
  1669                           
  1670                           ;ECAN_P18.c: 155: temp_SIDL = RXB0SIDL;
  1671  000592  CF62 F030          	movff	3938,_temp_SIDL	;volatile
  1672                           
  1673                           ;ECAN_P18.c: 156: temp_DLC = RXB0DLC;
  1674  000596  CF65 F02C          	movff	3941,_temp_DLC	;volatile
  1675                           
  1676                           ;ECAN_P18.c: 157: temp_D0 = RXB0D0;
  1677  00059A  CF66 F024          	movff	3942,_temp_D0	;volatile
  1678                           
  1679                           ;ECAN_P18.c: 158: temp_D1 = RXB0D1;
  1680  00059E  CF67 F025          	movff	3943,_temp_D1	;volatile
  1681                           
  1682                           ;ECAN_P18.c: 159: temp_D2 = RXB0D2;
  1683  0005A2  CF68 F026          	movff	3944,_temp_D2	;volatile
  1684                           
  1685                           ;ECAN_P18.c: 160: temp_D3 = RXB0D3;
  1686  0005A6  CF69 F027          	movff	3945,_temp_D3	;volatile
  1687                           
  1688                           ;ECAN_P18.c: 161: temp_D4 = RXB0D4;
  1689  0005AA  CF6A F028          	movff	3946,_temp_D4	;volatile
  1690                           
  1691                           ;ECAN_P18.c: 162: temp_D5 = RXB0D5;
  1692  0005AE  CF6B F029          	movff	3947,_temp_D5	;volatile
  1693                           
  1694                           ;ECAN_P18.c: 163: temp_D6 = RXB0D6;
  1695  0005B2  CF6C F02A          	movff	3948,_temp_D6	;volatile
  1696                           
  1697                           ;ECAN_P18.c: 164: temp_D7 = RXB0D7;
  1698  0005B6  CF6D F02B          	movff	3949,_temp_D7	;volatile
  1699                           
  1700                           ;ECAN_P18.c: 165: RXB0CONbits.RXFUL = 0;
  1701  0005BA  9E60               	bcf	3936,7,c	;volatile
  1702  0005BC  D03F               	goto	l1051
  1703  0005BE                     l174:
  1704                           
  1705                           ;ECAN_P18.c: 168: else if (RXB1CONbits.RXFUL)
  1706  0005BE  010F               	movlb	15	; () banked
  1707  0005C0  AF50               	btfss	80,7,b	;volatile
  1708  0005C2  D01D               	goto	l176
  1709                           
  1710                           ; BSR set to: 15
  1711                           ;ECAN_P18.c: 169: {
  1712                           ;ECAN_P18.c: 170: temp_EIDH = RXB1EIDH;
  1713  0005C4  CF53 F02D          	movff	3923,_temp_EIDH	;volatile
  1714                           
  1715                           ;ECAN_P18.c: 171: temp_EIDL = RXB1EIDL;
  1716  0005C8  CF54 F02E          	movff	3924,_temp_EIDL	;volatile
  1717                           
  1718                           ;ECAN_P18.c: 172: temp_SIDH = RXB1SIDH;
  1719  0005CC  CF51 F02F          	movff	3921,_temp_SIDH	;volatile
  1720                           
  1721                           ;ECAN_P18.c: 173: temp_SIDL = RXB1SIDL;
  1722  0005D0  CF52 F030          	movff	3922,_temp_SIDL	;volatile
  1723                           
  1724                           ;ECAN_P18.c: 174: temp_DLC = RXB1DLC;
  1725  0005D4  CF55 F02C          	movff	3925,_temp_DLC	;volatile
  1726                           
  1727                           ;ECAN_P18.c: 175: temp_D0 = RXB1D0;
  1728  0005D8  CF56 F024          	movff	3926,_temp_D0	;volatile
  1729                           
  1730                           ;ECAN_P18.c: 176: temp_D1 = RXB1D1;
  1731  0005DC  CF57 F025          	movff	3927,_temp_D1	;volatile
  1732                           
  1733                           ;ECAN_P18.c: 177: temp_D2 = RXB1D2;
  1734  0005E0  CF58 F026          	movff	3928,_temp_D2	;volatile
  1735                           
  1736                           ;ECAN_P18.c: 178: temp_D3 = RXB1D3;
  1737  0005E4  CF59 F027          	movff	3929,_temp_D3	;volatile
  1738                           
  1739                           ;ECAN_P18.c: 179: temp_D4 = RXB1D4;
  1740  0005E8  CF5A F028          	movff	3930,_temp_D4	;volatile
  1741                           
  1742                           ;ECAN_P18.c: 180: temp_D5 = RXB1D5;
  1743  0005EC  CF5B F029          	movff	3931,_temp_D5	;volatile
  1744                           
  1745                           ;ECAN_P18.c: 181: temp_D6 = RXB1D6;
  1746  0005F0  CF5C F02A          	movff	3932,_temp_D6	;volatile
  1747                           
  1748                           ;ECAN_P18.c: 182: temp_D7 = RXB1D7;
  1749  0005F4  CF5D F02B          	movff	3933,_temp_D7	;volatile
  1750                           
  1751                           ;ECAN_P18.c: 183: RXB1CONbits.RXFUL = 0;
  1752  0005F8  010F               	movlb	15	; () banked
  1753  0005FA  9F50               	bcf	80,7,b	;volatile
  1754  0005FC  D01F               	goto	l1051
  1755  0005FE                     l176:
  1756                           
  1757                           ; BSR set to: 15
  1758                           ;ECAN_P18.c: 186: else if (B0CONbits.RXFUL)
  1759  0005FE  010E               	movlb	14	; () banked
  1760  000600  AF20               	btfss	32,7,b	;volatile
  1761  000602  D01E               	goto	l1053
  1762                           
  1763                           ; BSR set to: 14
  1764                           ;ECAN_P18.c: 187: {
  1765                           ;ECAN_P18.c: 188: temp_EIDH = B0EIDH;
  1766  000604  CE23 F02D          	movff	3619,_temp_EIDH	;volatile
  1767                           
  1768                           ;ECAN_P18.c: 189: temp_EIDL = B0EIDL;
  1769  000608  CE24 F02E          	movff	3620,_temp_EIDL	;volatile
  1770                           
  1771                           ;ECAN_P18.c: 190: temp_SIDH = B0SIDH;
  1772  00060C  CE21 F02F          	movff	3617,_temp_SIDH	;volatile
  1773                           
  1774                           ;ECAN_P18.c: 191: temp_SIDL = B0SIDL;
  1775  000610  CE22 F030          	movff	3618,_temp_SIDL	;volatile
  1776                           
  1777                           ;ECAN_P18.c: 192: temp_DLC = B0DLC;
  1778  000614  CE25 F02C          	movff	3621,_temp_DLC	;volatile
  1779                           
  1780                           ;ECAN_P18.c: 193: temp_D0 = B0D0;
  1781  000618  CE26 F024          	movff	3622,_temp_D0	;volatile
  1782                           
  1783                           ;ECAN_P18.c: 194: temp_D1 = B0D1;
  1784  00061C  CE27 F025          	movff	3623,_temp_D1	;volatile
  1785                           
  1786                           ;ECAN_P18.c: 195: temp_D2 = B0D2;
  1787  000620  CE28 F026          	movff	3624,_temp_D2	;volatile
  1788                           
  1789                           ;ECAN_P18.c: 196: temp_D3 = B0D3;
  1790  000624  CE29 F027          	movff	3625,_temp_D3	;volatile
  1791                           
  1792                           ;ECAN_P18.c: 197: temp_D4 = B0D4;
  1793  000628  CE2A F028          	movff	3626,_temp_D4	;volatile
  1794                           
  1795                           ;ECAN_P18.c: 198: temp_D5 = B0D5;
  1796  00062C  CE2B F029          	movff	3627,_temp_D5	;volatile
  1797                           
  1798                           ;ECAN_P18.c: 199: temp_D6 = B0D6;
  1799  000630  CE2C F02A          	movff	3628,_temp_D6	;volatile
  1800                           
  1801                           ;ECAN_P18.c: 200: temp_D7 = B0D7;
  1802  000634  CE2D F02B          	movff	3629,_temp_D7	;volatile
  1803                           
  1804                           ;ECAN_P18.c: 202: B0CONbits.RXFUL = 0;
  1805  000638  010E               	movlb	14	; () banked
  1806  00063A  9F20               	bcf	32,7,b	;volatile
  1807  00063C                     l1051:
  1808                           
  1809                           ; BSR set to: 14
  1810                           ;ECAN_P18.c: 203: RXMsgFlag = 0x01;
  1811  00063C  0E01               	movlw	1
  1812  00063E  6E01               	movwf	ECAN_Receive@RXMsgFlag,c
  1813  000640                     l1053:
  1814                           
  1815                           ;ECAN_P18.c: 204: }
  1816                           ;ECAN_P18.c: 206: if (RXMsgFlag == 0x01)
  1817  000640  0401               	decf	ECAN_Receive@RXMsgFlag,w,c
  1818  000642  A4D8               	btfss	status,2,c
  1819  000644  D005               	goto	l1065
  1820                           
  1821                           ;ECAN_P18.c: 207: {
  1822                           ;ECAN_P18.c: 208: RXMsgFlag = 0x00;
  1823  000646  0E00               	movlw	0
  1824  000648  6E01               	movwf	ECAN_Receive@RXMsgFlag,c
  1825                           
  1826                           ;ECAN_P18.c: 209: RXB1IF = 0;
  1827  00064A  92A4               	bcf	4004,1,c	;volatile
  1828                           
  1829                           ;ECAN_P18.c: 210: return 1;
  1830  00064C  0E01               	movlw	1
  1831                           
  1832                           ;ECAN_P18.c: 211: }
  1833  00064E  0012               	return	
  1834  000650                     l1065:
  1835                           
  1836                           ;ECAN_P18.c: 212: else
  1837                           ;ECAN_P18.c: 213: {
  1838                           ;ECAN_P18.c: 214: return 0;
  1839  000650  0E00               	movlw	0
  1840  000652  0012               	return	
  1841  000654                     __end_of_ECAN_Receive:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           postinc0	equ	0xFEE
  1850                           wreg	equ	0xFE8
  1851                           postinc2	equ	0xFDE
  1852                           postdec2	equ	0xFDD
  1853                           fsr2h	equ	0xFDA
  1854                           fsr2l	equ	0xFD9
  1855                           status	equ	0xFD8
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           prodh	equ	0xFF4
  1861                           prodl	equ	0xFF3
  1862                           postinc0	equ	0xFEE
  1863                           wreg	equ	0xFE8
  1864                           postinc2	equ	0xFDE
  1865                           postdec2	equ	0xFDD
  1866                           fsr2h	equ	0xFDA
  1867                           fsr2l	equ	0xFD9
  1868                           status	equ	0xFD8
  1869                           
  1870                           	psect	rparam
  1871  0000                     tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           prodh	equ	0xFF4
  1876                           prodl	equ	0xFF3
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           postinc2	equ	0xFDE
  1880                           postdec2	equ	0xFDD
  1881                           fsr2h	equ	0xFDA
  1882                           fsr2l	equ	0xFD9
  1883                           status	equ	0xFD8


Data Sizes:
    Strings     127
    Constant    18
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[30]), STR_4(CODE[29]), STR_3(CODE[20]), STR_2(CODE[26]), 
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1705
                                             25 COMRAM     4     4      0
                       _ECAN_Receive
                         _InitDevice
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1675
                                             12 COMRAM    13     9      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
                           _InitECAN
                           _InitUART
 ---------------------------------------------------------------------------------
 (2) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitECAN                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECAN_Receive
   _InitDevice
     _InitECAN
     _InitUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      30       1       50.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30       9        0.0%
DATA                 0      0      30      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Feb 10 22:28:10 2016

            __CFG_BORV$0 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
            __CFG_LVP$ON 000000                      l307 0864                      l331 03EC  
                    l165 06F0                      l174 05BE                      l176 05FE  
                    l168 0772                      l760 07C0                      l770 0802  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      u485 0698  
                    wreg 000FE8                     _B0D0 000E26                     _B0D1 000E27  
                   _B0D2 000E28                     _B0D3 000E29                     _B0D4 000E2A  
                   _B0D5 000E2B                     _B0D6 000E2C                     _B0D7 000E2D  
           __CFG_WDT$OFF 000000                     l1201 0796                     l1051 063C  
                   l1211 07B6                     l1203 079A                     l1053 0640  
                   l1221 07E0                     l1223 07E4                     l1311 0564  
                   l1065 0650                     l1305 0546                     l1233 039E  
                   l1227 07F8                     l1219 07D8                     l1307 0556  
                   l1243 03B8                     l1309 055C                     l1261 0438  
                   l1237 03AE                     l1325 067E                     l1255 041A  
                   l1239 03B4                     l1273 0464                     l1275 0468  
                   l1291 04A4                     l1259 0434                     l1199 078E  
                   l1295 04B6                     l1297 04BC                     l1289 0494  
                   l1299 0500                     STR_1 038D                     STR_2 034E  
                   STR_3 0368                     STR_4 0331                     STR_5 0313  
                   STR_6 037C             __CFG_PWRT$ON 000000                     _main 0654  
                   fsr2h 000FDA                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
           ___param_bank 000010                    _B0DLC 000E25                    ?_main 0001  
        __end_of___lwdiv 07CA          __end_of___lwmod 080C                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_dpowers 030B                    _putch 085E  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
             _InitDevice 080C    __size_of_ECAN_Receive 00D6           __CFG_MCLRE$OFF 000000  
        __initialization 0834             __end_of_main 06EC         __end_of_InitECAN 0778  
       __end_of_InitUART 085E                   ??_main 001A            __activetblptr 000002  
                 _B0EIDH 000E23                   _B0EIDL 000E24                   _B0SIDH 000E21  
                 _B0SIDL 000E22                   _CANCON 000F6F          __CFG_BBSIZ$1024 000000  
                 ?_putch 0001             _ECAN_Receive 057E                   _RXB0D0 000F66  
                 _RXB0D1 000F67                   _RXB0D2 000F68                   _RXB0D3 000F69  
                 _RXB0D4 000F6A                   _RXB1D0 000F56                   _RXB0D5 000F6B  
                 _RXB1D1 000F57                   _RXB0D6 000F6C                   _RXB1D2 000F58  
                 _RXB0D7 000F6D                   _RXB1D3 000F59                   _RXB1D4 000F5A  
                 _RXB1D5 000F5B                   _RXB1D6 000F5C                   _RXB1D7 000F5D  
                 _RXB1IF 007D21                   _TXB0D0 000F46                   _TXB0D1 000F47  
                 _TXB0D2 000F48                   _TXB0D3 000F49                   _TXB0D4 000F4A  
                 _TXB0D5 000F4B                   _TXB0D6 000F4C                   _TXB0D7 000F4D  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lwdiv 0005  
              ??___lwmod 000C                   clear_0 083A                   _printf 0394  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0840  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001              ?_InitDevice 0001  
         __pcstackCOMRAM 0001            __end_of_putch 086A                  ??_putch 0001  
              ?_InitECAN 0001                ?_InitUART 0001                _B0CONbits 000E20  
                _ECANCON 000F77                  _CANSTAT 000F6E                  ?_printf 000D  
                _BRGCON1 000F70                  _BRGCON2 000F71                  _BRGCON3 000F72  
    __size_of_InitDevice 0028                  _RXB0DLC 000F65                  _RXB1DLC 000F55  
                _RXB0CON 000F60                  _RXB1CON 000F50                  _TXB0DLC 000F45  
             ??_InitECAN 0001               ??_InitUART 0001                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0778                  ___lwmod 07CA  
           __psmallconst 0300                  __pcinit 0834                  __ramtop 0300  
                __ptext0 0654                  __ptext1 0394                  __ptext2 085E  
                __ptext3 07CA                  __ptext4 0778                  __ptext5 080C  
                __ptext6 084A                  __ptext7 06EC                  __ptext8 057E  
        __size_of_printf 01EA        __end_of_hexpowers 0313                  _dpowers 0301  
                _temp_D0 0024                  _temp_D1 0025                  _temp_D2 0026  
                _temp_D3 0027                  _temp_D4 0028                  _temp_D5 0029  
                _temp_D6 002A                  _temp_D7 002B     end_of_initialization 0840  
          __Lmediumconst 0000                _RCSTAbits 000FAB                  printf@c 0019  
                printf@f 000D                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94                _TXSTAbits 000FAC             ??_InitDevice 0001  
            _BAUDCONbits 000FB8           __end_of_printf 057E      start_initialization 0834  
     __end_of_InitDevice 0834         __CFG_OSC$IRCIO67 000000        __size_of_InitECAN 008C  
      __size_of_InitUART 0014         __CFG_LPT1OSC$OFF 000000                 ??_printf 0011  
            __pbssCOMRAM 001E         ___lwdiv@dividend 0001                 ?___lwdiv 0001  
               ?___lwmod 0008           _heartbeatCount 001E              __smallconst 0300  
              _hexpowers 030B         ___lwdiv@quotient 0005            ?_ECAN_Receive 0001  
         __size_of_putch 000C                 _LATAbits 000F89                _temp_EIDH 002D  
              _temp_EIDL 002E                _temp_SIDH 002F                _temp_SIDL 0030  
               _RXB0EIDH 000F63                 _RXB0EIDL 000F64                 _RXB1EIDH 000F53  
               _RXB1EIDL 000F54         __CFG_WDTPS$32768 000000                 _RXB0SIDH 000F61  
               _RXB0SIDL 000F62                 _RXF0EIDH 000F02                 _RXB1SIDH 000F51  
               _RXF0EIDL 000F03                 _RXB1SIDL 000F52                 _RXF1EIDH 000F06  
               _RXF1EIDL 000F07                 _RXF0SIDH 000F00                 _RXF0SIDL 000F01  
               _TXB0EIDH 000F43                 _RXF1SIDH 000F04                 _TXB0EIDL 000F44  
               _RXF1SIDL 000F05                 _RXM0EIDH 000F1A                 _RXM0EIDL 000F1B  
               _TXB0SIDH 000F41                 _RXM1EIDH 000F1E                 _TXB0SIDL 000F42  
               _RXM1EIDL 000F1F                 _RXM0SIDH 000F18                 _RXM0SIDL 000F19  
               _RXM1SIDH 000F1C                 _RXM1SIDL 000F1D               _ADCON1bits 000FC1  
  ECAN_Receive@RXMsgFlag 0001               printf@flag 0016               printf@prec 0015  
         ??_ECAN_Receive 0001                 _InitECAN 06EC                 _InitUART 084A  
               __Hrparam 0000          _CAN_RX_Adress_H 0020          _CAN_RX_Adress_L 0021  
               __Lrparam 0000               _CIOCONbits 000F73         __size_of___lwdiv 0052  
       __size_of___lwmod 0042          ___lwdiv@divisor 0003          _CAN_TX_Adress_H 0022  
        _CAN_TX_Adress_L 0023          ___lwdiv@counter 0007            __size_of_main 0098  
               _temp_DLC 002C                printf@idx 0012                printf@val 0017  
            _RXB0CONbits 000F60              _RXB1CONbits 000F50                putch@byte 0001  
            _OSCTUNEbits 000F9B         ___lwmod@dividend 0008              _TXB0CONbits 000F40  
             _OSCCONbits 000FD3                 printf@ap 0013     __end_of_ECAN_Receive 0654  
        ___lwmod@divisor 000A          ___lwmod@counter 000C  
