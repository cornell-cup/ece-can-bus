

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 15:13:37 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     _RXFCON0	set	3540
    26  0000                     _RXFCON1	set	3541
    27  0000                     _RXB1CON	set	3920
    28  0000                     _RXF0EIDH	set	3842
    29  0000                     _RXF0EIDL	set	3843
    30  0000                     _RXF0SIDH	set	3840
    31  0000                     _RXF0SIDL	set	3841
    32  0000                     _RXF1SIDH	set	3844
    33  0000                     _RXF1SIDL	set	3845
    34  0000                     _RXF2SIDH	set	3848
    35  0000                     _RXF2SIDL	set	3849
    36  0000                     _RXF3SIDH	set	3852
    37  0000                     _RXF3SIDL	set	3853
    38  0000                     _RXF4SIDH	set	3856
    39  0000                     _RXF4SIDL	set	3857
    40  0000                     _RXF5SIDH	set	3860
    41  0000                     _RXF5SIDL	set	3861
    42  0000                     _RXM0EIDH	set	3866
    43  0000                     _RXM0EIDL	set	3867
    44  0000                     _RXM0SIDH	set	3864
    45  0000                     _RXM0SIDL	set	3865
    46  0000                     _RXM1EIDH	set	3870
    47  0000                     _RXM1EIDL	set	3871
    48  0000                     _RXM1SIDH	set	3868
    49  0000                     _RXM1SIDL	set	3869
    50  0000                     _TXB0CONbits	set	3904
    51  0000                     _TXB0D0	set	3910
    52  0000                     _TXB0D1	set	3911
    53  0000                     _TXB0D2	set	3912
    54  0000                     _TXB0D3	set	3913
    55  0000                     _TXB0D4	set	3914
    56  0000                     _TXB0D5	set	3915
    57  0000                     _TXB0D6	set	3916
    58  0000                     _TXB0D7	set	3917
    59  0000                     _TXB0DLC	set	3909
    60  0000                     _TXB0EIDH	set	3907
    61  0000                     _TXB0EIDL	set	3908
    62  0000                     _TXB0SIDH	set	3905
    63  0000                     _TXB0SIDL	set	3906
    64  0000                     _TXB1CONbits	set	3888
    65  0000                     _TXB2CONbits	set	3872
    66  0000                     _ADCON0	set	4034
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _ADCON1	set	4033
    69  0000                     _ADCON1bits	set	4033
    70  0000                     _ADCON2	set	4032
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADRESL	set	4035
    73  0000                     _BAUDCONbits	set	4024
    74  0000                     _BRGCON1	set	3952
    75  0000                     _BRGCON2	set	3953
    76  0000                     _BRGCON3	set	3954
    77  0000                     _CANCON	set	3951
    78  0000                     _CANSTAT	set	3950
    79  0000                     _CIOCON	set	3955
    80  0000                     _CIOCONbits	set	3955
    81  0000                     _COMSTATbits	set	3956
    82  0000                     _ECANCON	set	3959
    83  0000                     _IPR3	set	4005
    84  0000                     _LATAbits	set	3977
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _OSCTUNEbits	set	3995
    87  0000                     _PIE3	set	4003
    88  0000                     _PIR3	set	4004
    89  0000                     _PIR3bits	set	4004
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _RXB0CON	set	3936
    92  0000                     _RXB0CONbits	set	3936
    93  0000                     _RXB0D0	set	3942
    94  0000                     _RXB0D1	set	3943
    95  0000                     _RXB0D2	set	3944
    96  0000                     _RXB0D3	set	3945
    97  0000                     _RXB0D4	set	3946
    98  0000                     _RXB0D5	set	3947
    99  0000                     _RXB0D6	set	3948
   100  0000                     _RXB0D7	set	3949
   101  0000                     _RXB0DLC	set	3941
   102  0000                     _RXB0SIDH	set	3937
   103  0000                     _RXB0SIDL	set	3938
   104  0000                     _SPBRG	set	4015
   105  0000                     _TRISAbits	set	3986
   106  0000                     _TRISBbits	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _TXREG	set	4013
   109  0000                     _TXSTAbits	set	4012
   110                           
   111                           	psect	smallconst
   112  000300                     __psmallconst:
   113                           	opt stack 0
   114  000300  00                 	db	0
   115  000301                     STR_2:
   116                           
   117                           ; BSR set to: 15
   118  000301  48                 	db	72	;'H'
   119  000302  65                 	db	101	;'e'
   120  000303  6C                 	db	108	;'l'
   121  000304  6C                 	db	108	;'l'
   122  000305  6F                 	db	111	;'o'
   123  000306  20                 	db	32
   124  000307  66                 	db	102	;'f'
   125  000308  72                 	db	114	;'r'
   126  000309  6F                 	db	111	;'o'
   127  00030A  6D                 	db	109	;'m'
   128  00030B  20                 	db	32
   129  00030C  43                 	db	67	;'C'
   130  00030D  6F                 	db	111	;'o'
   131  00030E  72                 	db	114	;'r'
   132  00030F  6E                 	db	110	;'n'
   133  000310  65                 	db	101	;'e'
   134  000311  6C                 	db	108	;'l'
   135  000312  6C                 	db	108	;'l'
   136  000313  20                 	db	32
   137  000314  43                 	db	67	;'C'
   138  000315  75                 	db	117	;'u'
   139  000316  70                 	db	112	;'p'
   140  000317  21                 	db	33
   141  000318  0A                 	db	10
   142  000319  0D                 	db	13
   143  00031A  00                 	db	0
   144  00031B                     STR_1:
   145                           
   146                           ; BSR set to: 15
   147  00031B  1B                 	db	27
   148  00031C  5B                 	db	91	;'['
   149  00031D  32                 	db	50	;'2'
   150  00031E  4A                 	db	74	;'J'
   151  00031F  00                 	db	0
   152                           
   153                           ; #config settings
   154  000320  00                 	db	0	; dummy byte at the end
   155  0000                     
   156                           	psect	cinit
   157  000936                     __pcinit:
   158                           	opt stack 0
   159  000936                     start_initialization:
   160                           	opt stack 0
   161  000936                     __initialization:
   162                           	opt stack 0
   163                           
   164                           ; Clear objects allocated to COMRAM (35 bytes)
   165  000936  EE00  F032         	lfsr	0,__pbssCOMRAM
   166  00093A  0E23               	movlw	35
   167  00093C                     clear_0:
   168  00093C  6AEE               	clrf	postinc0,c
   169  00093E  06E8               	decf	wreg,f,c
   170  000940  E1FD               	bnz	clear_0
   171  000942                     end_of_initialization:
   172                           	opt stack 0
   173  000942                     __end_of__initialization:
   174                           	opt stack 0
   175  000942  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176  000944  6EF8               	movwf	tblptru,c
   177  000946  0E03               	movlw	high __Lsmallconst
   178  000948  6EF7               	movwf	tblptrh,c
   179  00094A  0100               	movlb	0
   180  00094C  EFF8  F002         	goto	_main	;jump to C main() function
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           
   186                           	psect	bssCOMRAM
   187  000032                     __pbssCOMRAM:
   188                           	opt stack 0
   189  000032                     _CAN_RX_Adress_H:
   190                           	opt stack 0
   191  000032                     	ds	1
   192  000033                     _CAN_RX_Adress_L:
   193                           	opt stack 0
   194  000033                     	ds	1
   195  000034                     _CAN_TX_Adress_H:
   196                           	opt stack 0
   197  000034                     	ds	1
   198  000035                     _CAN_TX_Adress_L:
   199                           	opt stack 0
   200  000035                     	ds	1
   201  000036                     _RecData0:
   202                           	opt stack 0
   203  000036                     	ds	1
   204  000037                     _RecData1:
   205                           	opt stack 0
   206  000037                     	ds	1
   207  000038                     _RecData2:
   208                           	opt stack 0
   209  000038                     	ds	1
   210  000039                     _RecData3:
   211                           	opt stack 0
   212  000039                     	ds	1
   213  00003A                     _RecData4:
   214                           	opt stack 0
   215  00003A                     	ds	1
   216  00003B                     _RecData5:
   217                           	opt stack 0
   218  00003B                     	ds	1
   219  00003C                     _RecData6:
   220                           	opt stack 0
   221  00003C                     	ds	1
   222  00003D                     _RecData7:
   223                           	opt stack 0
   224  00003D                     	ds	1
   225  00003E                     _TransData0:
   226                           	opt stack 0
   227  00003E                     	ds	1
   228  00003F                     _TransData1:
   229                           	opt stack 0
   230  00003F                     	ds	1
   231  000040                     _TransData2:
   232                           	opt stack 0
   233  000040                     	ds	1
   234  000041                     _TransData3:
   235                           	opt stack 0
   236  000041                     	ds	1
   237  000042                     _TransData4:
   238                           	opt stack 0
   239  000042                     	ds	1
   240  000043                     _TransData5:
   241                           	opt stack 0
   242  000043                     	ds	1
   243  000044                     _TransData6:
   244                           	opt stack 0
   245  000044                     	ds	1
   246  000045                     _TransData7:
   247                           	opt stack 0
   248  000045                     	ds	1
   249  000046                     _TransData8:
   250                           	opt stack 0
   251  000046                     	ds	1
   252  000047                     _temp_D0:
   253                           	opt stack 0
   254  000047                     	ds	1
   255  000048                     _temp_D1:
   256                           	opt stack 0
   257  000048                     	ds	1
   258  000049                     _temp_D2:
   259                           	opt stack 0
   260  000049                     	ds	1
   261  00004A                     _temp_D3:
   262                           	opt stack 0
   263  00004A                     	ds	1
   264  00004B                     _temp_D4:
   265                           	opt stack 0
   266  00004B                     	ds	1
   267  00004C                     _temp_D5:
   268                           	opt stack 0
   269  00004C                     	ds	1
   270  00004D                     _temp_D6:
   271                           	opt stack 0
   272  00004D                     	ds	1
   273  00004E                     _temp_D7:
   274                           	opt stack 0
   275  00004E                     	ds	1
   276  00004F                     _temp_DLC:
   277                           	opt stack 0
   278  00004F                     	ds	1
   279  000050                     _temp_EIDH:
   280                           	opt stack 0
   281  000050                     	ds	1
   282  000051                     _temp_EIDL:
   283                           	opt stack 0
   284  000051                     	ds	1
   285  000052                     _temp_SIDH:
   286                           	opt stack 0
   287  000052                     	ds	1
   288  000053                     _temp_SIDL:
   289                           	opt stack 0
   290  000053                     	ds	1
   291  000054                     _temperature:
   292                           	opt stack 0
   293  000054                     	ds	1
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	cstackCOMRAM
   300  000001                     __pcstackCOMRAM:
   301                           	opt stack 0
   302  000001                     ?_adc_read_sensor:
   303                           	opt stack 0
   304  000001                     ?___ftpack:
   305                           	opt stack 0
   306  000001                     ?___fttol:
   307                           	opt stack 0
   308  000001                     putch@byte:
   309                           	opt stack 0
   310  000001                     ___ftpack@arg:
   311                           	opt stack 0
   312  000001                     ___fttol@f1:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x0
   316  000001                     	ds	1
   317  000002                     ?_printf:
   318                           	opt stack 0
   319  000002                     printf@f:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x1
   323  000002                     	ds	1
   324  000003                     ??_adc_read_sensor:
   325                           
   326                           ; 0 bytes @ 0x2
   327  000003                     	ds	1
   328  000004                     ___ftpack@exp:
   329                           	opt stack 0
   330  000004                     printf@ap:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x3
   334  000004                     	ds	1
   335  000005                     ??___fttol:
   336  000005                     ___ftpack@sign:
   337                           	opt stack 0
   338  000005                     adc_read_sensor@result:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x4
   342  000005                     	ds	1
   343  000006                     ??___ftpack:
   344  000006                     printf@c:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x5
   348  000006                     	ds	3
   349  000009                     ?___lwtoft:
   350                           	opt stack 0
   351  000009                     ___lwtoft@c:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x8
   355  000009                     	ds	1
   356  00000A                     ___fttol@sign1:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x9
   360  00000A                     	ds	1
   361  00000B                     ___fttol@lval:
   362                           	opt stack 0
   363                           
   364                           ; 4 bytes @ 0xA
   365  00000B                     	ds	1
   366  00000C                     ?___ftmul:
   367                           	opt stack 0
   368  00000C                     ___ftmul@f1:
   369                           	opt stack 0
   370                           
   371                           ; 3 bytes @ 0xB
   372  00000C                     	ds	3
   373  00000F                     ___fttol@exp1:
   374                           	opt stack 0
   375  00000F                     ___ftmul@f2:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0xE
   379  00000F                     	ds	3
   380  000012                     ??___ftmul:
   381                           
   382                           ; 0 bytes @ 0x11
   383  000012                     	ds	3
   384  000015                     ___ftmul@exp:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x14
   388  000015                     	ds	1
   389  000016                     ___ftmul@f3_as_product:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0x15
   393  000016                     	ds	3
   394  000019                     ___ftmul@cntr:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x18
   398  000019                     	ds	1
   399  00001A                     ___ftmul@sign:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x19
   403  00001A                     	ds	1
   404  00001B                     ?___ftdiv:
   405                           	opt stack 0
   406  00001B                     ___ftdiv@f1:
   407                           	opt stack 0
   408                           
   409                           ; 3 bytes @ 0x1A
   410  00001B                     	ds	3
   411  00001E                     ___ftdiv@f2:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x1D
   415  00001E                     	ds	3
   416  000021                     ??___ftdiv:
   417                           
   418                           ; 0 bytes @ 0x20
   419  000021                     	ds	3
   420  000024                     ___ftdiv@cntr:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x23
   424  000024                     	ds	1
   425  000025                     ___ftdiv@f3:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x24
   429  000025                     	ds	3
   430  000028                     ___ftdiv@exp:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x27
   434  000028                     	ds	1
   435  000029                     ___ftdiv@sign:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x28
   439  000029                     	ds	1
   440  00002A                     main@voltage:
   441                           	opt stack 0
   442                           
   443                           ; 3 bytes @ 0x29
   444  00002A                     	ds	3
   445  00002D                     main@temp:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x2C
   449  00002D                     	ds	3
   450  000030                     main@ADR:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x2F
   454  000030                     	ds	2
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           postinc0	equ	0xFEE
   458                           wreg	equ	0xFE8
   459                           
   460 ;;
   461 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   462 ;;
   463 ;; *************** function _main *****************
   464 ;; Defined at:
   465 ;;		line 90 in file "main.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  temp            3   44[COMRAM] float 
   470 ;;  voltage         3   41[COMRAM] float 
   471 ;;  ADR             2   47[COMRAM] unsigned int 
   472 ;; Return value:  Size  Location     Type
   473 ;;		None               void
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   481 ;;      Params:         0       0       0       0
   482 ;;      Locals:         8       0       0       0
   483 ;;      Temps:          0       0       0       0
   484 ;;      Totals:         8       0       0       0
   485 ;;Total ram usage:        8 bytes
   486 ;; Hardware stack levels required when called:    2
   487 ;; This function calls:
   488 ;;		_ECAN_Transmit
   489 ;;		_InitDevice
   490 ;;		___ftdiv
   491 ;;		___ftmul
   492 ;;		___fttol
   493 ;;		___lwtoft
   494 ;;		_adc_read_sensor
   495 ;;		_printf
   496 ;;		_putch
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text0
   503  0005F0                     __ptext0:
   504                           	opt stack 0
   505  0005F0                     _main:
   506                           	opt stack 29
   507                           
   508                           ;main.c: 92: InitDevice();
   509                           
   510                           ; BSR set to: 15
   511                           ;incstack = 0
   512  0005F0  EC39  F004         	call	_InitDevice	;wreg free
   513                           
   514                           ;main.c: 93: LATAbits.LATA0 = 1;
   515  0005F4  8089               	bsf	3977,0,c	;volatile
   516                           
   517                           ;main.c: 95: printf( "\x1b[2J");
   518  0005F6  0E1B               	movlw	low STR_1
   519  0005F8  6E02               	movwf	printf@f,c
   520  0005FA  0E03               	movlw	high STR_1
   521  0005FC  6E03               	movwf	printf@f+1,c
   522  0005FE  EC61  F004         	call	_printf	;wreg free
   523                           
   524                           ;main.c: 96: {putch(0x0a); putch(0x0d);};
   525  000602  0E0A               	movlw	10
   526  000604  ECB9  F004         	call	_putch
   527  000608  0E0D               	movlw	13
   528  00060A  ECB9  F004         	call	_putch
   529                           
   530                           ;main.c: 97: printf("Hello from Cornell Cup!\n\r");
   531  00060E  0E01               	movlw	low STR_2
   532  000610  6E02               	movwf	printf@f,c
   533  000612  0E03               	movlw	high STR_2
   534  000614  6E03               	movwf	printf@f+1,c
   535  000616  EC61  F004         	call	_printf	;wreg free
   536  00061A                     l270:
   537                           
   538                           ;main.c: 100: {
   539                           ;main.c: 101: unsigned int ADR;
   540                           ;main.c: 102: float voltage;
   541                           ;main.c: 103: float temp;
   542                           ;main.c: 106: ADR = adc_read_sensor();
   543  00061A  EC76  F004         	call	_adc_read_sensor	;wreg free
   544  00061E  C001  F030         	movff	?_adc_read_sensor,main@ADR
   545  000622  C002  F031         	movff	?_adc_read_sensor+1,main@ADR+1
   546                           
   547                           ;main.c: 110: voltage = (float)ADR*5.0/1024.0;
   548  000626  0E00               	movlw	0
   549  000628  6E0F               	movwf	___ftmul@f2,c
   550  00062A  0EA0               	movlw	160
   551  00062C  6E10               	movwf	___ftmul@f2+1,c
   552  00062E  0E40               	movlw	64
   553  000630  6E11               	movwf	___ftmul@f2+2,c
   554  000632  C030  F009         	movff	main@ADR,___lwtoft@c
   555  000636  C031  F00A         	movff	main@ADR+1,___lwtoft@c+1
   556  00063A  EC89  F004         	call	___lwtoft	;wreg free
   557  00063E  C009  F00C         	movff	?___lwtoft,___ftmul@f1
   558  000642  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
   559  000646  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
   560  00064A  EC0B  F002         	call	___ftmul	;wreg free
   561  00064E  C00C  F01B         	movff	?___ftmul,___ftdiv@f1
   562  000652  C00D  F01C         	movff	?___ftmul+1,___ftdiv@f1+1
   563  000656  C00E  F01D         	movff	?___ftmul+2,___ftdiv@f1+2
   564  00065A  0E00               	movlw	0
   565  00065C  6E1E               	movwf	___ftdiv@f2,c
   566  00065E  0E80               	movlw	128
   567  000660  6E1F               	movwf	___ftdiv@f2+1,c
   568  000662  0E44               	movlw	68
   569  000664  6E20               	movwf	___ftdiv@f2+2,c
   570  000666  EC85  F002         	call	___ftdiv	;wreg free
   571  00066A  C01B  F02A         	movff	?___ftdiv,main@voltage
   572  00066E  C01C  F02B         	movff	?___ftdiv+1,main@voltage+1
   573  000672  C01D  F02C         	movff	?___ftdiv+2,main@voltage+2
   574                           
   575                           ;main.c: 111: temp = voltage / 0.01;
   576  000676  C02A  F01B         	movff	main@voltage,___ftdiv@f1
   577  00067A  C02B  F01C         	movff	main@voltage+1,___ftdiv@f1+1
   578  00067E  C02C  F01D         	movff	main@voltage+2,___ftdiv@f1+2
   579  000682  0ED7               	movlw	215
   580  000684  6E1E               	movwf	___ftdiv@f2,c
   581  000686  0E23               	movlw	35
   582  000688  6E1F               	movwf	___ftdiv@f2+1,c
   583  00068A  0E3C               	movlw	60
   584  00068C  6E20               	movwf	___ftdiv@f2+2,c
   585  00068E  EC85  F002         	call	___ftdiv	;wreg free
   586  000692  C01B  F02D         	movff	?___ftdiv,main@temp
   587  000696  C01C  F02E         	movff	?___ftdiv+1,main@temp+1
   588  00069A  C01D  F02F         	movff	?___ftdiv+2,main@temp+2
   589                           
   590                           ;main.c: 112: temperature = temp;
   591  00069E  C02D  F001         	movff	main@temp,___fttol@f1
   592  0006A2  C02E  F002         	movff	main@temp+1,___fttol@f1+1
   593  0006A6  C02F  F003         	movff	main@temp+2,___fttol@f1+2
   594  0006AA  EC91  F001         	call	___fttol	;wreg free
   595  0006AE  5001               	movf	?___fttol,w,c
   596  0006B0  6E54               	movwf	_temperature,c
   597                           
   598                           ;main.c: 115: ECAN_Transmit();
   599  0006B2  EC0B  F004         	call	_ECAN_Transmit	;wreg free
   600  0006B6  D7B1               	goto	l270
   601  0006B8                     __end_of_main:
   602                           	opt stack 0
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           
   608 ;; *************** function _printf *****************
   609 ;; Defined at:
   610 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  f               2    1[COMRAM] PTR const unsigned char 
   613 ;;		 -> STR_2(26), STR_1(5), 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  tmpval          4    0        struct .
   616 ;;  cp              3    0        PTR const unsigned char 
   617 ;;  ap              2    3[COMRAM] PTR void [1]
   618 ;;		 -> ?_printf(2), 
   619 ;;  len             2    0        unsigned int 
   620 ;;  val             2    0        unsigned int 
   621 ;;  c               1    5[COMRAM] char 
   622 ;;  flag            1    0        unsigned char 
   623 ;;  prec            1    0        char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  2    1[COMRAM] int 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   633 ;;      Params:         2       0       0       0
   634 ;;      Locals:         3       0       0       0
   635 ;;      Temps:          0       0       0       0
   636 ;;      Totals:         5       0       0       0
   637 ;;Total ram usage:        5 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		_putch
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text1
   648  0008C2                     __ptext1:
   649                           	opt stack 0
   650  0008C2                     _printf:
   651                           	opt stack 29
   652                           
   653                           ;doprnt.c: 466: va_list ap;
   654                           ;doprnt.c: 499: signed char c;
   655                           ;doprnt.c: 506: signed char prec;
   656                           ;doprnt.c: 508: unsigned char flag;
   657                           ;doprnt.c: 523: union {
   658                           ;doprnt.c: 524: unsigned long vd;
   659                           ;doprnt.c: 525: double integ;
   660                           ;doprnt.c: 526: } tmpval;
   661                           ;doprnt.c: 528: unsigned int val;
   662                           ;doprnt.c: 529: unsigned len;
   663                           ;doprnt.c: 530: const char * cp;
   664                           ;doprnt.c: 533: *ap = __va_start();
   665                           
   666                           ;incstack = 0
   667  0008C2  0E04               	movlw	low (?_printf+2)
   668  0008C4  6E04               	movwf	printf@ap,c
   669  0008C6  0E00               	movlw	high (?_printf+2)
   670  0008C8  6E05               	movwf	printf@ap+1,c
   671                           
   672                           ;doprnt.c: 536: while(c = *f++) {
   673  0008CA  D003               	goto	l1293
   674  0008CC                     l1291:
   675                           
   676                           ;doprnt.c: 540: {
   677                           ;doprnt.c: 541: (putch(c) );
   678  0008CC  5006               	movf	printf@c,w,c
   679  0008CE  ECB9  F004         	call	_putch
   680  0008D2                     l1293:
   681  0008D2  C002  FFF6         	movff	printf@f,tblptrl
   682  0008D6  C003  FFF7         	movff	printf@f+1,tblptrh
   683  0008DA  4A02               	infsnz	printf@f,f,c
   684  0008DC  2A03               	incf	printf@f+1,f,c
   685  0008DE                     	if	0	;tblptru may be non-zero
   686  0008DE                     	endif
   687  0008DE                     	if	0	;tblptru may be non-zero
   688  0008DE                     	endif
   689  0008DE  0008               	tblrd		*
   690  0008E0  CFF5 F006          	movff	tablat,printf@c
   691  0008E4  5006               	movf	printf@c,w,c
   692  0008E6  B4D8               	btfsc	status,2,c
   693  0008E8  0012               	return	
   694  0008EA  D7F0               	goto	l1291
   695  0008EC                     __end_of_printf:
   696                           	opt stack 0
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _putch *****************
   706 ;; Defined at:
   707 ;;		line 246 in file "main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  byte            1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  byte            1    0[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;		None               void
   714 ;; Registers used:
   715 ;;		wreg
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   721 ;;      Params:         0       0       0       0
   722 ;;      Locals:         1       0       0       0
   723 ;;      Temps:          0       0       0       0
   724 ;;      Totals:         1       0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;;		_printf
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text2
   736  000972                     __ptext2:
   737                           	opt stack 0
   738  000972                     _putch:
   739                           	opt stack 30
   740                           
   741                           ;incstack = 0
   742                           ;putch@byte stored from wreg
   743  000972  6E01               	movwf	putch@byte,c
   744                           
   745                           ;main.c: 247: TXREG = byte;
   746  000974  C001  FFAD         	movff	putch@byte,4013	;volatile
   747  000978                     l297:
   748  000978  B2AC               	btfsc	4012,1,c	;volatile
   749  00097A  0012               	return	
   750  00097C  D7FD               	goto	l297
   751  00097E                     __end_of_putch:
   752                           	opt stack 0
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           status	equ	0xFD8
   760                           
   761 ;; *************** function _adc_read_sensor *****************
   762 ;; Defined at:
   763 ;;		line 258 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  result          2    4[COMRAM] unsigned int 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    0[COMRAM] unsigned int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   777 ;;      Params:         2       0       0       0
   778 ;;      Locals:         2       0       0       0
   779 ;;      Temps:          2       0       0       0
   780 ;;      Totals:         6       0       0       0
   781 ;;Total ram usage:        6 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text3
   791  0008EC                     __ptext3:
   792                           	opt stack 0
   793  0008EC                     _adc_read_sensor:
   794                           	opt stack 30
   795                           
   796                           ;main.c: 259: ADCON0bits.GO = 1;
   797                           
   798                           ;incstack = 0
   799  0008EC  82C2               	bsf	4034,1,c	;volatile
   800  0008EE                     l306:
   801  0008EE  B2C2               	btfsc	4034,1,c	;volatile
   802  0008F0  D7FE               	goto	l306
   803                           
   804                           ;main.c: 261: unsigned int result = (ADRESH << 8) | ADRESL;
   805  0008F2  50C3               	movf	4035,w,c	;volatile
   806  0008F4  CFC4 F003          	movff	4036,??_adc_read_sensor	;volatile
   807  0008F8  6A04               	clrf	(??_adc_read_sensor+1)& (0+255),c
   808  0008FA  C003  F004         	movff	??_adc_read_sensor,??_adc_read_sensor+1
   809  0008FE  6A03               	clrf	??_adc_read_sensor,c
   810  000900  1003               	iorwf	??_adc_read_sensor,w,c
   811  000902  6E05               	movwf	adc_read_sensor@result,c
   812  000904  5004               	movf	??_adc_read_sensor+1,w,c
   813  000906  6E06               	movwf	adc_read_sensor@result+1,c
   814                           
   815                           ;main.c: 262: return result;
   816  000908  C005  F001         	movff	adc_read_sensor@result,?_adc_read_sensor
   817  00090C  C006  F002         	movff	adc_read_sensor@result+1,?_adc_read_sensor+1
   818  000910  0012               	return	
   819  000912                     __end_of_adc_read_sensor:
   820                           	opt stack 0
   821                           tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           postinc0	equ	0xFEE
   826                           wreg	equ	0xFE8
   827                           status	equ	0xFD8
   828                           
   829 ;; *************** function ___lwtoft *****************
   830 ;; Defined at:
   831 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  c               2    8[COMRAM] unsigned int 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  3    8[COMRAM] float 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   845 ;;      Params:         3       0       0       0
   846 ;;      Locals:         0       0       0       0
   847 ;;      Temps:          0       0       0       0
   848 ;;      Totals:         3       0       0       0
   849 ;;Total ram usage:        3 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    1
   852 ;; This function calls:
   853 ;;		___ftpack
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text4
   860  000912                     __ptext4:
   861                           	opt stack 0
   862  000912                     ___lwtoft:
   863                           	opt stack 29
   864                           
   865                           ;incstack = 0
   866  000912  C009  F001         	movff	___lwtoft@c,___ftpack@arg
   867  000916  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
   868  00091A  6A03               	clrf	___ftpack@arg+2,c
   869  00091C  0E8E               	movlw	142
   870  00091E  6E04               	movwf	___ftpack@exp,c
   871  000920  0E00               	movlw	0
   872  000922  6E05               	movwf	___ftpack@sign,c
   873  000924  ECB4  F003         	call	___ftpack	;wreg free
   874  000928  C001  F009         	movff	?___ftpack,?___lwtoft
   875  00092C  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
   876  000930  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
   877  000934  0012               	return	
   878  000936                     __end_of___lwtoft:
   879                           	opt stack 0
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function ___fttol *****************
   889 ;; Defined at:
   890 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  f1              3    0[COMRAM] float 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  lval            4   10[COMRAM] unsigned long 
   895 ;;  exp1            1   14[COMRAM] unsigned char 
   896 ;;  sign1           1    9[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  4    0[COMRAM] long 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   906 ;;      Params:         4       0       0       0
   907 ;;      Locals:         6       0       0       0
   908 ;;      Temps:          5       0       0       0
   909 ;;      Totals:        15       0       0       0
   910 ;;Total ram usage:       15 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text5
   920  000322                     __ptext5:
   921                           	opt stack 0
   922  000322                     ___fttol:
   923                           	opt stack 30
   924                           
   925                           ;incstack = 0
   926  000322  C003  F005         	movff	___fttol@f1+2,??___fttol
   927  000326  6A06               	clrf	(??___fttol+1)& (0+255),c
   928  000328  6A07               	clrf	(??___fttol+2)& (0+255),c
   929  00032A  3402               	rlcf	___fttol@f1+1,w,c
   930  00032C  3605               	rlcf	??___fttol& (0+255),f,c
   931  00032E  E301               	bnc	u601
   932  000330  8006               	bsf	(??___fttol+1)& (0+255),0,c
   933  000332                     u601:
   934  000332  5005               	movf	??___fttol,w,c
   935  000334  6E0F               	movwf	___fttol@exp1,c
   936  000336  500F               	movf	___fttol@exp1,w,c
   937  000338  A4D8               	btfss	status,2,c
   938  00033A  D009               	goto	l1403
   939  00033C  0E00               	movlw	0
   940  00033E  6E01               	movwf	?___fttol,c
   941  000340  0E00               	movlw	0
   942  000342  6E02               	movwf	?___fttol+1,c
   943  000344  0E00               	movlw	0
   944  000346  6E03               	movwf	?___fttol+2,c
   945  000348  0E00               	movlw	0
   946  00034A  6E04               	movwf	?___fttol+3,c
   947  00034C  0012               	return	
   948  00034E                     l1403:
   949  00034E  0E17               	movlw	23
   950  000350  6E05               	movwf	??___fttol& (0+255),c
   951  000352  C001  F006         	movff	___fttol@f1,??___fttol+1
   952  000356  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   953  00035A  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   954  00035E  2805               	incf	??___fttol,w,c
   955  000360  6E09               	movwf	(??___fttol+4)& (0+255),c
   956  000362  D004               	goto	u620
   957  000364                     u625:
   958  000364  90D8               	bcf	status,0,c
   959  000366  3208               	rrcf	??___fttol+3,f,c
   960  000368  3207               	rrcf	??___fttol+2,f,c
   961  00036A  3206               	rrcf	??___fttol+1,f,c
   962  00036C                     u620:
   963  00036C  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   964  00036E  D7FA               	goto	u625
   965  000370  5006               	movf	??___fttol+1,w,c
   966  000372  6E0A               	movwf	___fttol@sign1,c
   967  000374  8E02               	bsf	___fttol@f1+1,7,c
   968  000376  0EFF               	movlw	255
   969  000378  1601               	andwf	___fttol@f1,f,c
   970  00037A  0EFF               	movlw	255
   971  00037C  1602               	andwf	___fttol@f1+1,f,c
   972  00037E  0E00               	movlw	0
   973  000380  1603               	andwf	___fttol@f1+2,f,c
   974  000382  5001               	movf	___fttol@f1,w,c
   975  000384  6E0B               	movwf	___fttol@lval,c
   976  000386  5002               	movf	___fttol@f1+1,w,c
   977  000388  6E0C               	movwf	___fttol@lval+1,c
   978  00038A  5003               	movf	___fttol@f1+2,w,c
   979  00038C  6E0D               	movwf	___fttol@lval+2,c
   980  00038E  6A0E               	clrf	___fttol@lval+3,c
   981  000390  0E8E               	movlw	142
   982  000392  5E0F               	subwf	___fttol@exp1,f,c
   983  000394  AE0F               	btfss	___fttol@exp1,7,c
   984  000396  D016               	goto	l1425
   985  000398  500F               	movf	___fttol@exp1,w,c
   986  00039A  0A80               	xorlw	128
   987  00039C  0F8F               	addlw	143
   988  00039E  B0D8               	btfsc	status,0,c
   989  0003A0  D009               	goto	l1421
   990  0003A2  0E00               	movlw	0
   991  0003A4  6E01               	movwf	?___fttol,c
   992  0003A6  0E00               	movlw	0
   993  0003A8  6E02               	movwf	?___fttol+1,c
   994  0003AA  0E00               	movlw	0
   995  0003AC  6E03               	movwf	?___fttol+2,c
   996  0003AE  0E00               	movlw	0
   997  0003B0  6E04               	movwf	?___fttol+3,c
   998  0003B2  0012               	return	
   999  0003B4                     l1421:
  1000  0003B4  90D8               	bcf	status,0,c
  1001  0003B6  320E               	rrcf	___fttol@lval+3,f,c
  1002  0003B8  320D               	rrcf	___fttol@lval+2,f,c
  1003  0003BA  320C               	rrcf	___fttol@lval+1,f,c
  1004  0003BC  320B               	rrcf	___fttol@lval,f,c
  1005  0003BE  3E0F               	incfsz	___fttol@exp1,f,c
  1006  0003C0  D7F9               	goto	l1421
  1007  0003C2  D015               	goto	l1435
  1008  0003C4                     l1425:
  1009  0003C4  0E17               	movlw	23
  1010  0003C6  640F               	cpfsgt	___fttol@exp1,c
  1011  0003C8  D00F               	goto	l1433
  1012  0003CA  0E00               	movlw	0
  1013  0003CC  6E01               	movwf	?___fttol,c
  1014  0003CE  0E00               	movlw	0
  1015  0003D0  6E02               	movwf	?___fttol+1,c
  1016  0003D2  0E00               	movlw	0
  1017  0003D4  6E03               	movwf	?___fttol+2,c
  1018  0003D6  0E00               	movlw	0
  1019  0003D8  6E04               	movwf	?___fttol+3,c
  1020  0003DA  0012               	return	
  1021  0003DC                     l1431:
  1022  0003DC  90D8               	bcf	status,0,c
  1023  0003DE  360B               	rlcf	___fttol@lval,f,c
  1024  0003E0  360C               	rlcf	___fttol@lval+1,f,c
  1025  0003E2  360D               	rlcf	___fttol@lval+2,f,c
  1026  0003E4  360E               	rlcf	___fttol@lval+3,f,c
  1027  0003E6  060F               	decf	___fttol@exp1,f,c
  1028  0003E8                     l1433:
  1029  0003E8  500F               	movf	___fttol@exp1,w,c
  1030  0003EA  A4D8               	btfss	status,2,c
  1031  0003EC  D7F7               	goto	l1431
  1032  0003EE                     l1435:
  1033  0003EE  500A               	movf	___fttol@sign1,w,c
  1034  0003F0  B4D8               	btfsc	status,2,c
  1035  0003F2  D008               	goto	l1439
  1036  0003F4  1E0E               	comf	___fttol@lval+3,f,c
  1037  0003F6  1E0D               	comf	___fttol@lval+2,f,c
  1038  0003F8  1E0C               	comf	___fttol@lval+1,f,c
  1039  0003FA  6C0B               	negf	___fttol@lval,c
  1040  0003FC  0E00               	movlw	0
  1041  0003FE  220C               	addwfc	___fttol@lval+1,f,c
  1042  000400  220D               	addwfc	___fttol@lval+2,f,c
  1043  000402  220E               	addwfc	___fttol@lval+3,f,c
  1044  000404                     l1439:
  1045  000404  C00B  F001         	movff	___fttol@lval,?___fttol
  1046  000408  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1047  00040C  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1048  000410  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1049  000414  0012               	return	
  1050  000416                     __end_of___fttol:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           status	equ	0xFD8
  1059                           
  1060 ;; *************** function ___ftmul *****************
  1061 ;; Defined at:
  1062 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  f1              3   11[COMRAM] float 
  1065 ;;  f2              3   14[COMRAM] float 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  1068 ;;  sign            1   25[COMRAM] unsigned char 
  1069 ;;  cntr            1   24[COMRAM] unsigned char 
  1070 ;;  exp             1   20[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  3   11[COMRAM] float 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1080 ;;      Params:         6       0       0       0
  1081 ;;      Locals:         6       0       0       0
  1082 ;;      Temps:          3       0       0       0
  1083 ;;      Totals:        15       0       0       0
  1084 ;;Total ram usage:       15 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    1
  1087 ;; This function calls:
  1088 ;;		___ftpack
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text6
  1095  000416                     __ptext6:
  1096                           	opt stack 0
  1097  000416                     ___ftmul:
  1098                           	opt stack 29
  1099                           
  1100                           ;incstack = 0
  1101  000416  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  1102  00041A  6A13               	clrf	(??___ftmul+1)& (0+255),c
  1103  00041C  6A14               	clrf	(??___ftmul+2)& (0+255),c
  1104  00041E  340D               	rlcf	___ftmul@f1+1,w,c
  1105  000420  3612               	rlcf	??___ftmul& (0+255),f,c
  1106  000422  E301               	bnc	u541
  1107  000424  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  1108  000426                     u541:
  1109  000426  5012               	movf	??___ftmul,w,c
  1110  000428  6E15               	movwf	___ftmul@exp,c
  1111  00042A  5015               	movf	___ftmul@exp,w,c
  1112  00042C  A4D8               	btfss	status,2,c
  1113  00042E  D007               	goto	l1355
  1114  000430  0E00               	movlw	0
  1115  000432  6E0C               	movwf	?___ftmul,c
  1116  000434  0E00               	movlw	0
  1117  000436  6E0D               	movwf	?___ftmul+1,c
  1118  000438  0E00               	movlw	0
  1119  00043A  6E0E               	movwf	?___ftmul+2,c
  1120  00043C  0012               	return	
  1121  00043E                     l1355:
  1122  00043E  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  1123  000442  6A13               	clrf	(??___ftmul+1)& (0+255),c
  1124  000444  6A14               	clrf	(??___ftmul+2)& (0+255),c
  1125  000446  3410               	rlcf	___ftmul@f2+1,w,c
  1126  000448  3612               	rlcf	??___ftmul& (0+255),f,c
  1127  00044A  E301               	bnc	u561
  1128  00044C  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  1129  00044E                     u561:
  1130  00044E  5012               	movf	??___ftmul,w,c
  1131  000450  6E1A               	movwf	___ftmul@sign,c
  1132  000452  501A               	movf	___ftmul@sign,w,c
  1133  000454  A4D8               	btfss	status,2,c
  1134  000456  D007               	goto	l1361
  1135  000458  0E00               	movlw	0
  1136  00045A  6E0C               	movwf	?___ftmul,c
  1137  00045C  0E00               	movlw	0
  1138  00045E  6E0D               	movwf	?___ftmul+1,c
  1139  000460  0E00               	movlw	0
  1140  000462  6E0E               	movwf	?___ftmul+2,c
  1141  000464  0012               	return	
  1142  000466                     l1361:
  1143  000466  501A               	movf	___ftmul@sign,w,c
  1144  000468  0F7B               	addlw	123
  1145  00046A  2615               	addwf	___ftmul@exp,f,c
  1146  00046C  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  1147  000470  5011               	movf	___ftmul@f2+2,w,c
  1148  000472  1A1A               	xorwf	___ftmul@sign,f,c
  1149  000474  0E80               	movlw	128
  1150  000476  161A               	andwf	___ftmul@sign,f,c
  1151  000478  8E0D               	bsf	___ftmul@f1+1,7,c
  1152  00047A  8E10               	bsf	___ftmul@f2+1,7,c
  1153  00047C  0EFF               	movlw	255
  1154  00047E  160F               	andwf	___ftmul@f2,f,c
  1155  000480  0EFF               	movlw	255
  1156  000482  1610               	andwf	___ftmul@f2+1,f,c
  1157  000484  0E00               	movlw	0
  1158  000486  1611               	andwf	___ftmul@f2+2,f,c
  1159  000488  0E00               	movlw	0
  1160  00048A  6E16               	movwf	___ftmul@f3_as_product,c
  1161  00048C  0E00               	movlw	0
  1162  00048E  6E17               	movwf	___ftmul@f3_as_product+1,c
  1163  000490  0E00               	movlw	0
  1164  000492  6E18               	movwf	___ftmul@f3_as_product+2,c
  1165  000494  0E07               	movlw	7
  1166  000496  6E19               	movwf	___ftmul@cntr,c
  1167  000498                     l1375:
  1168  000498  A00C               	btfss	___ftmul@f1,0,c
  1169  00049A  D006               	goto	l1379
  1170  00049C  500F               	movf	___ftmul@f2,w,c
  1171  00049E  2616               	addwf	___ftmul@f3_as_product,f,c
  1172  0004A0  5010               	movf	___ftmul@f2+1,w,c
  1173  0004A2  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  1174  0004A4  5011               	movf	___ftmul@f2+2,w,c
  1175  0004A6  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  1176  0004A8                     l1379:
  1177  0004A8  90D8               	bcf	status,0,c
  1178  0004AA  320E               	rrcf	___ftmul@f1+2,f,c
  1179  0004AC  320D               	rrcf	___ftmul@f1+1,f,c
  1180  0004AE  320C               	rrcf	___ftmul@f1,f,c
  1181  0004B0  90D8               	bcf	status,0,c
  1182  0004B2  360F               	rlcf	___ftmul@f2,f,c
  1183  0004B4  3610               	rlcf	___ftmul@f2+1,f,c
  1184  0004B6  3611               	rlcf	___ftmul@f2+2,f,c
  1185  0004B8  2E19               	decfsz	___ftmul@cntr,f,c
  1186  0004BA  D7EE               	goto	l1375
  1187  0004BC  0E09               	movlw	9
  1188  0004BE  6E19               	movwf	___ftmul@cntr,c
  1189  0004C0                     l1385:
  1190  0004C0  A00C               	btfss	___ftmul@f1,0,c
  1191  0004C2  D006               	goto	l1389
  1192  0004C4  500F               	movf	___ftmul@f2,w,c
  1193  0004C6  2616               	addwf	___ftmul@f3_as_product,f,c
  1194  0004C8  5010               	movf	___ftmul@f2+1,w,c
  1195  0004CA  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  1196  0004CC  5011               	movf	___ftmul@f2+2,w,c
  1197  0004CE  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  1198  0004D0                     l1389:
  1199  0004D0  90D8               	bcf	status,0,c
  1200  0004D2  320E               	rrcf	___ftmul@f1+2,f,c
  1201  0004D4  320D               	rrcf	___ftmul@f1+1,f,c
  1202  0004D6  320C               	rrcf	___ftmul@f1,f,c
  1203  0004D8  90D8               	bcf	status,0,c
  1204  0004DA  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  1205  0004DC  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  1206  0004DE  3216               	rrcf	___ftmul@f3_as_product,f,c
  1207  0004E0  2E19               	decfsz	___ftmul@cntr,f,c
  1208  0004E2  D7EE               	goto	l1385
  1209  0004E4  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1210  0004E8  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1211  0004EC  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1212  0004F0  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  1213  0004F4  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  1214  0004F8  ECB4  F003         	call	___ftpack	;wreg free
  1215  0004FC  C001  F00C         	movff	?___ftpack,?___ftmul
  1216  000500  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  1217  000504  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  1218  000508  0012               	return	
  1219  00050A                     __end_of___ftmul:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function ___ftdiv *****************
  1230 ;; Defined at:
  1231 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  f1              3   26[COMRAM] float 
  1234 ;;  f2              3   29[COMRAM] float 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  f3              3   36[COMRAM] float 
  1237 ;;  sign            1   40[COMRAM] unsigned char 
  1238 ;;  exp             1   39[COMRAM] unsigned char 
  1239 ;;  cntr            1   35[COMRAM] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  3   26[COMRAM] float 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1249 ;;      Params:         6       0       0       0
  1250 ;;      Locals:         6       0       0       0
  1251 ;;      Temps:          3       0       0       0
  1252 ;;      Totals:        15       0       0       0
  1253 ;;Total ram usage:       15 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		___ftpack
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text7
  1264  00050A                     __ptext7:
  1265                           	opt stack 0
  1266  00050A                     ___ftdiv:
  1267                           	opt stack 29
  1268                           
  1269                           ;incstack = 0
  1270  00050A  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
  1271  00050E  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  1272  000510  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  1273  000512  341C               	rlcf	___ftdiv@f1+1,w,c
  1274  000514  3621               	rlcf	??___ftdiv& (0+255),f,c
  1275  000516  E301               	bnc	u491
  1276  000518  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  1277  00051A                     u491:
  1278  00051A  5021               	movf	??___ftdiv,w,c
  1279  00051C  6E28               	movwf	___ftdiv@exp,c
  1280  00051E  5028               	movf	___ftdiv@exp,w,c
  1281  000520  A4D8               	btfss	status,2,c
  1282  000522  D007               	goto	l1309
  1283  000524  0E00               	movlw	0
  1284  000526  6E1B               	movwf	?___ftdiv,c
  1285  000528  0E00               	movlw	0
  1286  00052A  6E1C               	movwf	?___ftdiv+1,c
  1287  00052C  0E00               	movlw	0
  1288  00052E  6E1D               	movwf	?___ftdiv+2,c
  1289  000530  0012               	return	
  1290  000532                     l1309:
  1291  000532  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
  1292  000536  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  1293  000538  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  1294  00053A  341F               	rlcf	___ftdiv@f2+1,w,c
  1295  00053C  3621               	rlcf	??___ftdiv& (0+255),f,c
  1296  00053E  E301               	bnc	u511
  1297  000540  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  1298  000542                     u511:
  1299  000542  5021               	movf	??___ftdiv,w,c
  1300  000544  6E29               	movwf	___ftdiv@sign,c
  1301  000546  5029               	movf	___ftdiv@sign,w,c
  1302  000548  A4D8               	btfss	status,2,c
  1303  00054A  D007               	goto	l1315
  1304  00054C  0E00               	movlw	0
  1305  00054E  6E1B               	movwf	?___ftdiv,c
  1306  000550  0E00               	movlw	0
  1307  000552  6E1C               	movwf	?___ftdiv+1,c
  1308  000554  0E00               	movlw	0
  1309  000556  6E1D               	movwf	?___ftdiv+2,c
  1310  000558  0012               	return	
  1311  00055A                     l1315:
  1312  00055A  0E00               	movlw	0
  1313  00055C  6E25               	movwf	___ftdiv@f3,c
  1314  00055E  0E00               	movlw	0
  1315  000560  6E26               	movwf	___ftdiv@f3+1,c
  1316  000562  0E00               	movlw	0
  1317  000564  6E27               	movwf	___ftdiv@f3+2,c
  1318  000566  5029               	movf	___ftdiv@sign,w,c
  1319  000568  0F89               	addlw	137
  1320  00056A  5E28               	subwf	___ftdiv@exp,f,c
  1321  00056C  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
  1322  000570  5020               	movf	___ftdiv@f2+2,w,c
  1323  000572  1A29               	xorwf	___ftdiv@sign,f,c
  1324  000574  0E80               	movlw	128
  1325  000576  1629               	andwf	___ftdiv@sign,f,c
  1326  000578  8E1C               	bsf	___ftdiv@f1+1,7,c
  1327  00057A  0EFF               	movlw	255
  1328  00057C  161B               	andwf	___ftdiv@f1,f,c
  1329  00057E  0EFF               	movlw	255
  1330  000580  161C               	andwf	___ftdiv@f1+1,f,c
  1331  000582  0E00               	movlw	0
  1332  000584  161D               	andwf	___ftdiv@f1+2,f,c
  1333  000586  8E1F               	bsf	___ftdiv@f2+1,7,c
  1334  000588  0EFF               	movlw	255
  1335  00058A  161E               	andwf	___ftdiv@f2,f,c
  1336  00058C  0EFF               	movlw	255
  1337  00058E  161F               	andwf	___ftdiv@f2+1,f,c
  1338  000590  0E00               	movlw	0
  1339  000592  1620               	andwf	___ftdiv@f2+2,f,c
  1340  000594  0E18               	movlw	24
  1341  000596  6E24               	movwf	___ftdiv@cntr,c
  1342  000598                     l1335:
  1343  000598  90D8               	bcf	status,0,c
  1344  00059A  3625               	rlcf	___ftdiv@f3,f,c
  1345  00059C  3626               	rlcf	___ftdiv@f3+1,f,c
  1346  00059E  3627               	rlcf	___ftdiv@f3+2,f,c
  1347  0005A0  501E               	movf	___ftdiv@f2,w,c
  1348  0005A2  5C1B               	subwf	___ftdiv@f1,w,c
  1349  0005A4  501F               	movf	___ftdiv@f2+1,w,c
  1350  0005A6  581C               	subwfb	___ftdiv@f1+1,w,c
  1351  0005A8  5020               	movf	___ftdiv@f2+2,w,c
  1352  0005AA  581D               	subwfb	___ftdiv@f1+2,w,c
  1353  0005AC  A0D8               	btfss	status,0,c
  1354  0005AE  D007               	goto	l602
  1355  0005B0  501E               	movf	___ftdiv@f2,w,c
  1356  0005B2  5E1B               	subwf	___ftdiv@f1,f,c
  1357  0005B4  501F               	movf	___ftdiv@f2+1,w,c
  1358  0005B6  5A1C               	subwfb	___ftdiv@f1+1,f,c
  1359  0005B8  5020               	movf	___ftdiv@f2+2,w,c
  1360  0005BA  5A1D               	subwfb	___ftdiv@f1+2,f,c
  1361  0005BC  8025               	bsf	___ftdiv@f3,0,c
  1362  0005BE                     l602:
  1363  0005BE  90D8               	bcf	status,0,c
  1364  0005C0  361B               	rlcf	___ftdiv@f1,f,c
  1365  0005C2  361C               	rlcf	___ftdiv@f1+1,f,c
  1366  0005C4  361D               	rlcf	___ftdiv@f1+2,f,c
  1367  0005C6  2E24               	decfsz	___ftdiv@cntr,f,c
  1368  0005C8  D7E7               	goto	l1335
  1369  0005CA  C025  F001         	movff	___ftdiv@f3,___ftpack@arg
  1370  0005CE  C026  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1371  0005D2  C027  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1372  0005D6  C028  F004         	movff	___ftdiv@exp,___ftpack@exp
  1373  0005DA  C029  F005         	movff	___ftdiv@sign,___ftpack@sign
  1374  0005DE  ECB4  F003         	call	___ftpack	;wreg free
  1375  0005E2  C001  F01B         	movff	?___ftpack,?___ftdiv
  1376  0005E6  C002  F01C         	movff	?___ftpack+1,?___ftdiv+1
  1377  0005EA  C003  F01D         	movff	?___ftpack+2,?___ftdiv+2
  1378  0005EE  0012               	return	
  1379  0005F0                     __end_of___ftdiv:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           status	equ	0xFD8
  1388                           
  1389 ;; *************** function ___ftpack *****************
  1390 ;; Defined at:
  1391 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  arg             3    0[COMRAM] unsigned um
  1394 ;;  exp             1    3[COMRAM] unsigned char 
  1395 ;;  sign            1    4[COMRAM] unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  3    0[COMRAM] float 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1407 ;;      Params:         5       0       0       0
  1408 ;;      Locals:         0       0       0       0
  1409 ;;      Temps:          3       0       0       0
  1410 ;;      Totals:         8       0       0       0
  1411 ;;Total ram usage:        8 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		___ftdiv
  1417 ;;		___ftmul
  1418 ;;		___lwtoft
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text8
  1423  000768                     __ptext8:
  1424                           	opt stack 0
  1425  000768                     ___ftpack:
  1426                           	opt stack 29
  1427                           
  1428                           ;incstack = 0
  1429  000768  5004               	movf	___ftpack@exp,w,c
  1430  00076A  B4D8               	btfsc	status,2,c
  1431  00076C  D005               	goto	l1257
  1432  00076E  5001               	movf	___ftpack@arg,w,c
  1433  000770  1002               	iorwf	___ftpack@arg+1,w,c
  1434  000772  1003               	iorwf	___ftpack@arg+2,w,c
  1435  000774  A4D8               	btfss	status,2,c
  1436  000776  D00C               	goto	l1263
  1437  000778                     l1257:
  1438  000778  0E00               	movlw	0
  1439  00077A  6E01               	movwf	?___ftpack,c
  1440  00077C  0E00               	movlw	0
  1441  00077E  6E02               	movwf	?___ftpack+1,c
  1442  000780  0E00               	movlw	0
  1443  000782  6E03               	movwf	?___ftpack+2,c
  1444  000784  0012               	return	
  1445  000786                     l1261:
  1446  000786  2A04               	incf	___ftpack@exp,f,c
  1447  000788  90D8               	bcf	status,0,c
  1448  00078A  3203               	rrcf	___ftpack@arg+2,f,c
  1449  00078C  3202               	rrcf	___ftpack@arg+1,f,c
  1450  00078E  3201               	rrcf	___ftpack@arg,f,c
  1451  000790                     l1263:
  1452  000790  0E00               	movlw	0
  1453  000792  1401               	andwf	___ftpack@arg,w,c
  1454  000794  6E06               	movwf	??___ftpack& (0+255),c
  1455  000796  0E00               	movlw	0
  1456  000798  1402               	andwf	___ftpack@arg+1,w,c
  1457  00079A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1458  00079C  0EFE               	movlw	254
  1459  00079E  1403               	andwf	___ftpack@arg+2,w,c
  1460  0007A0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1461  0007A2  5006               	movf	??___ftpack,w,c
  1462  0007A4  1007               	iorwf	??___ftpack+1,w,c
  1463  0007A6  1008               	iorwf	??___ftpack+2,w,c
  1464  0007A8  B4D8               	btfsc	status,2,c
  1465  0007AA  D00C               	goto	l1269
  1466  0007AC  D7EC               	goto	l1261
  1467  0007AE                     l1265:
  1468  0007AE  2A04               	incf	___ftpack@exp,f,c
  1469  0007B0  0E01               	movlw	1
  1470  0007B2  2601               	addwf	___ftpack@arg,f,c
  1471  0007B4  0E00               	movlw	0
  1472  0007B6  2202               	addwfc	___ftpack@arg+1,f,c
  1473  0007B8  0E00               	movlw	0
  1474  0007BA  2203               	addwfc	___ftpack@arg+2,f,c
  1475  0007BC  90D8               	bcf	status,0,c
  1476  0007BE  3203               	rrcf	___ftpack@arg+2,f,c
  1477  0007C0  3202               	rrcf	___ftpack@arg+1,f,c
  1478  0007C2  3201               	rrcf	___ftpack@arg,f,c
  1479  0007C4                     l1269:
  1480  0007C4  0E00               	movlw	0
  1481  0007C6  1401               	andwf	___ftpack@arg,w,c
  1482  0007C8  6E06               	movwf	??___ftpack& (0+255),c
  1483  0007CA  0E00               	movlw	0
  1484  0007CC  1402               	andwf	___ftpack@arg+1,w,c
  1485  0007CE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1486  0007D0  0EFF               	movlw	255
  1487  0007D2  1403               	andwf	___ftpack@arg+2,w,c
  1488  0007D4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1489  0007D6  5006               	movf	??___ftpack,w,c
  1490  0007D8  1007               	iorwf	??___ftpack+1,w,c
  1491  0007DA  1008               	iorwf	??___ftpack+2,w,c
  1492  0007DC  B4D8               	btfsc	status,2,c
  1493  0007DE  D006               	goto	l1273
  1494  0007E0  D7E6               	goto	l1265
  1495  0007E2                     l1271:
  1496  0007E2  0604               	decf	___ftpack@exp,f,c
  1497  0007E4  90D8               	bcf	status,0,c
  1498  0007E6  3601               	rlcf	___ftpack@arg,f,c
  1499  0007E8  3602               	rlcf	___ftpack@arg+1,f,c
  1500  0007EA  3603               	rlcf	___ftpack@arg+2,f,c
  1501  0007EC                     l1273:
  1502  0007EC  BE02               	btfsc	___ftpack@arg+1,7,c
  1503  0007EE  D003               	goto	l544
  1504  0007F0  0E02               	movlw	2
  1505  0007F2  6004               	cpfslt	___ftpack@exp,c
  1506  0007F4  D7F6               	goto	l1271
  1507  0007F6                     l544:
  1508  0007F6  A004               	btfss	___ftpack@exp,0,c
  1509  0007F8  9E02               	bcf	___ftpack@arg+1,7,c
  1510  0007FA  90D8               	bcf	status,0,c
  1511  0007FC  3204               	rrcf	___ftpack@exp,f,c
  1512  0007FE  5004               	movf	___ftpack@exp,w,c
  1513  000800  1203               	iorwf	___ftpack@arg+2,f,c
  1514  000802  5005               	movf	___ftpack@sign,w,c
  1515  000804  A4D8               	btfss	status,2,c
  1516  000806  8E03               	bsf	___ftpack@arg+2,7,c
  1517  000808  C001  F001         	movff	___ftpack@arg,?___ftpack
  1518  00080C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1519  000810  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1520  000814  0012               	return	
  1521  000816                     __end_of___ftpack:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _InitDevice *****************
  1532 ;; Defined at:
  1533 ;;		line 126 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;		None               void
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1547 ;;      Params:         0       0       0       0
  1548 ;;      Locals:         0       0       0       0
  1549 ;;      Temps:          0       0       0       0
  1550 ;;      Totals:         0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		_InitECAN
  1556 ;;		_InitUART
  1557 ;;		_adc_init
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text9
  1564  000872                     __ptext9:
  1565                           	opt stack 0
  1566  000872                     _InitDevice:
  1567                           	opt stack 29
  1568                           
  1569                           ;main.c: 129: OSCCONbits.IRCF = 7;
  1570                           
  1571                           ;incstack = 0
  1572  000872  88D3               	bsf	4051,4,c	;volatile
  1573  000874  8AD3               	bsf	4051,5,c	;volatile
  1574  000876  8CD3               	bsf	4051,6,c	;volatile
  1575                           
  1576                           ;main.c: 130: OSCTUNEbits.PLLEN = 0;
  1577  000878  9C9B               	bcf	3995,6,c	;volatile
  1578                           
  1579                           ;main.c: 132: ADCON1bits.PCFG = 0xF;
  1580  00087A  80C1               	bsf	4033,0,c	;volatile
  1581  00087C  82C1               	bsf	4033,1,c	;volatile
  1582  00087E  84C1               	bsf	4033,2,c	;volatile
  1583  000880  86C1               	bsf	4033,3,c	;volatile
  1584                           
  1585                           ;main.c: 134: TRISAbits.TRISA0 = 0;
  1586  000882  9092               	bcf	3986,0,c	;volatile
  1587                           
  1588                           ;main.c: 136: TRISBbits.TRISB2 = 0;
  1589  000884  9493               	bcf	3987,2,c	;volatile
  1590                           
  1591                           ;main.c: 137: TRISBbits.TRISB3 = 1;
  1592  000886  8693               	bsf	3987,3,c	;volatile
  1593                           
  1594                           ;main.c: 140: InitUART();
  1595  000888  ECA8  F004         	call	_InitUART	;wreg free
  1596                           
  1597                           ;main.c: 141: adc_init();
  1598  00088C  ECB2  F004         	call	_adc_init	;wreg free
  1599                           
  1600                           ;main.c: 144: TXB0CONbits.TXPRI1 = TXB0CONbits.TXPRI0 = 1;
  1601  000890  010F               	movlb	15	; () banked
  1602  000892  8140               	bsf	64,0,b	;volatile
  1603  000894  010F               	movlb	15	; () banked
  1604  000896  8340               	bsf	64,1,b	;volatile
  1605                           
  1606                           ; BSR set to: 15
  1607                           ;main.c: 145: TXB1CONbits.TXPRI1 = TXB1CONbits.TXPRI0 = 0;
  1608  000898  010F               	movlb	15	; () banked
  1609  00089A  9130               	bcf	48,0,b	;volatile
  1610  00089C  010F               	movlb	15	; () banked
  1611  00089E  9330               	bcf	48,1,b	;volatile
  1612                           
  1613                           ; BSR set to: 15
  1614                           ;main.c: 146: TXB2CONbits.TXPRI1 = TXB2CONbits.TXPRI0 = 0;
  1615  0008A0  010F               	movlb	15	; () banked
  1616  0008A2  9120               	bcf	32,0,b	;volatile
  1617  0008A4  010F               	movlb	15	; () banked
  1618  0008A6  9320               	bcf	32,1,b	;volatile
  1619                           
  1620                           ; BSR set to: 15
  1621                           ;main.c: 147: CIOCON = 0x20;
  1622  0008A8  0E20               	movlw	32
  1623  0008AA  6E73               	movwf	3955,c	;volatile
  1624                           
  1625                           ; BSR set to: 15
  1626                           ;main.c: 150: InitECAN();
  1627  0008AC  EC5C  F003         	call	_InitECAN	;wreg free
  1628                           
  1629                           ;main.c: 152: PIE3 = PIE3 | 0x05 ;
  1630  0008B0  50A3               	movf	4003,w,c	;volatile
  1631  0008B2  0905               	iorlw	5
  1632  0008B4  6EA3               	movwf	4003,c	;volatile
  1633                           
  1634                           ;main.c: 154: PIR3 = 0 ;
  1635  0008B6  0E00               	movlw	0
  1636  0008B8  6EA4               	movwf	4004,c	;volatile
  1637                           
  1638                           ;main.c: 155: IPR3 = IPR3 | 0X05;
  1639  0008BA  50A5               	movf	4005,w,c	;volatile
  1640  0008BC  0905               	iorlw	5
  1641  0008BE  6EA5               	movwf	4005,c	;volatile
  1642  0008C0  0012               	return		;funcret
  1643  0008C2                     __end_of_InitDevice:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           status	equ	0xFD8
  1652                           
  1653 ;; *************** function _adc_init *****************
  1654 ;; Defined at:
  1655 ;;		line 251 in file "main.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1669 ;;      Params:         0       0       0       0
  1670 ;;      Locals:         0       0       0       0
  1671 ;;      Temps:          0       0       0       0
  1672 ;;      Totals:         0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_InitDevice
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text10
  1683  000964                     __ptext10:
  1684                           	opt stack 0
  1685  000964                     _adc_init:
  1686                           	opt stack 29
  1687                           
  1688                           ;main.c: 252: ADCON0 = 0x001;
  1689                           
  1690                           ;incstack = 0
  1691  000964  0E01               	movlw	1
  1692  000966  6EC2               	movwf	4034,c	;volatile
  1693                           
  1694                           ;main.c: 253: ADCON1 = 0x0E;
  1695  000968  0E0E               	movlw	14
  1696  00096A  6EC1               	movwf	4033,c	;volatile
  1697                           
  1698                           ;main.c: 254: ADCON2 = 0xB3;
  1699  00096C  0EB3               	movlw	179
  1700  00096E  6EC0               	movwf	4032,c	;volatile
  1701  000970  0012               	return		;funcret
  1702  000972                     __end_of_adc_init:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _InitUART *****************
  1713 ;; Defined at:
  1714 ;;		line 228 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, status,2
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1728 ;;      Params:         0       0       0       0
  1729 ;;      Locals:         0       0       0       0
  1730 ;;      Temps:          0       0       0       0
  1731 ;;      Totals:         0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_InitDevice
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text11
  1742  000950                     __ptext11:
  1743                           	opt stack 0
  1744  000950                     _InitUART:
  1745                           	opt stack 29
  1746                           
  1747                           ;main.c: 230: TRISCbits.TRISC6 = 0;
  1748                           
  1749                           ;incstack = 0
  1750  000950  9C94               	bcf	3988,6,c	;volatile
  1751                           
  1752                           ;main.c: 232: BAUDCONbits.BRG16 = 0;
  1753  000952  96B8               	bcf	4024,3,c	;volatile
  1754                           
  1755                           ;main.c: 234: SPBRG = 12;
  1756  000954  0E0C               	movlw	12
  1757  000956  6EAF               	movwf	4015,c	;volatile
  1758                           
  1759                           ;main.c: 237: TXSTAbits.TX9 = 0;
  1760  000958  9CAC               	bcf	4012,6,c	;volatile
  1761                           
  1762                           ;main.c: 238: TXSTAbits.TXEN = 1;
  1763  00095A  8AAC               	bsf	4012,5,c	;volatile
  1764                           
  1765                           ;main.c: 239: TXSTAbits.SYNC = 0;
  1766  00095C  98AC               	bcf	4012,4,c	;volatile
  1767                           
  1768                           ;main.c: 240: TXSTAbits.BRGH = 0;
  1769  00095E  94AC               	bcf	4012,2,c	;volatile
  1770                           
  1771                           ;main.c: 242: RCSTAbits.SPEN = 1;
  1772  000960  8EAB               	bsf	4011,7,c	;volatile
  1773  000962  0012               	return		;funcret
  1774  000964                     __end_of_InitUART:
  1775                           	opt stack 0
  1776                           tblptru	equ	0xFF8
  1777                           tblptrh	equ	0xFF7
  1778                           tblptrl	equ	0xFF6
  1779                           tablat	equ	0xFF5
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _InitECAN *****************
  1785 ;; Defined at:
  1786 ;;		line 60 in file "ECAN_P18.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;		None               void
  1793 ;; Registers used:
  1794 ;;		wreg, status,2
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1800 ;;      Params:         0       0       0       0
  1801 ;;      Locals:         0       0       0       0
  1802 ;;      Temps:          0       0       0       0
  1803 ;;      Totals:         0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_InitDevice
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text12
  1814  0006B8                     __ptext12:
  1815                           	opt stack 0
  1816  0006B8                     _InitECAN:
  1817                           	opt stack 29
  1818                           
  1819                           ;ECAN_P18.c: 65: CANCON = 0x80;
  1820                           
  1821                           ;incstack = 0
  1822  0006B8  0E80               	movlw	128
  1823  0006BA  6E6F               	movwf	3951,c	;volatile
  1824  0006BC                     l97:
  1825  0006BC  B06E               	btfsc	3950,0,c	;volatile
  1826  0006BE  D7FE               	goto	l97
  1827                           
  1828                           ;ECAN_P18.c: 73: ECANCON = 0x00;
  1829  0006C0  0E00               	movlw	0
  1830  0006C2  6E77               	movwf	3959,c	;volatile
  1831                           
  1832                           ;ECAN_P18.c: 79: CIOCONbits.ENDRHI = 1;
  1833  0006C4  8A73               	bsf	3955,5,c	;volatile
  1834                           
  1835                           ;ECAN_P18.c: 82: CIOCONbits.CANCAP = 0;
  1836  0006C6  9873               	bcf	3955,4,c	;volatile
  1837                           
  1838                           ;ECAN_P18.c: 91: BRGCON1 = 0xC0;
  1839  0006C8  0EC0               	movlw	192
  1840  0006CA  6E70               	movwf	3952,c	;volatile
  1841                           
  1842                           ;ECAN_P18.c: 93: BRGCON2 = 0x80;
  1843  0006CC  0E80               	movlw	128
  1844  0006CE  6E71               	movwf	3953,c	;volatile
  1845                           
  1846                           ;ECAN_P18.c: 95: BRGCON3 = 0x05;
  1847  0006D0  0E05               	movlw	5
  1848  0006D2  6E72               	movwf	3954,c	;volatile
  1849                           
  1850                           ;ECAN_P18.c: 108: RXM0EIDH = 0x00;
  1851  0006D4  0E00               	movlw	0
  1852  0006D6  010F               	movlb	15	; () banked
  1853  0006D8  6F1A               	movwf	26,b	;volatile
  1854                           
  1855                           ;ECAN_P18.c: 109: RXM0EIDL = 0x00;
  1856  0006DA  0E00               	movlw	0
  1857  0006DC  010F               	movlb	15	; () banked
  1858  0006DE  6F1B               	movwf	27,b	;volatile
  1859                           
  1860                           ; BSR set to: 15
  1861                           ;ECAN_P18.c: 111: RXM0SIDH = 0xFF;
  1862  0006E0  010F               	movlb	15	; () banked
  1863  0006E2  6918               	setf	24,b	;volatile
  1864                           
  1865                           ; BSR set to: 15
  1866                           ;ECAN_P18.c: 112: RXM0SIDL = 0xFF;
  1867  0006E4  010F               	movlb	15	; () banked
  1868  0006E6  6919               	setf	25,b	;volatile
  1869                           
  1870                           ;ECAN_P18.c: 117: RXM1EIDH = 0x00;
  1871  0006E8  0E00               	movlw	0
  1872  0006EA  010F               	movlb	15	; () banked
  1873  0006EC  6F1E               	movwf	30,b	;volatile
  1874                           
  1875                           ;ECAN_P18.c: 118: RXM1EIDL = 0x00;
  1876  0006EE  0E00               	movlw	0
  1877  0006F0  010F               	movlb	15	; () banked
  1878  0006F2  6F1F               	movwf	31,b	;volatile
  1879                           
  1880                           ; BSR set to: 15
  1881                           ;ECAN_P18.c: 120: RXM1SIDH = 0xFF;
  1882  0006F4  010F               	movlb	15	; () banked
  1883  0006F6  691C               	setf	28,b	;volatile
  1884                           
  1885                           ; BSR set to: 15
  1886                           ;ECAN_P18.c: 121: RXM1SIDL = 0xFF;
  1887  0006F8  010F               	movlb	15	; () banked
  1888  0006FA  691D               	setf	29,b	;volatile
  1889                           
  1890                           ;ECAN_P18.c: 125: RXFCON0 = 0x03;
  1891  0006FC  0E03               	movlw	3
  1892  0006FE  010D               	movlb	13	; () banked
  1893  000700  6FD4               	movwf	212,b	;volatile
  1894                           
  1895                           ;ECAN_P18.c: 126: RXFCON1 = 0x00;
  1896  000702  0E00               	movlw	0
  1897  000704  010D               	movlb	13	; () banked
  1898  000706  6FD5               	movwf	213,b	;volatile
  1899                           
  1900                           ;ECAN_P18.c: 132: RXF0EIDH = 0x00;
  1901  000708  0E00               	movlw	0
  1902  00070A  010F               	movlb	15	; () banked
  1903  00070C  6F02               	movwf	2,b	;volatile
  1904                           
  1905                           ;ECAN_P18.c: 133: RXF0EIDL = 0x00;
  1906  00070E  0E00               	movlw	0
  1907  000710  010F               	movlb	15	; () banked
  1908  000712  6F03               	movwf	3,b	;volatile
  1909                           
  1910                           ;ECAN_P18.c: 134: RXF0SIDH = 0xCC;
  1911  000714  0ECC               	movlw	204
  1912  000716  010F               	movlb	15	; () banked
  1913  000718  6F00               	movwf	0,b	;volatile
  1914                           
  1915                           ;ECAN_P18.c: 135: RXF0SIDL = 0x00;
  1916  00071A  0E00               	movlw	0
  1917  00071C  010F               	movlb	15	; () banked
  1918  00071E  6F01               	movwf	1,b	;volatile
  1919                           
  1920                           ; BSR set to: 15
  1921                           ;ECAN_P18.c: 137: RXF1SIDH = 0XFF;
  1922  000720  010F               	movlb	15	; () banked
  1923  000722  6904               	setf	4,b	;volatile
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;ECAN_P18.c: 138: RXF1SIDL = 0xFF;
  1927  000724  010F               	movlb	15	; () banked
  1928  000726  6905               	setf	5,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;ECAN_P18.c: 140: RXB0CONbits.RXM1 =1;
  1932  000728  8C60               	bsf	3936,6,c	;volatile
  1933                           
  1934                           ; BSR set to: 15
  1935                           ;ECAN_P18.c: 141: RXB0CONbits.RXM0 =1;
  1936  00072A  8A60               	bsf	3936,5,c	;volatile
  1937                           
  1938                           ; BSR set to: 15
  1939                           ;ECAN_P18.c: 144: RXF2SIDH = 0xFF;
  1940  00072C  010F               	movlb	15	; () banked
  1941  00072E  6908               	setf	8,b	;volatile
  1942                           
  1943                           ;ECAN_P18.c: 145: RXF2SIDL = 0;
  1944  000730  0E00               	movlw	0
  1945  000732  010F               	movlb	15	; () banked
  1946  000734  6F09               	movwf	9,b	;volatile
  1947                           
  1948                           ; BSR set to: 15
  1949                           ;ECAN_P18.c: 146: RXF3SIDH = 0XFF;
  1950  000736  010F               	movlb	15	; () banked
  1951  000738  690C               	setf	12,b	;volatile
  1952                           
  1953                           ;ECAN_P18.c: 147: RXF3SIDL = 0;
  1954  00073A  0E00               	movlw	0
  1955  00073C  010F               	movlb	15	; () banked
  1956  00073E  6F0D               	movwf	13,b	;volatile
  1957                           
  1958                           ; BSR set to: 15
  1959                           ;ECAN_P18.c: 148: RXF4SIDH = 0XFF;
  1960  000740  010F               	movlb	15	; () banked
  1961  000742  6910               	setf	16,b	;volatile
  1962                           
  1963                           ;ECAN_P18.c: 149: RXF4SIDL = 0;
  1964  000744  0E00               	movlw	0
  1965  000746  010F               	movlb	15	; () banked
  1966  000748  6F11               	movwf	17,b	;volatile
  1967                           
  1968                           ; BSR set to: 15
  1969                           ;ECAN_P18.c: 150: RXF5SIDH = 0XFF;
  1970  00074A  010F               	movlb	15	; () banked
  1971  00074C  6914               	setf	20,b	;volatile
  1972                           
  1973                           ;ECAN_P18.c: 151: RXF5SIDL = 0;
  1974  00074E  0E00               	movlw	0
  1975  000750  010F               	movlb	15	; () banked
  1976  000752  6F15               	movwf	21,b	;volatile
  1977                           
  1978                           ;ECAN_P18.c: 157: CANCON = 0x00;
  1979  000754  0E00               	movlw	0
  1980  000756  6E6F               	movwf	3951,c	;volatile
  1981  000758                     l100:
  1982  000758  B06E               	btfsc	3950,0,c	;volatile
  1983  00075A  D7FE               	goto	l100
  1984                           
  1985                           ;ECAN_P18.c: 161: RXB0CON = 0x00;
  1986  00075C  0E00               	movlw	0
  1987  00075E  6E60               	movwf	3936,c	;volatile
  1988                           
  1989                           ;ECAN_P18.c: 162: RXB1CON = 0x00;
  1990  000760  0E00               	movlw	0
  1991  000762  010F               	movlb	15	; () banked
  1992  000764  6F50               	movwf	80,b	;volatile
  1993                           
  1994                           ; BSR set to: 15
  1995  000766  0012               	return		;funcret
  1996  000768                     __end_of_InitECAN:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function _ECAN_Transmit *****************
  2007 ;; Defined at:
  2008 ;;		line 164 in file "main.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;		None               void
  2015 ;; Registers used:
  2016 ;;		wreg, status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2022 ;;      Params:         0       0       0       0
  2023 ;;      Locals:         0       0       0       0
  2024 ;;      Temps:          0       0       0       0
  2025 ;;      Totals:         0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text13
  2036  000816                     __ptext13:
  2037                           	opt stack 0
  2038  000816                     _ECAN_Transmit:
  2039                           	opt stack 30
  2040                           
  2041                           ;main.c: 165: PIR3bits.TXB0IF = 0;
  2042                           
  2043                           ; BSR set to: 15
  2044                           ;incstack = 0
  2045  000816  94A4               	bcf	4004,2,c	;volatile
  2046  000818  0004               	clrwdt		;# 
  2047                           
  2048                           ;main.c: 169: TXB0EIDH = 0x00;
  2049  00081A  0E00               	movlw	0
  2050  00081C  010F               	movlb	15	; () banked
  2051  00081E  6F43               	movwf	67,b	;volatile
  2052                           
  2053                           ;main.c: 170: TXB0EIDL = 0x00;
  2054  000820  0E00               	movlw	0
  2055  000822  010F               	movlb	15	; () banked
  2056  000824  6F44               	movwf	68,b	;volatile
  2057                           
  2058                           ;main.c: 171: TXB0SIDH = 0x55;
  2059  000826  0E55               	movlw	85
  2060  000828  010F               	movlb	15	; () banked
  2061  00082A  6F41               	movwf	65,b	;volatile
  2062                           
  2063                           ;main.c: 172: TXB0SIDL = 0x00;
  2064  00082C  0E00               	movlw	0
  2065  00082E  010F               	movlb	15	; () banked
  2066  000830  6F42               	movwf	66,b	;volatile
  2067                           
  2068                           ;main.c: 177: TXB0DLC = 0x08;
  2069  000832  0E08               	movlw	8
  2070  000834  010F               	movlb	15	; () banked
  2071  000836  6F45               	movwf	69,b	;volatile
  2072                           
  2073                           ; BSR set to: 15
  2074                           ;main.c: 178: TXB0D0 = temperature;
  2075  000838  C054  FF46         	movff	_temperature,3910	;volatile
  2076                           
  2077                           ;main.c: 179: TXB0D1=0XAA;
  2078  00083C  0EAA               	movlw	170
  2079  00083E  010F               	movlb	15	; () banked
  2080  000840  6F47               	movwf	71,b	;volatile
  2081                           
  2082                           ;main.c: 180: TXB0D2=0X02;
  2083  000842  0E02               	movlw	2
  2084  000844  010F               	movlb	15	; () banked
  2085  000846  6F48               	movwf	72,b	;volatile
  2086                           
  2087                           ;main.c: 181: TXB0D3=0X03;
  2088  000848  0E03               	movlw	3
  2089  00084A  010F               	movlb	15	; () banked
  2090  00084C  6F49               	movwf	73,b	;volatile
  2091                           
  2092                           ;main.c: 182: TXB0D4=0X04;
  2093  00084E  0E04               	movlw	4
  2094  000850  010F               	movlb	15	; () banked
  2095  000852  6F4A               	movwf	74,b	;volatile
  2096                           
  2097                           ;main.c: 183: TXB0D5=0X05;
  2098  000854  0E05               	movlw	5
  2099  000856  010F               	movlb	15	; () banked
  2100  000858  6F4B               	movwf	75,b	;volatile
  2101                           
  2102                           ;main.c: 184: TXB0D6=0X06;
  2103  00085A  0E06               	movlw	6
  2104  00085C  010F               	movlb	15	; () banked
  2105  00085E  6F4C               	movwf	76,b	;volatile
  2106                           
  2107                           ;main.c: 185: TXB0D7=0X07;
  2108  000860  0E07               	movlw	7
  2109  000862  010F               	movlb	15	; () banked
  2110  000864  6F4D               	movwf	77,b	;volatile
  2111                           
  2112                           ; BSR set to: 15
  2113                           ;main.c: 187: TXB0CONbits.TXREQ = 1;
  2114  000866  010F               	movlb	15	; () banked
  2115  000868  8740               	bsf	64,3,b	;volatile
  2116  00086A                     l279:
  2117                           
  2118                           ; BSR set to: 15
  2119  00086A  010F               	movlb	15	; () banked
  2120  00086C  A740               	btfss	64,3,b	;volatile
  2121  00086E  0012               	return	
  2122  000870  D7FC               	goto	l279
  2123  000872                     __end_of_ECAN_Transmit:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           status	equ	0xFD8
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           status	equ	0xFD8
  2139                           
  2140                           	psect	rparam
  2141  0000                     tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           postinc0	equ	0xFEE
  2146                           wreg	equ	0xFE8
  2147                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      84
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _printf->_putch
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7985
                                             41 COMRAM     8     8      0
                      _ECAN_Transmit
                         _InitDevice
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                    _adc_read_sensor
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     189
                                              1 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_sensor                                      6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2117
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2587
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2669
                                             26 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
                           _InitECAN
                           _InitUART
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitECAN                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECAN_Transmit
   _InitDevice
     _InitECAN
     _InitUART
     _adc_init
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
   ___lwtoft
     ___ftpack
   _adc_read_sensor
   _printf
     _putch
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      54       1       88.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       9        0.0%
DATA                 0      0      54      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 15:13:37 2016

                      l97 06BC               __CFG_BORV$0 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000               __CFG_LVP$ON 000000                       l100 0758  
                     l306 08EE                       l270 061A                       l602 05BE  
                     l279 086A                       l544 07F6                       l297 0978  
            __CFG_CPB$OFF 000000                       u511 0542                       u601 0332  
            __CFG_CPD$OFF 000000                       u620 036C                       u541 0426  
                     u561 044E                       u625 0364                       u491 051A  
                     wreg 000FE8              ___ftdiv@cntr 0024              ___ftdiv@sign 0029  
            __CFG_WDT$OFF 000000                      l1315 055A                      l1403 034E  
                    l1261 0786                      l1309 0532                      l1421 03B4  
                    l1271 07E2                      l1263 0790                      l1335 0598  
                    l1431 03DC                      l1273 07EC                      l1265 07AE  
                    l1257 0778                      l1361 0466                      l1433 03E8  
                    l1425 03C4                      l1355 043E                      l1435 03EE  
                    l1291 08CC                      l1269 07C4                      l1293 08D2  
                    l1375 0498                      l1439 0404                      l1385 04C0  
                    l1379 04A8                      l1389 04D0                      STR_1 031B  
                    STR_2 0301                      _IPR3 000FA5                      _PIE3 000FA3  
                    _PIR3 000FA4              __CFG_PWRT$ON 000000                      _main 05F0  
            ___ftpack@arg 0001              ___ftpack@exp 0004                      start 0000  
           __CFG_IESO$OFF 000000               main@voltage 002A              ___ftmul@cntr 0019  
            ___param_bank 000010              ___ftmul@sign 001A          ?_adc_read_sensor 0001  
            ___fttol@exp1 000F              ___fttol@lval 000B                     ?_main 0001  
         __end_of___ftdiv 05F0           __end_of___ftmul 050A           __end_of___fttol 0416  
                   _SPBRG 000FAF                     _TXREG 000FAD             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000             ___ftpack@sign 0005  
                   _putch 0972            __CFG_BOREN$OFF 000000                     tablat 000FF5  
                   status 000FD8                _InitDevice 0872            __CFG_MCLRE$OFF 000000  
         __initialization 0936              __end_of_main 06B8          __end_of_InitECAN 0768  
        __end_of_InitUART 0964                    ??_main 002A             ___fttol@sign1 000A  
           __activetblptr 000001                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ADCON2 000FC0                    _CANCON 000F6F                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _CIOCON 000F73           __CFG_BBSIZ$1024 000000  
                  ?_putch 0001          __end_of___ftpack 0816          __end_of_adc_init 0972  
        __end_of___lwtoft 0936                    _RXB0D0 000F66                    _RXB0D1 000F67  
                  _RXB0D2 000F68                    _RXB0D3 000F69                    _RXB0D4 000F6A  
                  _RXB0D5 000F6B                    _RXB0D6 000F6C                    _RXB0D7 000F6D  
                  _TXB0D0 000F46                    _TXB0D1 000F47                    _TXB0D2 000F48  
                  _TXB0D3 000F49                    _TXB0D4 000F4A                    _TXB0D5 000F4B  
                  _TXB0D6 000F4C                    _TXB0D7 000F4D            __CFG_XINST$OFF 000000  
          __CFG_STVREN$ON 000000                 ??___ftdiv 0021                 ??___ftmul 0012  
               ??___fttol 0005                    clear_0 093C                    _printf 08C2  
   ___ftmul@f3_as_product 0016                _TransData0 003E                _TransData1 003F  
              _TransData2 0040                _TransData3 0041                _TransData4 0042  
              _TransData5 0043                _TransData6 0044                _TransData7 0045  
              _TransData8 0046              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 0942           __CFG_PBADEN$OFF 000000             ___rparam_used 000001  
              ___ftdiv@f1 001B                ___ftdiv@f2 001E                ___ftdiv@f3 0025  
             ?_InitDevice 0001                ___ftmul@f1 000C                ___ftmul@f2 000F  
              ___fttol@f1 0001            __pcstackCOMRAM 0001    __size_of_ECAN_Transmit 005C  
           __end_of_putch 097E                ___lwtoft@c 0009                   ??_putch 0001  
               ?_InitECAN 0001                 ?_InitUART 0001                   _ECANCON 000F77  
                 _CANSTAT 000F6E                 ?___ftpack 0001                   ?_printf 0002  
               ?_adc_init 0001                   _BRGCON1 000F70                   _BRGCON2 000F71  
                 _BRGCON3 000F72                 ?___lwtoft 0009       __size_of_InitDevice 0050  
                 _RXB0DLC 000F65                   _RXB0CON 000F60                   _RXB1CON 000F50  
                 _TXB0DLC 000F45                   _RXFCON0 000DD4                   _RXFCON1 000DD5  
           _ECAN_Transmit 0816                ??_InitECAN 0001                ??_InitUART 0001  
                 __Hparam 0000                   __Lparam 0000                   ___ftdiv 050A  
                 ___ftmul 0416                   ___fttol 0322              __psmallconst 0300  
                 __pcinit 0936                ??___ftpack 0006                   __ramtop 0300  
              ??_adc_init 0001                   __ptext0 05F0                   __ptext1 08C2  
                 __ptext2 0972                   __ptext3 08EC                   __ptext4 0912  
                 __ptext5 0322                   __ptext6 0416                   __ptext7 050A  
                 __ptext8 0768                   __ptext9 0872           __size_of_printf 002A  
              ??___lwtoft 000C  __size_of_adc_read_sensor 0026                   _temp_D0 0047  
                 _temp_D1 0048                   _temp_D2 0049                   _temp_D3 004A  
                 _temp_D4 004B                   _temp_D5 004C                   _temp_D6 004D  
                 _temp_D7 004E                   main@ADR 0030            ?_ECAN_Transmit 0001  
    end_of_initialization 0942                 _RCSTAbits 000FAB                   printf@c 0006  
                 printf@f 0002                   postinc0 000FEE                 _TRISAbits 000F92  
               _TRISBbits 000F93                 _TRISCbits 000F94               ___ftdiv@exp 0028  
               _TXSTAbits 000FAC              ??_InitDevice 0001               ___ftmul@exp 0015  
             _BAUDCONbits 000FB8            __end_of_printf 08EC       start_initialization 0936  
         ??_ECAN_Transmit 0001        __end_of_InitDevice 08C2         ??_adc_read_sensor 0003  
        __CFG_OSC$IRCIO67 000000         __size_of_InitECAN 00B0         __size_of_InitUART 0014  
        __CFG_LPT1OSC$OFF 000000                  ??_printf 0004         __size_of___ftpack 00AE  
       __size_of_adc_init 000E               __pbssCOMRAM 0032         __size_of___lwtoft 0024  
                ?___ftdiv 001B                  ?___ftmul 000C                  ?___fttol 0001  
             __smallconst 0300               _COMSTATbits 000F74     adc_read_sensor@result 0005  
          __size_of_putch 000C                  _LATAbits 000F89                 _temp_EIDH 0050  
               _temp_EIDL 0051                 _temp_SIDH 0052                 _temp_SIDL 0053  
                _PIR3bits 000FA4          __CFG_WDTPS$32768 000000                  _RXB0SIDH 000F61  
                _RXB0SIDL 000F62                  _RXF0EIDH 000F02                  _RXF0EIDL 000F03  
                _RXF0SIDH 000F00                  _RXF0SIDL 000F01                  _TXB0EIDH 000F43  
                _RXF1SIDH 000F04                  _TXB0EIDL 000F44                  _RXF1SIDL 000F05  
                _RXF2SIDH 000F08                  _RXF2SIDL 000F09                  _RXF3SIDH 000F0C  
                _RXF3SIDL 000F0D                  _RXF4SIDH 000F10                  _RXF4SIDL 000F11  
                _RXF5SIDH 000F14                  _RXF5SIDL 000F15                  _RXM0EIDH 000F1A  
                _RXM0EIDL 000F1B                  _TXB0SIDH 000F41                  _RXM1EIDH 000F1E  
                _TXB0SIDL 000F42                  _RXM1EIDL 000F1F                  _RXM0SIDH 000F18  
                _RXM0SIDL 000F19                  _RXM1SIDH 000F1C                  _RXM1SIDL 000F1D  
              _ADCON0bits 000FC2                _ADCON1bits 000FC1                  _InitECAN 06B8  
                _RecData0 0036                  _RecData1 0037                  _RecData2 0038  
                _RecData3 0039                  _RecData4 003A                  _RecData5 003B  
                _RecData6 003C                  _RecData7 003D                  _InitUART 0950  
                __Hrparam 0000           _CAN_RX_Adress_H 0032           _CAN_RX_Adress_L 0033  
                __Lrparam 0000              __Lsmallconst 0300                _CIOCONbits 000F73  
        __size_of___ftdiv 00E6          __size_of___ftmul 00F4          __size_of___fttol 00F4  
                ___ftpack 0768           _adc_read_sensor 08EC                  _adc_init 0964  
                ___lwtoft 0912           _CAN_TX_Adress_H 0034           _CAN_TX_Adress_L 0035  
                __ptext10 0964                  __ptext11 0950                  __ptext12 06B8  
                __ptext13 0816             __size_of_main 00C8                  _temp_DLC 004F  
                main@temp 002D               _RXB0CONbits 000F60                 putch@byte 0001  
             _OSCTUNEbits 000F9B     __end_of_ECAN_Transmit 0872               _TXB0CONbits 000F40  
             _TXB1CONbits 000F30               _TXB2CONbits 000F20                _OSCCONbits 000FD3  
 __end_of_adc_read_sensor 0912                  printf@ap 0004               _temperature 0054  
