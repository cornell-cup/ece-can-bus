

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 16:47:36 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	smallconst
    23  000300                     __psmallconst:
    24                           	opt stack 0
    25  000300  00                 	db	0
    26  000301                     _dpowers:
    27                           	opt stack 0
    28  000301  0001               	dw	1
    29  000303  000A               	dw	10
    30  000305  0064               	dw	100
    31  000307  03E8               	dw	1000
    32  000309  2710               	dw	10000
    33  00030B                     __end_of_dpowers:
    34                           	opt stack 0
    35  0000                     _RXFCON0	set	3540
    36  0000                     _RXFCON1	set	3541
    37  0000                     _RXB1CON	set	3920
    38  0000                     _RXF0EIDH	set	3842
    39  0000                     _RXF0EIDL	set	3843
    40  0000                     _RXF0SIDH	set	3840
    41  0000                     _RXF0SIDL	set	3841
    42  0000                     _RXF1SIDH	set	3844
    43  0000                     _RXF1SIDL	set	3845
    44  0000                     _RXF2SIDH	set	3848
    45  0000                     _RXF2SIDL	set	3849
    46  0000                     _RXF3SIDH	set	3852
    47  0000                     _RXF3SIDL	set	3853
    48  0000                     _RXF4SIDH	set	3856
    49  0000                     _RXF4SIDL	set	3857
    50  0000                     _RXF5SIDH	set	3860
    51  0000                     _RXF5SIDL	set	3861
    52  0000                     _RXM0EIDH	set	3866
    53  0000                     _RXM0EIDL	set	3867
    54  0000                     _RXM0SIDH	set	3864
    55  0000                     _RXM0SIDL	set	3865
    56  0000                     _RXM1EIDH	set	3870
    57  0000                     _RXM1EIDL	set	3871
    58  0000                     _RXM1SIDH	set	3868
    59  0000                     _RXM1SIDL	set	3869
    60  0000                     _TXB0CONbits	set	3904
    61  0000                     _TXB0D0	set	3910
    62  0000                     _TXB0D1	set	3911
    63  0000                     _TXB0D2	set	3912
    64  0000                     _TXB0D3	set	3913
    65  0000                     _TXB0D4	set	3914
    66  0000                     _TXB0D5	set	3915
    67  0000                     _TXB0D6	set	3916
    68  0000                     _TXB0D7	set	3917
    69  0000                     _TXB0DLC	set	3909
    70  0000                     _TXB0EIDH	set	3907
    71  0000                     _TXB0EIDL	set	3908
    72  0000                     _TXB0SIDH	set	3905
    73  0000                     _TXB0SIDL	set	3906
    74  0000                     _TXB1CONbits	set	3888
    75  0000                     _TXB2CONbits	set	3872
    76  0000                     _ADCON0	set	4034
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON1bits	set	4033
    80  0000                     _ADCON2	set	4032
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADRESL	set	4035
    83  0000                     _BAUDCONbits	set	4024
    84  0000                     _BRGCON1	set	3952
    85  0000                     _BRGCON2	set	3953
    86  0000                     _BRGCON3	set	3954
    87  0000                     _CANCON	set	3951
    88  0000                     _CANSTAT	set	3950
    89  0000                     _CIOCON	set	3955
    90  0000                     _CIOCONbits	set	3955
    91  0000                     _ECANCON	set	3959
    92  0000                     _IPR3	set	4005
    93  0000                     _LATAbits	set	3977
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _OSCTUNEbits	set	3995
    96  0000                     _PIE3	set	4003
    97  0000                     _PIR3	set	4004
    98  0000                     _PIR3bits	set	4004
    99  0000                     _RCSTAbits	set	4011
   100  0000                     _RXB0CON	set	3936
   101  0000                     _RXB0CONbits	set	3936
   102  0000                     _RXB0D0	set	3942
   103  0000                     _RXB0D1	set	3943
   104  0000                     _RXB0D2	set	3944
   105  0000                     _RXB0D3	set	3945
   106  0000                     _RXB0D4	set	3946
   107  0000                     _RXB0D5	set	3947
   108  0000                     _RXB0D6	set	3948
   109  0000                     _RXB0D7	set	3949
   110  0000                     _RXB0DLC	set	3941
   111  0000                     _RXB0EIDH	set	3939
   112  0000                     _RXB0EIDL	set	3940
   113  0000                     _RXB0SIDH	set	3937
   114  0000                     _RXB0SIDL	set	3938
   115  0000                     _SPBRG	set	4015
   116  0000                     _TRISAbits	set	3986
   117  0000                     _TRISBbits	set	3987
   118  0000                     _TRISCbits	set	3988
   119  0000                     _TXREG	set	4013
   120  0000                     _TXSTAbits	set	4012
   121  00030B                     STR_4:
   122  00030B  54                 	db	84	;'T'
   123  00030C  65                 	db	101	;'e'
   124  00030D  6D                 	db	109	;'m'
   125  00030E  70                 	db	112	;'p'
   126  00030F  65                 	db	101	;'e'
   127  000310  72                 	db	114	;'r'
   128  000311  61                 	db	97	;'a'
   129  000312  74                 	db	116	;'t'
   130  000313  75                 	db	117	;'u'
   131  000314  72                 	db	114	;'r'
   132  000315  65                 	db	101	;'e'
   133  000316  20                 	db	32
   134  000317  3D                 	db	61	;'='
   135  000318  20                 	db	32
   136  000319  25                 	db	37
   137  00031A  64                 	db	100	;'d'
   138  00031B  20                 	db	32
   139  00031C  46                 	db	70	;'F'
   140  00031D  61                 	db	97	;'a'
   141  00031E  68                 	db	104	;'h'
   142  00031F  72                 	db	114	;'r'
   143  000320  65                 	db	101	;'e'
   144  000321  6E                 	db	110	;'n'
   145  000322  68                 	db	104	;'h'
   146  000323  65                 	db	101	;'e'
   147  000324  69                 	db	105	;'i'
   148  000325  74                 	db	116	;'t'
   149  000326  0A                 	db	10
   150  000327  0D                 	db	13
   151  000328  00                 	db	0
   152  000329                     STR_3:
   153  000329  44                 	db	68	;'D'
   154  00032A  61                 	db	97	;'a'
   155  00032B  74                 	db	116	;'t'
   156  00032C  61                 	db	97	;'a'
   157  00032D  20                 	db	32
   158  00032E  72                 	db	114	;'r'
   159  00032F  65                 	db	101	;'e'
   160  000330  63                 	db	99	;'c'
   161  000331  65                 	db	101	;'e'
   162  000332  69                 	db	105	;'i'
   163  000333  76                 	db	118	;'v'
   164  000334  65                 	db	101	;'e'
   165  000335  64                 	db	100	;'d'
   166  000336  3A                 	db	58	;':'
   167  000337  20                 	db	32
   168  000338  25                 	db	37
   169  000339  64                 	db	100	;'d'
   170  00033A  20                 	db	32
   171  00033B  62                 	db	98	;'b'
   172  00033C  79                 	db	121	;'y'
   173  00033D  74                 	db	116	;'t'
   174  00033E  65                 	db	101	;'e'
   175  00033F  28                 	db	40
   176  000340  73                 	db	115	;'s'
   177  000341  29                 	db	41
   178  000342  2C                 	db	44
   179  000343  20                 	db	32
   180  000344  20                 	db	32
   181  000345  00                 	db	0
   182  000346                     STR_2:
   183  000346  48                 	db	72	;'H'
   184  000347  65                 	db	101	;'e'
   185  000348  6C                 	db	108	;'l'
   186  000349  6C                 	db	108	;'l'
   187  00034A  6F                 	db	111	;'o'
   188  00034B  20                 	db	32
   189  00034C  66                 	db	102	;'f'
   190  00034D  72                 	db	114	;'r'
   191  00034E  6F                 	db	111	;'o'
   192  00034F  6D                 	db	109	;'m'
   193  000350  20                 	db	32
   194  000351  43                 	db	67	;'C'
   195  000352  6F                 	db	111	;'o'
   196  000353  72                 	db	114	;'r'
   197  000354  6E                 	db	110	;'n'
   198  000355  65                 	db	101	;'e'
   199  000356  6C                 	db	108	;'l'
   200  000357  6C                 	db	108	;'l'
   201  000358  20                 	db	32
   202  000359  43                 	db	67	;'C'
   203  00035A  75                 	db	117	;'u'
   204  00035B  70                 	db	112	;'p'
   205  00035C  21                 	db	33
   206  00035D  0A                 	db	10
   207  00035E  0D                 	db	13
   208  00035F  00                 	db	0
   209  000360                     STR_1:
   210  000360  1B                 	db	27
   211  000361  5B                 	db	91	;'['
   212  000362  32                 	db	50	;'2'
   213  000363  4A                 	db	74	;'J'
   214  000364  00                 	db	0
   215                           
   216                           ; #config settings
   217  000365  00                 	db	0	; dummy byte at the end
   218  0000                     
   219                           	psect	cinit
   220  0006BA                     __pcinit:
   221                           	opt stack 0
   222  0006BA                     start_initialization:
   223                           	opt stack 0
   224  0006BA                     __initialization:
   225                           	opt stack 0
   226                           
   227                           ; Clear objects allocated to COMRAM (35 bytes)
   228  0006BA  EE00  F001         	lfsr	0,__pbssCOMRAM
   229  0006BE  0E23               	movlw	35
   230  0006C0                     clear_0:
   231  0006C0  6AEE               	clrf	postinc0,c
   232  0006C2  06E8               	decf	wreg,f,c
   233  0006C4  E1FD               	bnz	clear_0
   234  0006C6                     end_of_initialization:
   235                           	opt stack 0
   236  0006C6                     __end_of__initialization:
   237                           	opt stack 0
   238  0006C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  0006C8  6EF8               	movwf	tblptru,c
   240  0006CA  0100               	movlb	0
   241  0006CC  EF9D  F002         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	bssCOMRAM
   247  000001                     __pbssCOMRAM:
   248                           	opt stack 0
   249  000001                     _CAN_RX_Adress_H:
   250                           	opt stack 0
   251  000001                     	ds	1
   252  000002                     _CAN_RX_Adress_L:
   253                           	opt stack 0
   254  000002                     	ds	1
   255  000003                     _CAN_TX_Adress_H:
   256                           	opt stack 0
   257  000003                     	ds	1
   258  000004                     _CAN_TX_Adress_L:
   259                           	opt stack 0
   260  000004                     	ds	1
   261  000005                     _RecData0:
   262                           	opt stack 0
   263  000005                     	ds	1
   264  000006                     _RecData1:
   265                           	opt stack 0
   266  000006                     	ds	1
   267  000007                     _RecData2:
   268                           	opt stack 0
   269  000007                     	ds	1
   270  000008                     _RecData3:
   271                           	opt stack 0
   272  000008                     	ds	1
   273  000009                     _RecData4:
   274                           	opt stack 0
   275  000009                     	ds	1
   276  00000A                     _RecData5:
   277                           	opt stack 0
   278  00000A                     	ds	1
   279  00000B                     _RecData6:
   280                           	opt stack 0
   281  00000B                     	ds	1
   282  00000C                     _RecData7:
   283                           	opt stack 0
   284  00000C                     	ds	1
   285  00000D                     _TransData0:
   286                           	opt stack 0
   287  00000D                     	ds	1
   288  00000E                     _TransData1:
   289                           	opt stack 0
   290  00000E                     	ds	1
   291  00000F                     _TransData2:
   292                           	opt stack 0
   293  00000F                     	ds	1
   294  000010                     _TransData3:
   295                           	opt stack 0
   296  000010                     	ds	1
   297  000011                     _TransData4:
   298                           	opt stack 0
   299  000011                     	ds	1
   300  000012                     _TransData5:
   301                           	opt stack 0
   302  000012                     	ds	1
   303  000013                     _TransData6:
   304                           	opt stack 0
   305  000013                     	ds	1
   306  000014                     _TransData7:
   307                           	opt stack 0
   308  000014                     	ds	1
   309  000015                     _TransData8:
   310                           	opt stack 0
   311  000015                     	ds	1
   312  000016                     _temp_D0:
   313                           	opt stack 0
   314  000016                     	ds	1
   315  000017                     _temp_D1:
   316                           	opt stack 0
   317  000017                     	ds	1
   318  000018                     _temp_D2:
   319                           	opt stack 0
   320  000018                     	ds	1
   321  000019                     _temp_D3:
   322                           	opt stack 0
   323  000019                     	ds	1
   324  00001A                     _temp_D4:
   325                           	opt stack 0
   326  00001A                     	ds	1
   327  00001B                     _temp_D5:
   328                           	opt stack 0
   329  00001B                     	ds	1
   330  00001C                     _temp_D6:
   331                           	opt stack 0
   332  00001C                     	ds	1
   333  00001D                     _temp_D7:
   334                           	opt stack 0
   335  00001D                     	ds	1
   336  00001E                     _temp_DLC:
   337                           	opt stack 0
   338  00001E                     	ds	1
   339  00001F                     _temp_EIDH:
   340                           	opt stack 0
   341  00001F                     	ds	1
   342  000020                     _temp_EIDL:
   343                           	opt stack 0
   344  000020                     	ds	1
   345  000021                     _temp_SIDH:
   346                           	opt stack 0
   347  000021                     	ds	1
   348  000022                     _temp_SIDL:
   349                           	opt stack 0
   350  000022                     	ds	1
   351  000023                     _temperature:
   352                           	opt stack 0
   353  000023                     	ds	1
   354                           tblptru	equ	0xFF8
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358                           	psect	cstackCOMRAM
   359  000024                     __pcstackCOMRAM:
   360                           	opt stack 0
   361  000024                     ?___lwdiv:
   362                           	opt stack 0
   363  000024                     putch@byte:
   364                           	opt stack 0
   365  000024                     ___lwdiv@dividend:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x0
   369  000024                     	ds	2
   370  000026                     ___lwdiv@divisor:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x2
   374  000026                     	ds	2
   375  000028                     ___lwdiv@quotient:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x4
   379  000028                     	ds	2
   380  00002A                     ___lwdiv@counter:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x6
   384  00002A                     	ds	1
   385  00002B                     ?___lwmod:
   386                           	opt stack 0
   387  00002B                     ___lwmod@dividend:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x7
   391  00002B                     	ds	2
   392  00002D                     ___lwmod@divisor:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x9
   396  00002D                     	ds	2
   397  00002F                     ___lwmod@counter:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xB
   401  00002F                     	ds	1
   402  000030                     ?_printf:
   403                           	opt stack 0
   404  000030                     printf@f:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0xC
   408  000030                     	ds	4
   409  000034                     ??_printf:
   410                           
   411                           ; 0 bytes @ 0x10
   412  000034                     	ds	1
   413  000035                     printf@ap:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x11
   417  000035                     	ds	2
   418  000037                     printf@flag:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x13
   422  000037                     	ds	1
   423  000038                     printf@prec:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x14
   427  000038                     	ds	1
   428  000039                     printf@val:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x15
   432  000039                     	ds	2
   433  00003B                     printf@c:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x17
   437  00003B                     	ds	1
   438  00003C                     ??_main:
   439                           
   440                           ; 0 bytes @ 0x18
   441  00003C                     	ds	1
   442  00003D                     main@x:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x19
   446  00003D                     	ds	2
   447                           tblptru	equ	0xFF8
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 95 in file "main_rxf.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  x               2   25[COMRAM] int 
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   470 ;;      Params:         0       0       0       0
   471 ;;      Locals:         2       0       0       0
   472 ;;      Temps:          1       0       0       0
   473 ;;      Totals:         3       0       0       0
   474 ;;Total ram usage:        3 bytes
   475 ;; Hardware stack levels required when called:    2
   476 ;; This function calls:
   477 ;;		_ECAN_Receive
   478 ;;		_InitDevice
   479 ;;		_printf
   480 ;;		_putch
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text0
   487  00053A                     __ptext0:
   488                           	opt stack 0
   489  00053A                     _main:
   490                           	opt stack 29
   491                           
   492                           ;main_rxf.c: 96: InitDevice();
   493                           
   494                           ;incstack = 0
   495  00053A  ECF8  F002         	call	_InitDevice	;wreg free
   496                           
   497                           ;main_rxf.c: 97: LATAbits.LATA0 = 1;
   498  00053E  8089               	bsf	3977,0,c	;volatile
   499                           
   500                           ;main_rxf.c: 99: printf( "\x1b[2J");
   501  000540  0E60               	movlw	low STR_1
   502  000542  6E30               	movwf	printf@f,c
   503  000544  0E03               	movlw	high STR_1
   504  000546  6E31               	movwf	printf@f+1,c
   505  000548  ECB3  F001         	call	_printf	;wreg free
   506                           
   507                           ;main_rxf.c: 100: {putch(0x0a); putch(0x0d);};
   508  00054C  0E0A               	movlw	10
   509  00054E  EC79  F003         	call	_putch
   510  000552  0E0D               	movlw	13
   511  000554  EC79  F003         	call	_putch
   512                           
   513                           ;main_rxf.c: 101: printf("Hello from Cornell Cup!\n\r");
   514  000558  0E46               	movlw	low STR_2
   515  00055A  6E30               	movwf	printf@f,c
   516  00055C  0E03               	movlw	high STR_2
   517  00055E  6E31               	movwf	printf@f+1,c
   518  000560  ECB3  F001         	call	_printf	;wreg free
   519  000564                     l280:
   520                           
   521                           ;main_rxf.c: 104: int x = ECAN_Receive();
   522  000564  EC41  F003         	call	_ECAN_Receive	;wreg free
   523  000568  6E3C               	movwf	??_main& (0+255),c
   524  00056A  503C               	movf	??_main,w,c
   525  00056C  6E3D               	movwf	main@x,c
   526  00056E  6A3E               	clrf	main@x+1,c
   527                           
   528                           ;main_rxf.c: 106: if (x) {
   529  000570  503D               	movf	main@x,w,c
   530  000572  103E               	iorwf	main@x+1,w,c
   531  000574  B4D8               	btfsc	status,2,c
   532  000576  D7F6               	goto	l280
   533                           
   534                           ;main_rxf.c: 108: printf("Data received: %d byte(s),  ", temp_DLC);
   535  000578  0E29               	movlw	low STR_3
   536  00057A  6E30               	movwf	printf@f,c
   537  00057C  0E03               	movlw	high STR_3
   538  00057E  6E31               	movwf	printf@f+1,c
   539  000580  C01E  F032         	movff	_temp_DLC,?_printf+2
   540  000584  6A33               	clrf	?_printf+3,c
   541  000586  ECB3  F001         	call	_printf	;wreg free
   542                           
   543                           ;main_rxf.c: 109: printf("Temperature = %d Fahrenheit\n\r", RecData0);
   544  00058A  0E0B               	movlw	low STR_4
   545  00058C  6E30               	movwf	printf@f,c
   546  00058E  0E03               	movlw	high STR_4
   547  000590  6E31               	movwf	printf@f+1,c
   548  000592  C005  F032         	movff	_RecData0,?_printf+2
   549  000596  6A33               	clrf	?_printf+3,c
   550  000598  ECB3  F001         	call	_printf	;wreg free
   551                           
   552                           ;main_rxf.c: 110: } else {
   553  00059C  D7E3               	goto	l280
   554  00059E                     __end_of_main:
   555                           	opt stack 0
   556                           tblptru	equ	0xFF8
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _printf *****************
   562 ;; Defined at:
   563 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  f               2   12[COMRAM] PTR const unsigned char 
   566 ;;		 -> STR_4(30), STR_3(29), STR_2(26), STR_1(5), 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  tmpval          4    0        struct .
   569 ;;  cp              3    0        PTR const unsigned char 
   570 ;;  val             2   21[COMRAM] unsigned int 
   571 ;;  ap              2   17[COMRAM] PTR void [1]
   572 ;;		 -> ?_printf(2), 
   573 ;;  len             2    0        unsigned int 
   574 ;;  c               1   23[COMRAM] char 
   575 ;;  prec            1   20[COMRAM] char 
   576 ;;  flag            1   19[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  2   12[COMRAM] int 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   586 ;;      Params:         4       0       0       0
   587 ;;      Locals:         7       0       0       0
   588 ;;      Temps:          1       0       0       0
   589 ;;      Totals:        12       0       0       0
   590 ;;Total ram usage:       12 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    1
   593 ;; This function calls:
   594 ;;		___lwdiv
   595 ;;		___lwmod
   596 ;;		_putch
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603  000366                     __ptext1:
   604                           	opt stack 0
   605  000366                     _printf:
   606                           	opt stack 29
   607                           
   608                           ;doprnt.c: 466: va_list ap;
   609                           ;doprnt.c: 499: signed char c;
   610                           ;doprnt.c: 506: signed char prec;
   611                           ;doprnt.c: 508: unsigned char flag;
   612                           ;doprnt.c: 523: union {
   613                           ;doprnt.c: 524: unsigned long vd;
   614                           ;doprnt.c: 525: double integ;
   615                           ;doprnt.c: 526: } tmpval;
   616                           ;doprnt.c: 528: unsigned int val;
   617                           ;doprnt.c: 529: unsigned len;
   618                           ;doprnt.c: 530: const char * cp;
   619                           ;doprnt.c: 533: *ap = __va_start();
   620                           
   621                           ;incstack = 0
   622  000366  0E32               	movlw	low (?_printf+2)
   623  000368  6E35               	movwf	printf@ap,c
   624  00036A  0E00               	movlw	high (?_printf+2)
   625  00036C  6E36               	movwf	printf@ap+1,c
   626                           
   627                           ;doprnt.c: 536: while(c = *f++) {
   628  00036E  D07D               	goto	l1233
   629  000370                     l1187:
   630                           
   631                           ;doprnt.c: 538: if(c != '%')
   632  000370  0E25               	movlw	37
   633  000372  183B               	xorwf	printf@c,w,c
   634  000374  B4D8               	btfsc	status,2,c
   635  000376  D004               	goto	l1191
   636                           
   637                           ;doprnt.c: 540: {
   638                           ;doprnt.c: 541: (putch(c) );
   639  000378  503B               	movf	printf@c,w,c
   640  00037A  EC79  F003         	call	_putch
   641                           
   642                           ;doprnt.c: 542: continue;
   643  00037E  D075               	goto	l1233
   644  000380                     l1191:
   645                           
   646                           ;doprnt.c: 543: }
   647                           ;doprnt.c: 548: flag = 0;
   648  000380  0E00               	movlw	0
   649  000382  6E37               	movwf	printf@flag,c
   650                           
   651                           ;doprnt.c: 822: }
   652                           
   653                           ;doprnt.c: 813: continue;
   654                           
   655                           ;doprnt.c: 802: default:
   656                           
   657                           ;doprnt.c: 698: case 'i':
   658                           ;doprnt.c: 699: break;
   659                           
   660                           ;doprnt.c: 697: case 'd':
   661                           
   662                           ;doprnt.c: 638: goto alldone;
   663                           
   664                           ;doprnt.c: 637: case 0:
   665                           
   666                           ;doprnt.c: 635: switch(c = *f++) {
   667  000384  C030  FFF6         	movff	printf@f,tblptrl
   668  000388  C031  FFF7         	movff	printf@f+1,tblptrh
   669  00038C  4A30               	infsnz	printf@f,f,c
   670  00038E  2A31               	incf	printf@f+1,f,c
   671  000390                     	if	0	;tblptru may be non-zero
   672  000390                     	endif
   673  000390                     	if	0	;tblptru may be non-zero
   674  000390                     	endif
   675  000390  0008               	tblrd		*
   676  000392  CFF5 F03B          	movff	tablat,printf@c
   677  000396  503B               	movf	printf@c,w,c
   678                           
   679                           ; Switch size 1, requested type "space"
   680                           ; Number of cases is 3, Range of values is 0 to 105
   681                           ; switch strategies available:
   682                           ; Name         Instructions Cycles
   683                           ; simple_byte           10     6 (average)
   684                           ;	Chosen strategy is simple_byte
   685  000398  0A00               	xorlw	0	; case 0
   686  00039A  B4D8               	btfsc	status,2,c
   687  00039C  0012               	return	
   688  00039E  0A64               	xorlw	100	; case 100
   689  0003A0  B4D8               	btfsc	status,2,c
   690  0003A2  D003               	goto	l1197
   691  0003A4  0A0D               	xorlw	13	; case 105
   692  0003A6  A4D8               	btfss	status,2,c
   693  0003A8  D060               	goto	l1233
   694  0003AA                     l1197:
   695                           
   696                           ;doprnt.c: 1253: {
   697                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   698  0003AA  C035  FFD9         	movff	printf@ap,fsr2l
   699  0003AE  C036  FFDA         	movff	printf@ap+1,fsr2h
   700  0003B2  CFDE F039          	movff	postinc2,printf@val
   701  0003B6  CFDD F03A          	movff	postdec2,printf@val+1
   702  0003BA  0E02               	movlw	2
   703  0003BC  2635               	addwf	printf@ap,f,c
   704  0003BE  0E00               	movlw	0
   705  0003C0  2236               	addwfc	printf@ap+1,f,c
   706                           
   707                           ;doprnt.c: 1261: if((int)val < 0) {
   708  0003C2  AE3A               	btfss	printf@val+1,7,c
   709  0003C4  D006               	goto	l1207
   710                           
   711                           ;doprnt.c: 1262: flag |= 0x03;
   712  0003C6  0E03               	movlw	3
   713  0003C8  1237               	iorwf	printf@flag,f,c
   714                           
   715                           ;doprnt.c: 1263: val = -val;
   716  0003CA  6C39               	negf	printf@val,c
   717  0003CC  1E3A               	comf	printf@val+1,f,c
   718  0003CE  B0D8               	btfsc	status,0,c
   719  0003D0  2A3A               	incf	printf@val+1,f,c
   720  0003D2                     l1207:
   721                           
   722                           ;doprnt.c: 1264: }
   723                           ;doprnt.c: 1266: }
   724                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   725  0003D2  0E01               	movlw	1
   726  0003D4  6E3B               	movwf	printf@c,c
   727  0003D6                     l1209:
   728  0003D6  0E05               	movlw	5
   729  0003D8  183B               	xorwf	printf@c,w,c
   730  0003DA  B4D8               	btfsc	status,2,c
   731  0003DC  D012               	goto	l1221
   732                           
   733                           ;doprnt.c: 1306: if(val < dpowers[c])
   734  0003DE  503B               	movf	printf@c,w,c
   735  0003E0  0D02               	mullw	2
   736  0003E2  0E01               	movlw	low _dpowers
   737  0003E4  24F3               	addwf	prodl,w,c
   738  0003E6  6EF6               	movwf	tblptrl,c
   739  0003E8  0E03               	movlw	high _dpowers
   740  0003EA  20F4               	addwfc	prodh,w,c
   741  0003EC  6EF7               	movwf	tblptrh,c
   742  0003EE                     	if	0	;There are less than 3 active tblptr bytes
   743  0003EE                     	endif
   744  0003EE  0009               	tblrd		*+
   745  0003F0  50F5               	movf	tablat,w,c
   746  0003F2  5C39               	subwf	printf@val,w,c
   747  0003F4  0009               	tblrd		*+
   748  0003F6  50F5               	movf	tablat,w,c
   749  0003F8  583A               	subwfb	printf@val+1,w,c
   750  0003FA  A0D8               	btfss	status,0,c
   751  0003FC  D002               	goto	l1221
   752                           
   753                           ;doprnt.c: 1307: break;
   754  0003FE  2A3B               	incf	printf@c,f,c
   755  000400  D7EA               	goto	l1209
   756  000402                     l1221:
   757                           
   758                           ;doprnt.c: 1422: {
   759                           ;doprnt.c: 1438: if(flag & 0x03)
   760  000402  C037  F034         	movff	printf@flag,??_printf
   761  000406  0E03               	movlw	3
   762  000408  1634               	andwf	??_printf,f,c
   763  00040A  B4D8               	btfsc	status,2,c
   764  00040C  D003               	goto	l1225
   765                           
   766                           ;doprnt.c: 1439: (putch('-') );
   767  00040E  0E2D               	movlw	45
   768  000410  EC79  F003         	call	_putch
   769  000414                     l1225:
   770                           
   771                           ;doprnt.c: 1469: }
   772                           ;doprnt.c: 1472: prec = c;
   773  000414  C03B  F038         	movff	printf@c,printf@prec
   774                           
   775                           ;doprnt.c: 1474: while(prec--) {
   776  000418  D024               	goto	l1231
   777  00041A                     l1227:
   778                           
   779                           ;doprnt.c: 1478: {
   780                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   781  00041A  5038               	movf	printf@prec,w,c
   782  00041C  0D02               	mullw	2
   783  00041E  0E01               	movlw	low _dpowers
   784  000420  24F3               	addwf	prodl,w,c
   785  000422  6EF6               	movwf	tblptrl,c
   786  000424  0E03               	movlw	high _dpowers
   787  000426  20F4               	addwfc	prodh,w,c
   788  000428  6EF7               	movwf	tblptrh,c
   789  00042A                     	if	0	;There are less than 3 active tblptr bytes
   790  00042A                     	endif
   791  00042A  0009               	tblrd		*+
   792  00042C  CFF5 F026          	movff	tablat,___lwdiv@divisor
   793  000430  000A               	tblrd		*-
   794  000432  CFF5 F027          	movff	tablat,___lwdiv@divisor+1
   795  000436  C039  F024         	movff	printf@val,___lwdiv@dividend
   796  00043A  C03A  F025         	movff	printf@val+1,___lwdiv@dividend+1
   797  00043E  ECCF  F002         	call	___lwdiv	;wreg free
   798  000442  C024  F02B         	movff	?___lwdiv,___lwmod@dividend
   799  000446  C025  F02C         	movff	?___lwdiv+1,___lwmod@dividend+1
   800  00044A  0E00               	movlw	0
   801  00044C  6E2E               	movwf	___lwmod@divisor+1,c
   802  00044E  0E0A               	movlw	10
   803  000450  6E2D               	movwf	___lwmod@divisor,c
   804  000452  EC20  F003         	call	___lwmod	;wreg free
   805  000456  502B               	movf	?___lwmod,w,c
   806  000458  0F30               	addlw	48
   807  00045A  6E3B               	movwf	printf@c,c
   808                           
   809                           ;doprnt.c: 1523: }
   810                           ;doprnt.c: 1524: (putch(c) );
   811  00045C  503B               	movf	printf@c,w,c
   812  00045E  EC79  F003         	call	_putch
   813  000462                     l1231:
   814  000462  0638               	decf	printf@prec,f,c
   815  000464  2838               	incf	printf@prec,w,c
   816  000466  A4D8               	btfss	status,2,c
   817  000468  D7D8               	goto	l1227
   818  00046A                     l1233:
   819  00046A  C030  FFF6         	movff	printf@f,tblptrl
   820  00046E  C031  FFF7         	movff	printf@f+1,tblptrh
   821  000472  4A30               	infsnz	printf@f,f,c
   822  000474  2A31               	incf	printf@f+1,f,c
   823  000476                     	if	0	;tblptru may be non-zero
   824  000476                     	endif
   825  000476                     	if	0	;tblptru may be non-zero
   826  000476                     	endif
   827  000476  0008               	tblrd		*
   828  000478  CFF5 F03B          	movff	tablat,printf@c
   829  00047C  503B               	movf	printf@c,w,c
   830  00047E  B4D8               	btfsc	status,2,c
   831  000480  0012               	return	
   832  000482  D776               	goto	l1187
   833  000484                     __end_of_printf:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           prodh	equ	0xFF4
   840                           prodl	equ	0xFF3
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           postinc2	equ	0xFDE
   844                           postdec2	equ	0xFDD
   845                           fsr2h	equ	0xFDA
   846                           fsr2l	equ	0xFD9
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _putch *****************
   850 ;; Defined at:
   851 ;;		line 264 in file "main_rxf.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  byte            1    wreg     unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  byte            1    0[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   865 ;;      Params:         0       0       0       0
   866 ;;      Locals:         1       0       0       0
   867 ;;      Temps:          0       0       0       0
   868 ;;      Totals:         1       0       0       0
   869 ;;Total ram usage:        1 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;;		_printf
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text2
   880  0006F2                     __ptext2:
   881                           	opt stack 0
   882  0006F2                     _putch:
   883                           	opt stack 30
   884                           
   885                           ;incstack = 0
   886                           ;putch@byte stored from wreg
   887  0006F2  6E24               	movwf	putch@byte,c
   888                           
   889                           ;main_rxf.c: 265: TXREG = byte;
   890  0006F4  C024  FFAD         	movff	putch@byte,4013	;volatile
   891  0006F8                     l303:
   892  0006F8  B2AC               	btfsc	4012,1,c	;volatile
   893  0006FA  0012               	return	
   894  0006FC  D7FD               	goto	l303
   895  0006FE                     __end_of_putch:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           prodh	equ	0xFF4
   902                           prodl	equ	0xFF3
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postinc2	equ	0xFDE
   906                           postdec2	equ	0xFDD
   907                           fsr2h	equ	0xFDA
   908                           fsr2l	equ	0xFD9
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function ___lwmod *****************
   912 ;; Defined at:
   913 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  dividend        2    7[COMRAM] unsigned int 
   916 ;;  divisor         2    9[COMRAM] unsigned int 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  counter         1   11[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2    7[COMRAM] unsigned int 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   928 ;;      Params:         4       0       0       0
   929 ;;      Locals:         1       0       0       0
   930 ;;      Temps:          0       0       0       0
   931 ;;      Totals:         5       0       0       0
   932 ;;Total ram usage:        5 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_printf
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text3
   942  000640                     __ptext3:
   943                           	opt stack 0
   944  000640                     ___lwmod:
   945                           	opt stack 29
   946                           
   947                           ;incstack = 0
   948  000640  502D               	movf	___lwmod@divisor,w,c
   949  000642  102E               	iorwf	___lwmod@divisor+1,w,c
   950  000644  B4D8               	btfsc	status,2,c
   951  000646  D018               	goto	l758
   952  000648  0E01               	movlw	1
   953  00064A  6E2F               	movwf	___lwmod@counter,c
   954  00064C  D004               	goto	l1175
   955  00064E                     l1173:
   956  00064E  90D8               	bcf	status,0,c
   957  000650  362D               	rlcf	___lwmod@divisor,f,c
   958  000652  362E               	rlcf	___lwmod@divisor+1,f,c
   959  000654  2A2F               	incf	___lwmod@counter,f,c
   960  000656                     l1175:
   961  000656  AE2E               	btfss	___lwmod@divisor+1,7,c
   962  000658  D7FA               	goto	l1173
   963  00065A                     l1177:
   964  00065A  502D               	movf	___lwmod@divisor,w,c
   965  00065C  5C2B               	subwf	___lwmod@dividend,w,c
   966  00065E  502E               	movf	___lwmod@divisor+1,w,c
   967  000660  582C               	subwfb	___lwmod@dividend+1,w,c
   968  000662  A0D8               	btfss	status,0,c
   969  000664  D004               	goto	l1181
   970  000666  502D               	movf	___lwmod@divisor,w,c
   971  000668  5E2B               	subwf	___lwmod@dividend,f,c
   972  00066A  502E               	movf	___lwmod@divisor+1,w,c
   973  00066C  5A2C               	subwfb	___lwmod@dividend+1,f,c
   974  00066E                     l1181:
   975  00066E  90D8               	bcf	status,0,c
   976  000670  322E               	rrcf	___lwmod@divisor+1,f,c
   977  000672  322D               	rrcf	___lwmod@divisor,f,c
   978  000674  2E2F               	decfsz	___lwmod@counter,f,c
   979  000676  D7F1               	goto	l1177
   980  000678                     l758:
   981  000678  C02B  F02B         	movff	___lwmod@dividend,?___lwmod
   982  00067C  C02C  F02C         	movff	___lwmod@dividend+1,?___lwmod+1
   983  000680  0012               	return		;funcret
   984  000682                     __end_of___lwmod:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           prodh	equ	0xFF4
   991                           prodl	equ	0xFF3
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postinc2	equ	0xFDE
   995                           postdec2	equ	0xFDD
   996                           fsr2h	equ	0xFDA
   997                           fsr2l	equ	0xFD9
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function ___lwdiv *****************
  1001 ;; Defined at:
  1002 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  dividend        2    0[COMRAM] unsigned int 
  1005 ;;  divisor         2    2[COMRAM] unsigned int 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  quotient        2    4[COMRAM] unsigned int 
  1008 ;;  counter         1    6[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  2    0[COMRAM] unsigned int 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1018 ;;      Params:         4       0       0       0
  1019 ;;      Locals:         3       0       0       0
  1020 ;;      Temps:          0       0       0       0
  1021 ;;      Totals:         7       0       0       0
  1022 ;;Total ram usage:        7 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_printf
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text4
  1032  00059E                     __ptext4:
  1033                           	opt stack 0
  1034  00059E                     ___lwdiv:
  1035                           	opt stack 29
  1036                           
  1037                           ;incstack = 0
  1038  00059E  0E00               	movlw	0
  1039  0005A0  6E29               	movwf	___lwdiv@quotient+1,c
  1040  0005A2  0E00               	movlw	0
  1041  0005A4  6E28               	movwf	___lwdiv@quotient,c
  1042  0005A6  5026               	movf	___lwdiv@divisor,w,c
  1043  0005A8  1027               	iorwf	___lwdiv@divisor+1,w,c
  1044  0005AA  B4D8               	btfsc	status,2,c
  1045  0005AC  D01C               	goto	l748
  1046  0005AE  0E01               	movlw	1
  1047  0005B0  6E2A               	movwf	___lwdiv@counter,c
  1048  0005B2  D004               	goto	l1155
  1049  0005B4                     l1153:
  1050  0005B4  90D8               	bcf	status,0,c
  1051  0005B6  3626               	rlcf	___lwdiv@divisor,f,c
  1052  0005B8  3627               	rlcf	___lwdiv@divisor+1,f,c
  1053  0005BA  2A2A               	incf	___lwdiv@counter,f,c
  1054  0005BC                     l1155:
  1055  0005BC  AE27               	btfss	___lwdiv@divisor+1,7,c
  1056  0005BE  D7FA               	goto	l1153
  1057  0005C0                     l1157:
  1058  0005C0  90D8               	bcf	status,0,c
  1059  0005C2  3628               	rlcf	___lwdiv@quotient,f,c
  1060  0005C4  3629               	rlcf	___lwdiv@quotient+1,f,c
  1061  0005C6  5026               	movf	___lwdiv@divisor,w,c
  1062  0005C8  5C24               	subwf	___lwdiv@dividend,w,c
  1063  0005CA  5027               	movf	___lwdiv@divisor+1,w,c
  1064  0005CC  5825               	subwfb	___lwdiv@dividend+1,w,c
  1065  0005CE  A0D8               	btfss	status,0,c
  1066  0005D0  D005               	goto	l1165
  1067  0005D2  5026               	movf	___lwdiv@divisor,w,c
  1068  0005D4  5E24               	subwf	___lwdiv@dividend,f,c
  1069  0005D6  5027               	movf	___lwdiv@divisor+1,w,c
  1070  0005D8  5A25               	subwfb	___lwdiv@dividend+1,f,c
  1071  0005DA  8028               	bsf	___lwdiv@quotient,0,c
  1072  0005DC                     l1165:
  1073  0005DC  90D8               	bcf	status,0,c
  1074  0005DE  3227               	rrcf	___lwdiv@divisor+1,f,c
  1075  0005E0  3226               	rrcf	___lwdiv@divisor,f,c
  1076  0005E2  2E2A               	decfsz	___lwdiv@counter,f,c
  1077  0005E4  D7ED               	goto	l1157
  1078  0005E6                     l748:
  1079  0005E6  C028  F024         	movff	___lwdiv@quotient,?___lwdiv
  1080  0005EA  C029  F025         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1081  0005EE  0012               	return		;funcret
  1082  0005F0                     __end_of___lwdiv:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           prodh	equ	0xFF4
  1089                           prodl	equ	0xFF3
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postinc2	equ	0xFDE
  1093                           postdec2	equ	0xFDD
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _InitDevice *****************
  1099 ;; Defined at:
  1100 ;;		line 122 in file "main_rxf.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;		None               void
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1114 ;;      Params:         0       0       0       0
  1115 ;;      Locals:         0       0       0       0
  1116 ;;      Temps:          0       0       0       0
  1117 ;;      Totals:         0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    1
  1121 ;; This function calls:
  1122 ;;		_InitECAN
  1123 ;;		_InitUART
  1124 ;;		_adc_init
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text5
  1131  0005F0                     __ptext5:
  1132                           	opt stack 0
  1133  0005F0                     _InitDevice:
  1134                           	opt stack 29
  1135                           
  1136                           ;main_rxf.c: 125: OSCCONbits.IRCF = 7;
  1137                           
  1138                           ;incstack = 0
  1139  0005F0  88D3               	bsf	4051,4,c	;volatile
  1140  0005F2  8AD3               	bsf	4051,5,c	;volatile
  1141  0005F4  8CD3               	bsf	4051,6,c	;volatile
  1142                           
  1143                           ;main_rxf.c: 126: OSCTUNEbits.PLLEN = 0;
  1144  0005F6  9C9B               	bcf	3995,6,c	;volatile
  1145                           
  1146                           ;main_rxf.c: 128: ADCON1bits.PCFG = 0xF;
  1147  0005F8  80C1               	bsf	4033,0,c	;volatile
  1148  0005FA  82C1               	bsf	4033,1,c	;volatile
  1149  0005FC  84C1               	bsf	4033,2,c	;volatile
  1150  0005FE  86C1               	bsf	4033,3,c	;volatile
  1151                           
  1152                           ;main_rxf.c: 130: TRISAbits.TRISA0 = 0;
  1153  000600  9092               	bcf	3986,0,c	;volatile
  1154                           
  1155                           ;main_rxf.c: 132: TRISBbits.TRISB2 = 0;
  1156  000602  9493               	bcf	3987,2,c	;volatile
  1157                           
  1158                           ;main_rxf.c: 133: TRISBbits.TRISB3 = 1;
  1159  000604  8693               	bsf	3987,3,c	;volatile
  1160                           
  1161                           ;main_rxf.c: 136: InitUART();
  1162  000606  EC68  F003         	call	_InitUART	;wreg free
  1163                           
  1164                           ;main_rxf.c: 137: adc_init();
  1165  00060A  EC72  F003         	call	_adc_init	;wreg free
  1166                           
  1167                           ;main_rxf.c: 140: TXB0CONbits.TXPRI1 = TXB0CONbits.TXPRI0 = 1;
  1168  00060E  010F               	movlb	15	; () banked
  1169  000610  8140               	bsf	64,0,b	;volatile
  1170  000612  010F               	movlb	15	; () banked
  1171  000614  8340               	bsf	64,1,b	;volatile
  1172                           
  1173                           ; BSR set to: 15
  1174                           ;main_rxf.c: 141: TXB1CONbits.TXPRI1 = TXB1CONbits.TXPRI0 = 0;
  1175  000616  010F               	movlb	15	; () banked
  1176  000618  9130               	bcf	48,0,b	;volatile
  1177  00061A  010F               	movlb	15	; () banked
  1178  00061C  9330               	bcf	48,1,b	;volatile
  1179                           
  1180                           ; BSR set to: 15
  1181                           ;main_rxf.c: 142: TXB2CONbits.TXPRI1 = TXB2CONbits.TXPRI0 = 0;
  1182  00061E  010F               	movlb	15	; () banked
  1183  000620  9120               	bcf	32,0,b	;volatile
  1184  000622  010F               	movlb	15	; () banked
  1185  000624  9320               	bcf	32,1,b	;volatile
  1186                           
  1187                           ; BSR set to: 15
  1188                           ;main_rxf.c: 143: CIOCON = 0x20;
  1189  000626  0E20               	movlw	32
  1190  000628  6E73               	movwf	3955,c	;volatile
  1191                           
  1192                           ; BSR set to: 15
  1193                           ;main_rxf.c: 146: InitECAN();
  1194  00062A  EC42  F002         	call	_InitECAN	;wreg free
  1195                           
  1196                           ;main_rxf.c: 148: PIE3 = PIE3 | 0x05;
  1197  00062E  50A3               	movf	4003,w,c	;volatile
  1198  000630  0905               	iorlw	5
  1199  000632  6EA3               	movwf	4003,c	;volatile
  1200                           
  1201                           ;main_rxf.c: 150: PIR3 = 0;
  1202  000634  0E00               	movlw	0
  1203  000636  6EA4               	movwf	4004,c	;volatile
  1204                           
  1205                           ;main_rxf.c: 151: IPR3 = IPR3 | 0X05;
  1206  000638  50A5               	movf	4005,w,c	;volatile
  1207  00063A  0905               	iorlw	5
  1208  00063C  6EA5               	movwf	4005,c	;volatile
  1209  00063E  0012               	return		;funcret
  1210  000640                     __end_of_InitDevice:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           prodh	equ	0xFF4
  1217                           prodl	equ	0xFF3
  1218                           postinc0	equ	0xFEE
  1219                           wreg	equ	0xFE8
  1220                           postinc2	equ	0xFDE
  1221                           postdec2	equ	0xFDD
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _adc_init *****************
  1227 ;; Defined at:
  1228 ;;		line 269 in file "main_rxf.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;		None               void
  1235 ;; Registers used:
  1236 ;;		wreg, status,2
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1242 ;;      Params:         0       0       0       0
  1243 ;;      Locals:         0       0       0       0
  1244 ;;      Temps:          0       0       0       0
  1245 ;;      Totals:         0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_InitDevice
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text6
  1256  0006E4                     __ptext6:
  1257                           	opt stack 0
  1258  0006E4                     _adc_init:
  1259                           	opt stack 29
  1260                           
  1261                           ;main_rxf.c: 270: ADCON0 = 0x001;
  1262                           
  1263                           ;incstack = 0
  1264  0006E4  0E01               	movlw	1
  1265  0006E6  6EC2               	movwf	4034,c	;volatile
  1266                           
  1267                           ;main_rxf.c: 271: ADCON1 = 0x0E;
  1268  0006E8  0E0E               	movlw	14
  1269  0006EA  6EC1               	movwf	4033,c	;volatile
  1270                           
  1271                           ;main_rxf.c: 272: ADCON2 = 0xB3;
  1272  0006EC  0EB3               	movlw	179
  1273  0006EE  6EC0               	movwf	4032,c	;volatile
  1274  0006F0  0012               	return		;funcret
  1275  0006F2                     __end_of_adc_init:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           postinc2	equ	0xFDE
  1286                           postdec2	equ	0xFDD
  1287                           fsr2h	equ	0xFDA
  1288                           fsr2l	equ	0xFD9
  1289                           status	equ	0xFD8
  1290                           
  1291 ;; *************** function _InitUART *****************
  1292 ;; Defined at:
  1293 ;;		line 246 in file "main_rxf.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;		None               void
  1300 ;; Registers used:
  1301 ;;		wreg, status,2
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1307 ;;      Params:         0       0       0       0
  1308 ;;      Locals:         0       0       0       0
  1309 ;;      Temps:          0       0       0       0
  1310 ;;      Totals:         0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_InitDevice
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text7
  1321  0006D0                     __ptext7:
  1322                           	opt stack 0
  1323  0006D0                     _InitUART:
  1324                           	opt stack 29
  1325                           
  1326                           ;main_rxf.c: 248: TRISCbits.TRISC6 = 0;
  1327                           
  1328                           ;incstack = 0
  1329  0006D0  9C94               	bcf	3988,6,c	;volatile
  1330                           
  1331                           ;main_rxf.c: 250: BAUDCONbits.BRG16 = 0;
  1332  0006D2  96B8               	bcf	4024,3,c	;volatile
  1333                           
  1334                           ;main_rxf.c: 252: SPBRG = 12;
  1335  0006D4  0E0C               	movlw	12
  1336  0006D6  6EAF               	movwf	4015,c	;volatile
  1337                           
  1338                           ;main_rxf.c: 255: TXSTAbits.TX9 = 0;
  1339  0006D8  9CAC               	bcf	4012,6,c	;volatile
  1340                           
  1341                           ;main_rxf.c: 256: TXSTAbits.TXEN = 1;
  1342  0006DA  8AAC               	bsf	4012,5,c	;volatile
  1343                           
  1344                           ;main_rxf.c: 257: TXSTAbits.SYNC = 0;
  1345  0006DC  98AC               	bcf	4012,4,c	;volatile
  1346                           
  1347                           ;main_rxf.c: 258: TXSTAbits.BRGH = 0;
  1348  0006DE  94AC               	bcf	4012,2,c	;volatile
  1349                           
  1350                           ;main_rxf.c: 260: RCSTAbits.SPEN = 1;
  1351  0006E0  8EAB               	bsf	4011,7,c	;volatile
  1352  0006E2  0012               	return		;funcret
  1353  0006E4                     __end_of_InitUART:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           postinc0	equ	0xFEE
  1362                           wreg	equ	0xFE8
  1363                           postinc2	equ	0xFDE
  1364                           postdec2	equ	0xFDD
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function _InitECAN *****************
  1370 ;; Defined at:
  1371 ;;		line 60 in file "ECAN_P18_rxf.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;		None               void
  1378 ;; Registers used:
  1379 ;;		wreg, status,2
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1385 ;;      Params:         0       0       0       0
  1386 ;;      Locals:         0       0       0       0
  1387 ;;      Temps:          0       0       0       0
  1388 ;;      Totals:         0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_InitDevice
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text8
  1399  000484                     __ptext8:
  1400                           	opt stack 0
  1401  000484                     _InitECAN:
  1402                           	opt stack 29
  1403                           
  1404                           ;ECAN_P18_rxf.c: 65: CANCON = 0x80;
  1405                           
  1406                           ;incstack = 0
  1407  000484  0E80               	movlw	128
  1408  000486  6E6F               	movwf	3951,c	;volatile
  1409  000488                     l97:
  1410  000488  B06E               	btfsc	3950,0,c	;volatile
  1411  00048A  D7FE               	goto	l97
  1412                           
  1413                           ;ECAN_P18_rxf.c: 73: ECANCON = 0x00;
  1414  00048C  0E00               	movlw	0
  1415  00048E  6E77               	movwf	3959,c	;volatile
  1416                           
  1417                           ;ECAN_P18_rxf.c: 79: CIOCONbits.ENDRHI = 1;
  1418  000490  8A73               	bsf	3955,5,c	;volatile
  1419                           
  1420                           ;ECAN_P18_rxf.c: 82: CIOCONbits.CANCAP = 0;
  1421  000492  9873               	bcf	3955,4,c	;volatile
  1422                           
  1423                           ;ECAN_P18_rxf.c: 91: BRGCON1 = 0xC0;
  1424  000494  0EC0               	movlw	192
  1425  000496  6E70               	movwf	3952,c	;volatile
  1426                           
  1427                           ;ECAN_P18_rxf.c: 93: BRGCON2 = 0x80;
  1428  000498  0E80               	movlw	128
  1429  00049A  6E71               	movwf	3953,c	;volatile
  1430                           
  1431                           ;ECAN_P18_rxf.c: 95: BRGCON3 = 0x05;
  1432  00049C  0E05               	movlw	5
  1433  00049E  6E72               	movwf	3954,c	;volatile
  1434                           
  1435                           ;ECAN_P18_rxf.c: 108: RXM0EIDH = 0x00;
  1436  0004A0  0E00               	movlw	0
  1437  0004A2  010F               	movlb	15	; () banked
  1438  0004A4  6F1A               	movwf	26,b	;volatile
  1439                           
  1440                           ;ECAN_P18_rxf.c: 109: RXM0EIDL = 0x00;
  1441  0004A6  0E00               	movlw	0
  1442  0004A8  010F               	movlb	15	; () banked
  1443  0004AA  6F1B               	movwf	27,b	;volatile
  1444                           
  1445                           ; BSR set to: 15
  1446                           ;ECAN_P18_rxf.c: 111: RXM0SIDH = 0xFF;
  1447  0004AC  010F               	movlb	15	; () banked
  1448  0004AE  6918               	setf	24,b	;volatile
  1449                           
  1450                           ;ECAN_P18_rxf.c: 112: RXM0SIDL = 0xE0;
  1451  0004B0  0EE0               	movlw	224
  1452  0004B2  010F               	movlb	15	; () banked
  1453  0004B4  6F19               	movwf	25,b	;volatile
  1454                           
  1455                           ;ECAN_P18_rxf.c: 117: RXM1EIDH = 0x00;
  1456  0004B6  0E00               	movlw	0
  1457  0004B8  010F               	movlb	15	; () banked
  1458  0004BA  6F1E               	movwf	30,b	;volatile
  1459                           
  1460                           ;ECAN_P18_rxf.c: 118: RXM1EIDL = 0x00;
  1461  0004BC  0E00               	movlw	0
  1462  0004BE  010F               	movlb	15	; () banked
  1463  0004C0  6F1F               	movwf	31,b	;volatile
  1464                           
  1465                           ; BSR set to: 15
  1466                           ;ECAN_P18_rxf.c: 120: RXM1SIDH = 0xFF;
  1467  0004C2  010F               	movlb	15	; () banked
  1468  0004C4  691C               	setf	28,b	;volatile
  1469                           
  1470                           ;ECAN_P18_rxf.c: 121: RXM1SIDL = 0xE0;
  1471  0004C6  0EE0               	movlw	224
  1472  0004C8  010F               	movlb	15	; () banked
  1473  0004CA  6F1D               	movwf	29,b	;volatile
  1474                           
  1475                           ;ECAN_P18_rxf.c: 125: RXFCON0 = 0x0;
  1476  0004CC  0E00               	movlw	0
  1477  0004CE  010D               	movlb	13	; () banked
  1478  0004D0  6FD4               	movwf	212,b	;volatile
  1479                           
  1480                           ;ECAN_P18_rxf.c: 126: RXFCON1 = 0x00;
  1481  0004D2  0E00               	movlw	0
  1482  0004D4  010D               	movlb	13	; () banked
  1483  0004D6  6FD5               	movwf	213,b	;volatile
  1484                           
  1485                           ;ECAN_P18_rxf.c: 132: RXF0EIDH = 0x00;
  1486  0004D8  0E00               	movlw	0
  1487  0004DA  010F               	movlb	15	; () banked
  1488  0004DC  6F02               	movwf	2,b	;volatile
  1489                           
  1490                           ;ECAN_P18_rxf.c: 133: RXF0EIDL = 0x00;
  1491  0004DE  0E00               	movlw	0
  1492  0004E0  010F               	movlb	15	; () banked
  1493  0004E2  6F03               	movwf	3,b	;volatile
  1494                           
  1495                           ;ECAN_P18_rxf.c: 134: RXF0SIDH = 0x0A;
  1496  0004E4  0E0A               	movlw	10
  1497  0004E6  010F               	movlb	15	; () banked
  1498  0004E8  6F00               	movwf	0,b	;volatile
  1499                           
  1500                           ;ECAN_P18_rxf.c: 135: RXF0SIDL = 0xA0;
  1501  0004EA  0EA0               	movlw	160
  1502  0004EC  010F               	movlb	15	; () banked
  1503  0004EE  6F01               	movwf	1,b	;volatile
  1504                           
  1505                           ;ECAN_P18_rxf.c: 137: RXF1SIDH = 0x00;
  1506  0004F0  0E00               	movlw	0
  1507  0004F2  010F               	movlb	15	; () banked
  1508  0004F4  6F04               	movwf	4,b	;volatile
  1509                           
  1510                           ;ECAN_P18_rxf.c: 138: RXF1SIDL = 0x00;
  1511  0004F6  0E00               	movlw	0
  1512  0004F8  010F               	movlb	15	; () banked
  1513  0004FA  6F05               	movwf	5,b	;volatile
  1514                           
  1515                           ; BSR set to: 15
  1516                           ;ECAN_P18_rxf.c: 142: RXF2SIDH = 0xFF;
  1517  0004FC  010F               	movlb	15	; () banked
  1518  0004FE  6908               	setf	8,b	;volatile
  1519                           
  1520                           ;ECAN_P18_rxf.c: 143: RXF2SIDL = 0;
  1521  000500  0E00               	movlw	0
  1522  000502  010F               	movlb	15	; () banked
  1523  000504  6F09               	movwf	9,b	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;ECAN_P18_rxf.c: 144: RXF3SIDH = 0XFF;
  1527  000506  010F               	movlb	15	; () banked
  1528  000508  690C               	setf	12,b	;volatile
  1529                           
  1530                           ;ECAN_P18_rxf.c: 145: RXF3SIDL = 0;
  1531  00050A  0E00               	movlw	0
  1532  00050C  010F               	movlb	15	; () banked
  1533  00050E  6F0D               	movwf	13,b	;volatile
  1534                           
  1535                           ; BSR set to: 15
  1536                           ;ECAN_P18_rxf.c: 146: RXF4SIDH = 0XFF;
  1537  000510  010F               	movlb	15	; () banked
  1538  000512  6910               	setf	16,b	;volatile
  1539                           
  1540                           ;ECAN_P18_rxf.c: 147: RXF4SIDL = 0;
  1541  000514  0E00               	movlw	0
  1542  000516  010F               	movlb	15	; () banked
  1543  000518  6F11               	movwf	17,b	;volatile
  1544                           
  1545                           ; BSR set to: 15
  1546                           ;ECAN_P18_rxf.c: 148: RXF5SIDH = 0XFF;
  1547  00051A  010F               	movlb	15	; () banked
  1548  00051C  6914               	setf	20,b	;volatile
  1549                           
  1550                           ;ECAN_P18_rxf.c: 149: RXF5SIDL = 0;
  1551  00051E  0E00               	movlw	0
  1552  000520  010F               	movlb	15	; () banked
  1553  000522  6F15               	movwf	21,b	;volatile
  1554                           
  1555                           ;ECAN_P18_rxf.c: 155: CANCON = 0x00;
  1556  000524  0E00               	movlw	0
  1557  000526  6E6F               	movwf	3951,c	;volatile
  1558  000528                     l100:
  1559  000528  B06E               	btfsc	3950,0,c	;volatile
  1560  00052A  D7FE               	goto	l100
  1561                           
  1562                           ;ECAN_P18_rxf.c: 159: RXB0CON = 0x00;
  1563  00052C  0E00               	movlw	0
  1564  00052E  6E60               	movwf	3936,c	;volatile
  1565                           
  1566                           ;ECAN_P18_rxf.c: 160: RXB1CON = 0x00;
  1567  000530  0E00               	movlw	0
  1568  000532  010F               	movlb	15	; () banked
  1569  000534  6F50               	movwf	80,b	;volatile
  1570                           
  1571                           ; BSR set to: 15
  1572                           ;ECAN_P18_rxf.c: 162: RXB0CONbits.RXM0 = 1;
  1573  000536  8A60               	bsf	3936,5,c	;volatile
  1574                           
  1575                           ; BSR set to: 15
  1576  000538  0012               	return		;funcret
  1577  00053A                     __end_of_InitECAN:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postinc2	equ	0xFDE
  1588                           postdec2	equ	0xFDD
  1589                           fsr2h	equ	0xFDA
  1590                           fsr2l	equ	0xFD9
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _ECAN_Receive *****************
  1594 ;; Defined at:
  1595 ;;		line 192 in file "main_rxf.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      unsigned char 
  1602 ;; Registers used:
  1603 ;;		wreg
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1609 ;;      Params:         0       0       0       0
  1610 ;;      Locals:         0       0       0       0
  1611 ;;      Temps:          0       0       0       0
  1612 ;;      Totals:         0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text9
  1623  000682                     __ptext9:
  1624                           	opt stack 0
  1625  000682                     _ECAN_Receive:
  1626                           	opt stack 30
  1627                           
  1628                           ;main_rxf.c: 196: temp_EIDH = RXB0EIDH;
  1629                           
  1630                           ; BSR set to: 15
  1631                           ;incstack = 0
  1632  000682  CF63 F01F          	movff	3939,_temp_EIDH	;volatile
  1633                           
  1634                           ;main_rxf.c: 197: temp_EIDL = RXB0EIDL;
  1635  000686  CF64 F020          	movff	3940,_temp_EIDL	;volatile
  1636                           
  1637                           ;main_rxf.c: 198: temp_SIDH = RXB0SIDH;
  1638  00068A  CF61 F021          	movff	3937,_temp_SIDH	;volatile
  1639                           
  1640                           ;main_rxf.c: 199: temp_SIDL = RXB0SIDL;
  1641  00068E  CF62 F022          	movff	3938,_temp_SIDL	;volatile
  1642                           
  1643                           ;main_rxf.c: 200: temp_DLC = RXB0DLC;
  1644  000692  CF65 F01E          	movff	3941,_temp_DLC	;volatile
  1645                           
  1646                           ;main_rxf.c: 201: RecData0 = RXB0D0;
  1647  000696  CF66 F005          	movff	3942,_RecData0	;volatile
  1648                           
  1649                           ;main_rxf.c: 202: RecData1 = RXB0D1;
  1650  00069A  CF67 F006          	movff	3943,_RecData1	;volatile
  1651                           
  1652                           ;main_rxf.c: 203: RecData2 = RXB0D2;
  1653  00069E  CF68 F007          	movff	3944,_RecData2	;volatile
  1654                           
  1655                           ;main_rxf.c: 204: RecData3 = RXB0D3;
  1656  0006A2  CF69 F008          	movff	3945,_RecData3	;volatile
  1657                           
  1658                           ;main_rxf.c: 205: RecData4 = RXB0D4;
  1659  0006A6  CF6A F009          	movff	3946,_RecData4	;volatile
  1660                           
  1661                           ;main_rxf.c: 206: RecData5 = RXB0D5;
  1662  0006AA  CF6B F00A          	movff	3947,_RecData5	;volatile
  1663                           
  1664                           ;main_rxf.c: 207: RecData6 = RXB0D6;
  1665  0006AE  CF6C F00B          	movff	3948,_RecData6	;volatile
  1666                           
  1667                           ;main_rxf.c: 208: RecData7 = RXB0D7;
  1668  0006B2  CF6D F00C          	movff	3949,_RecData7	;volatile
  1669                           
  1670                           ;main_rxf.c: 210: return 1;
  1671  0006B6  0E01               	movlw	1
  1672  0006B8  0012               	return	
  1673  0006BA                     __end_of_ECAN_Receive:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postinc2	equ	0xFDE
  1684                           postdec2	equ	0xFDD
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           prodh	equ	0xFF4
  1693                           prodl	equ	0xFF3
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postinc2	equ	0xFDE
  1697                           postdec2	equ	0xFDD
  1698                           fsr2h	equ	0xFDA
  1699                           fsr2l	equ	0xFD9
  1700                           status	equ	0xFD8
  1701                           
  1702                           	psect	rparam
  1703  0000                     tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           prodh	equ	0xFF4
  1708                           prodl	equ	0xFF3
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           postinc2	equ	0xFDE
  1712                           postdec2	equ	0xFDD
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    10
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      62
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_4(CODE[30]), STR_3(CODE[29]), STR_2(CODE[26]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1272
                                             24 COMRAM     3     3      0
                       _ECAN_Receive
                         _InitDevice
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1234
                                             12 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
                           _InitECAN
                           _InitUART
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitECAN                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECAN_Receive
   _InitDevice
     _InitECAN
     _InitUART
     _adc_init
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      3E       1       65.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E       9        0.0%
DATA                 0      0      3E      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 16:47:36 2016

                     l97 0488              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000              __CFG_LVP$ON 000000                      l100 0528  
                    l303 06F8                      l280 0564                      l748 05E6  
                    l758 0678             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     l1221 0402  
                   l1231 0462                     l1207 03D2                     l1153 05B4  
                   l1225 0414                     l1209 03D6                     l1233 046A  
                   l1155 05BC                     l1227 041A                     l1165 05DC  
                   l1157 05C0                     l1181 066E                     l1173 064E  
                   l1175 0656                     l1191 0380                     l1177 065A  
                   l1187 0370                     l1197 03AA                     STR_1 0360  
                   STR_2 0346                     STR_3 0329                     STR_4 030B  
                   _IPR3 000FA5                     _PIE3 000FA3                     _PIR3 000FA4  
           __CFG_PWRT$ON 000000                     _main 053A                     fsr2h 000FDA  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000010  
                  ?_main 0024          __end_of___lwdiv 05F0          __end_of___lwmod 0682  
                  _SPBRG 000FAF                    _TXREG 000FAD            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_dpowers 030B  
                  _putch 06F2                    main@x 003D           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8               _InitDevice 05F0  
  __size_of_ECAN_Receive 0038           __CFG_MCLRE$OFF 000000          __initialization 06BA  
           __end_of_main 059E         __end_of_InitECAN 053A         __end_of_InitUART 06E4  
                 ??_main 003C            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _CANCON 000F6F  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CIOCON 000F73  
        __CFG_BBSIZ$1024 000000                   ?_putch 0024             _ECAN_Receive 0682  
       __end_of_adc_init 06F2                   _RXB0D0 000F66                   _RXB0D1 000F67  
                 _RXB0D2 000F68                   _RXB0D3 000F69                   _RXB0D4 000F6A  
                 _RXB0D5 000F6B                   _RXB0D6 000F6C                   _RXB0D7 000F6D  
                 _TXB0D0 000F46                   _TXB0D1 000F47                   _TXB0D2 000F48  
                 _TXB0D3 000F49                   _TXB0D4 000F4A                   _TXB0D5 000F4B  
                 _TXB0D6 000F4C                   _TXB0D7 000F4D           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??___lwdiv 0028                ??___lwmod 002F  
                 clear_0 06C0                   _printf 0366               _TransData0 000D  
             _TransData1 000E               _TransData2 000F               _TransData3 0010  
             _TransData4 0011               _TransData5 0012               _TransData6 0013  
             _TransData7 0014               _TransData8 0015             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 06C6          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001              ?_InitDevice 0024           __pcstackCOMRAM 0024  
          __end_of_putch 06FE                  ??_putch 0024                ?_InitECAN 0024  
              ?_InitUART 0024                  _ECANCON 000F77                  _CANSTAT 000F6E  
                ?_printf 0030                ?_adc_init 0024                  _BRGCON1 000F70  
                _BRGCON2 000F71                  _BRGCON3 000F72      __size_of_InitDevice 0050  
                _RXB0DLC 000F65                  _RXB0CON 000F60                  _RXB1CON 000F50  
                _TXB0DLC 000F45                  _RXFCON0 000DD4                  _RXFCON1 000DD5  
             ??_InitECAN 0024               ??_InitUART 0024                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 059E                  ___lwmod 0640  
           __psmallconst 0300                  __pcinit 06BA                  __ramtop 0300  
             ??_adc_init 0024                  __ptext0 053A                  __ptext1 0366  
                __ptext2 06F2                  __ptext3 0640                  __ptext4 059E  
                __ptext5 05F0                  __ptext6 06E4                  __ptext7 06D0  
                __ptext8 0484                  __ptext9 0682          __size_of_printf 011E  
                _dpowers 0301                  _temp_D0 0016                  _temp_D1 0017  
                _temp_D2 0018                  _temp_D3 0019                  _temp_D4 001A  
                _temp_D5 001B                  _temp_D6 001C                  _temp_D7 001D  
   end_of_initialization 06C6            __Lmediumconst 0000                _RCSTAbits 000FAB  
                printf@c 003B                  printf@f 0030                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94                _TXSTAbits 000FAC  
           ??_InitDevice 0024              _BAUDCONbits 000FB8           __end_of_printf 0484  
    start_initialization 06BA       __end_of_InitDevice 0640         __CFG_OSC$IRCIO67 000000  
      __size_of_InitECAN 00B6        __size_of_InitUART 0014         __CFG_LPT1OSC$OFF 000000  
               ??_printf 0034        __size_of_adc_init 000E              __pbssCOMRAM 0001  
       ___lwdiv@dividend 0024                 ?___lwdiv 0024                 ?___lwmod 002B  
            __smallconst 0300         ___lwdiv@quotient 0028            ?_ECAN_Receive 0024  
         __size_of_putch 000C                 _LATAbits 000F89                _temp_EIDH 001F  
              _temp_EIDL 0020                _temp_SIDH 0021                _temp_SIDL 0022  
               _PIR3bits 000FA4                 _RXB0EIDH 000F63                 _RXB0EIDL 000F64  
       __CFG_WDTPS$32768 000000                 _RXB0SIDH 000F61                 _RXB0SIDL 000F62  
               _RXF0EIDH 000F02                 _RXF0EIDL 000F03                 _RXF0SIDH 000F00  
               _RXF0SIDL 000F01                 _TXB0EIDH 000F43                 _RXF1SIDH 000F04  
               _TXB0EIDL 000F44                 _RXF1SIDL 000F05                 _RXF2SIDH 000F08  
               _RXF2SIDL 000F09                 _RXF3SIDH 000F0C                 _RXF3SIDL 000F0D  
               _RXF4SIDH 000F10                 _RXF4SIDL 000F11                 _RXF5SIDH 000F14  
               _RXF5SIDL 000F15                 _RXM0EIDH 000F1A                 _RXM0EIDL 000F1B  
               _TXB0SIDH 000F41                 _RXM1EIDH 000F1E                 _TXB0SIDL 000F42  
               _RXM1EIDL 000F1F                 _RXM0SIDH 000F18                 _RXM0SIDL 000F19  
               _RXM1SIDH 000F1C                 _RXM1SIDL 000F1D               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               printf@flag 0037               printf@prec 0038  
         ??_ECAN_Receive 0024                 _InitECAN 0484                 _RecData0 0005  
               _RecData1 0006                 _RecData2 0007                 _RecData3 0008  
               _RecData4 0009                 _RecData5 000A                 _RecData6 000B  
               _RecData7 000C                 _InitUART 06D0                 __Hrparam 0000  
        _CAN_RX_Adress_H 0001          _CAN_RX_Adress_L 0002                 __Lrparam 0000  
             _CIOCONbits 000F73         __size_of___lwdiv 0052         __size_of___lwmod 0042  
               _adc_init 06E4          ___lwdiv@divisor 0026          _CAN_TX_Adress_H 0003  
        _CAN_TX_Adress_L 0004          ___lwdiv@counter 002A            __size_of_main 0064  
               _temp_DLC 001E                printf@val 0039              _RXB0CONbits 000F60  
              putch@byte 0024              _OSCTUNEbits 000F9B         ___lwmod@dividend 002B  
            _TXB0CONbits 000F40              _TXB1CONbits 000F30              _TXB2CONbits 000F20  
             _OSCCONbits 000FD3                 printf@ap 0035     __end_of_ECAN_Receive 06BA  
            _temperature 0023          ___lwmod@divisor 002D          ___lwmod@counter 002F  
